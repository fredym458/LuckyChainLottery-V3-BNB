{
	"id": "1469861cc84f0092faf5798d1e1c197e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"LotteryAutomation.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport \"./LotteryDraw.sol\";\nimport {AutomationCompatibleInterface} from \"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\";\n\nabstract contract LotteryAutomation is LotteryDraw, AutomationCompatibleInterface {\n    function checkUpkeep(bytes calldata) external view override returns (bool upkeepNeeded, bytes memory) {\n        upkeepNeeded = !pendingDraw;\n        return (upkeepNeeded, bytes(\"\"));\n    }\n\n    function performUpkeep(bytes calldata) external override {\n        require(msg.sender == automationRegistry, \"Not authorized\");\n        require(!pendingDraw, \"Draw already in progress or pending\");\n        _drawNumbers();\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {AutomationBase} from \"./AutomationBase.sol\";\nimport {AutomationCompatibleInterface} from \"./interfaces/AutomationCompatibleInterface.sol\";\n\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\n"
			},
			"LotteryDraw.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport \"./LotteryTickets.sol\";\nimport {VRFV2PlusClient} from \"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";  // Added for security\n\nabstract contract LotteryDraw is LotteryTickets, ReentrancyGuard {  // Inherits ReentrancyGuard\n    // Add reentrancy lock state variable\n    bool private _distributing;\n\n    function drawNumbers() public onlyOwner {\n        _drawNumbers(); \n    }\n\n    function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal override {\n        require(pendingDraw, \"No draw pending\");\n        \n        uint8[5] memory winning;\n        uint256 randomValue = randomWords[0];\n        uint8 i = 0;\n\n        while (i < 5) {\n            uint8 num = uint8((randomValue % 50) + 1);\n            bool exists = false;\n            for (uint j = 0; j < i; j++) {\n                if (winning[j] == num) {\n                    exists = true;\n                    break;\n                }\n            }\n            if (!exists) {\n                winning[i] = num;\n                i++;\n            }\n            randomValue = uint256(keccak256(abi.encodePacked(randomValue, i)));\n        }\n\n        allRounds[roundInProgress].winningNumbers = winning;\n        allRounds[roundInProgress].timestamp = block.timestamp;\n        winnerSubmissionDeadline = block.timestamp + 1 hours;\n        \n        emit DrawFulfilled(requestId, winning);\n    }\n\n    function submitWinners(\n        uint256 round,\n        address[] calldata _winners3,\n        address[] calldata _winners4,\n        address[] calldata _winners5\n    ) external onlyOwner {\n        require(round == roundInProgress, \"Invalid round\");\n        require(!winnersSubmitted, \"Winners already submitted\");\n        require(block.timestamp <= winnerSubmissionDeadline, \"Submission deadline passed\");\n        \n        Round storage r = allRounds[round];\n        \n        r.winners3 = _winners3;\n        r.winners4 = _winners4;\n        r.winners5 = _winners5;\n        \n        r.prizeAmount3 = (r.prizePool * 10) / 100;\n        r.prizeAmount4 = (r.prizePool * 20) / 100;\n        r.prizeAmount5 = (r.prizePool * 65) / 100;\n        \n        uint256 totalRollover = (r.prizePool * 5) / 100;\n        if (_winners3.length == 0) totalRollover += r.prizeAmount3;\n        if (_winners4.length == 0) totalRollover += r.prizeAmount4;\n        if (_winners5.length == 0) totalRollover += r.prizeAmount5;\n        r.rollover = totalRollover;\n        \n        winnersSubmitted = true;\n        emit WinnersSubmitted(round);\n    }\n\n    function distributePrizes(uint8 tier) external onlyOwner nonReentrant {  // Added nonReentrant modifier\n        require(!_distributing, \"Distribution in progress\");  // Additional custom lock\n        _distributing = true;  // Lock before processing\n        \n        require(winnersSubmitted, \"Winners not submitted\");\n        Round storage r = allRounds[roundInProgress];\n        require(!r.prizesDistributed, \"Prizes already distributed\");\n        \n        address[] storage winners = (tier == 3) ? r.winners3 :\n                                  (tier == 4) ? r.winners4 : \n                                  r.winners5;\n        \n        uint256 prizeAmount;\n        if (tier == 3) prizeAmount = r.prizeAmount3;\n        else if (tier == 4) prizeAmount = r.prizeAmount4;\n        else prizeAmount = r.prizeAmount5;\n        \n        // UPDATE STATE BEFORE EXTERNAL CALLS\n        if (tier == 5) {\n            r.prizesDistributed = true;\n            currentRound++;\n            winnersSubmitted = false;\n            pendingDraw = false;\n        }\n        \n        // Perform payments after state updates\n        if (winners.length > 0) {\n            uint256 share = prizeAmount / winners.length;\n            for(uint i = 0; i < winners.length; i++) {\n                // Use transfer instead of call for fixed gas\n                payable(winners[i]).transfer(share);\n            }\n        }\n        \n        _distributing = false;  // Release lock after processing\n        emit PrizesDistributed(roundInProgress, tier);\n    }\n\n    function _drawNumbers() internal  {\n        pendingDraw = true;\n        roundLocked[currentRound] = true;\n        roundInProgress = currentRound;\n        \n        allRounds[currentRound].prizePool = address(this).balance;\n\n        lastRequestId = s_vrfCoordinator.requestRandomWords(\n            VRFV2PlusClient.RandomWordsRequest({\n                keyHash: s_keyHash,\n                subId: s_subscriptionId,\n                requestConfirmations: requestConfirmations,\n                callbackGasLimit: callbackGasLimit,\n                numWords: numWords,\n                extraArgs: VRFV2PlusClient._argsToBytes(\n                    VRFV2PlusClient.ExtraArgsV1({nativePayment: true})\n                )\n            })\n        );\n\n        s_requestInitiator[lastRequestId] = msg.sender;\n        emit DrawRequested(lastRequestId);\n        emit DrawStarted(roundInProgress);\n    }\n\n    // function drawNumbersManually(uint8[5] memory manualNumbers) external onlyOwner {\n    //     require(_validateNumbers(manualNumbers), \"Invalid winning numbers\");\n        \n    //     // Lock current round\n    //     pendingDraw = true;\n    //     roundLocked[currentRound] = true;\n    //     roundInProgress = currentRound;\n        \n        \n    //     allRounds[currentRound].prizePool = address(this).balance;\n        \n        \n    //     // Set winning numbers\n    //     allRounds[currentRound].winningNumbers = manualNumbers;\n    //     allRounds[currentRound].timestamp = block.timestamp;\n        \n    //     // Set submission deadline\n    //     winnerSubmissionDeadline = block.timestamp + 1 hours;\n        \n    //     // Update last draw time\n    //     lastDrawTime = block.timestamp;\n        \n    //     // Simulate VRF completion\n    //     emit DrawStarted(currentRound);\n    //     emit DrawFulfilled(1234, manualNumbers);  // Dummy request ID 1234\n        \n    //     // Finalization will happen through distributePrizes(5)\n    // }  \n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// End consumer library.\nlibrary VRFV2PlusClient {\n  // extraArgs will evolve to support new features\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\"VRF ExtraArgsV1\"));\n  struct ExtraArgsV1 {\n    bool nativePayment;\n  }\n\n  struct RandomWordsRequest {\n    bytes32 keyHash;\n    uint256 subId;\n    uint16 requestConfirmations;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n    bytes extraArgs;\n  }\n\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\n  }\n}\n"
			},
			"LotteryTickets.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport \"./LotteryBase.sol\";\n\nabstract contract LotteryTickets is LotteryBase {\n    \n    function buyTicket(uint8[5] memory numbers) external payable whenNotPaused {\n        require(!roundLocked[currentRound], \"Round locked\");\n        require(msg.value == getusdTicketPriceInBNB(), \"Incorrect BNB amount\");\n        require(_validateNumbers(numbers), \"Numbers must be unique and between 1 and 50\");\n\n        uint256 ownerCut = msg.value / 10;\n       \n        (bool sent, ) = owner().call{value: ownerCut}(\"\");\n        require(sent, \"Transfer to owner failed\");\n\n        Ticket memory ticket = Ticket(msg.sender, numbers);\n        allRounds[currentRound].tickets.push(ticket);\n        playerTickets[currentRound][msg.sender].push(ticket);\n\n        totalTicketsPerDraw[currentRound]++;\n\n        if (!hasParticipated[currentRound][msg.sender]) {\n            hasParticipated[currentRound][msg.sender] = true;\n            uniqueParticipantsPerDraw[currentRound]++;\n        }\n\n        emit TicketPurchased(msg.sender, numbers, currentRound);\n    }\n\n    function buyTicketWithRandomNumbers() external payable whenNotPaused {\n        require(!roundLocked[currentRound], \"Round locked\");\n        require(msg.value == getusdTicketPriceInBNB(), \"Incorrect BNB amount\");\n\n        uint8[5] memory randomNumbers = _generateRandomNumbers();\n\n        uint256 ownerCut = msg.value / 10;\n       \n        (bool sent, ) = owner().call{value: ownerCut}(\"\");\n        require(sent, \"Transfer to owner failed\");\n\n        Ticket memory ticket = Ticket(msg.sender, randomNumbers);\n        allRounds[currentRound].tickets.push(ticket);\n        playerTickets[currentRound][msg.sender].push(ticket);\n\n        totalTicketsPerDraw[currentRound]++;\n\n        if (!hasParticipated[currentRound][msg.sender]) {\n            hasParticipated[currentRound][msg.sender] = true;\n            uniqueParticipantsPerDraw[currentRound]++;\n        }\n\n        emit TicketPurchased(msg.sender, randomNumbers, currentRound);\n    }\n\n    function bulkTicketsWithRandomNumbers(uint8 ticketCount) external payable whenNotPaused {\n        require(!roundLocked[currentRound], \"Round locked\");\n        require(ticketCount >= 1 && ticketCount <= 10, \"Must buy between 1 and 10 tickets\");\n\n        uint256 ticketPriceETH = getusdTicketPriceInBNB();\n        uint256 totalCost = ticketPriceETH * ticketCount;\n        require(msg.value == totalCost, \"Incorrect BNB amount\");\n\n        uint256 ownerCut = msg.value / 10;\n        \n        (bool sent, ) = owner().call{value: ownerCut}(\"\");\n        require(sent, \"Transfer to owner failed\");\n\n        for (uint8 i = 0; i < ticketCount; i++) {\n            uint8[5] memory randomNumbers = _generateRandomNumbers();\n\n            Ticket memory ticket = Ticket(msg.sender, randomNumbers);\n            allRounds[currentRound].tickets.push(ticket);\n            playerTickets[currentRound][msg.sender].push(ticket);\n\n            totalTicketsPerDraw[currentRound]++;\n            emit TicketPurchased(msg.sender, randomNumbers, currentRound);\n        }\n\n        if (!hasParticipated[currentRound][msg.sender]) {\n            hasParticipated[currentRound][msg.sender] = true;\n            uniqueParticipantsPerDraw[currentRound]++;\n        }\n    }\n\n    function getMyTickets(uint256 round) external view returns (address[] memory players, uint8[5][] memory numbersList) {\n        uint256 len = playerTickets[round][msg.sender].length;\n        players = new address[](len);\n        numbersList = new uint8[5][](len);\n\n        for (uint i = 0; i < len; i++) {\n            Ticket memory t = playerTickets[round][msg.sender][i];\n            players[i] = t.player;\n            numbersList[i] = t.numbers;\n        }\n    }\n\n    function _generateRandomNumbers() internal override returns (uint8[5] memory result) {\n        uint8 count = 0;\n        uint256 seed = uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender, nonce)));\n        nonce++;\n\n        while (count < 5) {\n            uint8 num = uint8((seed % 50) + 1);\n            bool exists = false;\n\n            for (uint8 j = 0; j < count; j++) {\n                if (result[j] == num) {\n                    exists = true;\n                    break;\n                }\n            }\n\n            if (!exists) {\n                result[count] = num;\n                count++;\n            }\n\n            seed = uint256(keccak256(abi.encodePacked(seed, count, nonce)));\n        }\n        return result;\n    }\n\n    function _validateNumbers(uint8[5] memory numbers) internal pure override returns (bool) {\n        for (uint i = 0; i < 5; i++) {\n            if (numbers[i] < 1 || numbers[i] > 50) return false;\n            for (uint j = 0; j < i; j++) {\n                if (numbers[i] == numbers[j]) return false;\n            }\n        }\n        return true;\n    }\n    \n}\n"
			},
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"
			},
			"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AutomationBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function _preventExecution() internal view {\n    // solhint-disable-next-line avoid-tx-origin\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    _preventExecution();\n    _;\n  }\n}\n"
			},
			"LotteryBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport {VRFConsumerBaseV2Plus} from \"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\";\nimport {AggregatorV3Interface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\";\n\nabstract contract LotteryBase is VRFConsumerBaseV2Plus {\n    // State variables and mappings\n    uint256 public usdTicketPrice = 10 * 10 ** 8;\n    uint256 public lastDrawTime;\n    uint256 public currentRound;\n    bool public paused;\n    uint256 public roundInProgress;\n    bool public winnersSubmitted;\n    uint256 public winnerSubmissionDeadline;\n    address public automationRegistry;\n    \n    struct Ticket {\n        address player;\n        uint8[5] numbers;\n    }\n\n    struct Round {\n        uint256 timestamp;\n        uint256 prizePool;\n        uint8[5] winningNumbers;\n        Ticket[] tickets;\n        address[] winners3;\n        address[] winners4;\n        address[] winners5;\n        bool prizesDistributed;\n        uint256 rollover;\n        uint256 prizeAmount3;\n        uint256 prizeAmount4;\n        uint256 prizeAmount5;\n    }\n\n    mapping(uint256 => uint256) public totalTicketsPerDraw;\n    mapping(uint256 => mapping(address => bool)) internal hasParticipated;\n    mapping(uint256 => uint256) public uniqueParticipantsPerDraw;\n    mapping(uint256 => Round) public allRounds;\n    mapping(uint256 => mapping(address => Ticket[])) public playerTickets;\n    mapping(uint256 => bool) public roundLocked;\n\n    AggregatorV3Interface internal priceFeed;\n    address vrfCoordinator = 0xd691f04bc0C9a24Edb78af9E005Cf85768F694C9;\n    uint256 public s_subscriptionId;\n    bytes32 public s_keyHash = 0x130dba50ad435d4ecc214aad0d5820474137bd68e7e77724144f27c3c377d3d4;\n    uint32 public callbackGasLimit = 500000;\n    uint16 public requestConfirmations = 3;\n    uint32 public numWords = 1;\n    uint256 public lastRequestId;\n    bool public pendingDraw;\n    mapping(uint256 => address) internal s_requestInitiator;\n    uint256 internal nonce;\n\n    // Events\n    event DrawRequested(uint256 indexed requestId);\n    event DrawFulfilled(uint256 indexed requestId, uint8[5] winningNumbers);\n    event TicketPurchased(address indexed player, uint8[5] numbers, uint256 round);\n    event EmergencyWithdrawal(uint256 amount, address recipient);\n    event PrizePoolFunded(address indexed sender, uint256 amount);\n    event DrawStarted(uint256 indexed round);\n    event WinnersSubmitted(uint256 indexed round);\n    event PrizesDistributed(uint256 indexed round, uint8 tier);\n\n    modifier whenNotPaused() {\n        require(!paused, \"Contract is paused\");\n        _;\n    }\n\n\n    constructor(uint256 subscriptionId) VRFConsumerBaseV2Plus(vrfCoordinator) {\n        priceFeed = AggregatorV3Interface(0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE);\n        lastDrawTime = block.timestamp;\n        currentRound = 1;\n        paused = false;\n        s_subscriptionId = subscriptionId;\n    }\n\n    function pause() external onlyOwner {\n        paused = true;\n    }\n\n    function unpause() external onlyOwner {\n        paused = false;\n    }\n\n    function fundPrizePool() external payable onlyOwner {\n        require(msg.value > 0, \"Must send BNB\");\n        emit PrizePoolFunded(msg.sender, msg.value);\n    }\n\n    function emergencyWithdraw() external onlyOwner {\n        uint256 contractBalance = address(this).balance;\n        require(contractBalance > 0, \"No funds to withdraw\");\n\n\n        (bool success, ) = owner().call{value: contractBalance}(\"\");\n        require(success, \"Transfer failed\");\n\n        emit EmergencyWithdrawal(contractBalance, owner());\n    }\n\n    // Getters **************************************************\n\n    function getusdTicketPriceInBNB() public view returns (uint256) {\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        require(price > 0, \"Invalid BNB price\");\n        uint256 bnbUsdPrice = uint256(price);\n        return (usdTicketPrice * 1e18) / bnbUsdPrice;\n    }\n\n\n    function getPrizePoolInUSD() public view returns (uint256) {\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        require(price > 0, \"Invalid BNB/USD price\");\n        uint256 bnbPrice = uint256(price);\n        uint256 usdValue = (address(this).balance * bnbPrice) / 1e26;\n        return usdValue;\n    }\n\n    function getWinningNumbers(uint256 round) external view returns (uint8[5] memory) {\n        return allRounds[round].winningNumbers;\n    }\n\n    function getWinningAddresses(uint256 round) external view returns (address[] memory winners3, address[] memory winners4, address[] memory winners5) {\n        Round storage r = allRounds[round];\n        return (r.winners3, r.winners4, r.winners5);\n    }\n\n    function getAllTicketsForRound(uint256 round) external view returns (address[] memory players, uint8[5][] memory numbersList) {\n        Round storage r = allRounds[round];\n        uint256 numTickets = r.tickets.length;\n        \n        players = new address[](numTickets);\n        numbersList = new uint8[5][](numTickets);\n        \n        for (uint i = 0; i < numTickets; i++) {\n            Ticket storage ticket = r.tickets[i];\n            players[i] = ticket.player;\n            numbersList[i] = ticket.numbers;\n        }\n    }\n\n    // Setters **************************************************\n\n    function setUsdTicketPrice(uint256 newPrice) external onlyOwner {\n        require(newPrice > 0, \"Price must be greater than 0\");\n        usdTicketPrice = newPrice;\n    }\n\n    function setCallbackGasLimit(uint32 _newLimit) external onlyOwner {\n        require(_newLimit >= 100000, \"Too low\");\n        callbackGasLimit = _newLimit;\n    }\n\n    function setAutomationRegistry(address _registry) external onlyOwner {\n        require(_registry != address(0), \"Invalid address\");\n        automationRegistry = _registry;\n    }\n\n    function setPendingDraw(bool value) external onlyOwner {\n        pendingDraw = value;\n    }\n\n    function setWinnersSubmitted(bool value) external onlyOwner {\n        winnersSubmitted = value;\n    }\n\n    function updateVRFSettings(address _coordinator, bytes32 _keyHash) external onlyOwner {\n        require(_coordinator != address(0), \"Invalid coordinator address\");\n        require(_keyHash != bytes32(0), \"Invalid key hash\");\n\n        vrfCoordinator = _coordinator;\n        s_keyHash = _keyHash;\n    }\n\n    function updatePriceFeed(address _newFeed) external onlyOwner {\n        require(_newFeed != address(0), \"Invalid price feed address\");\n        priceFeed = AggregatorV3Interface(_newFeed);\n    }\n\n    function updateSubscriptionId(uint256 newSubId) external onlyOwner {\n        require(newSubId > 0, \"Invalid subscription ID\");\n        s_subscriptionId = newSubId;\n    }\n\n\n\n\n    \n    function _validateNumbers(uint8[5] memory numbers) internal pure virtual returns (bool);\n    function _generateRandomNumbers() internal virtual returns (uint8[5] memory);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {IVRFCoordinatorV2Plus} from \"./interfaces/IVRFCoordinatorV2Plus.sol\";\nimport {IVRFMigratableConsumerV2Plus} from \"./interfaces/IVRFMigratableConsumerV2Plus.sol\";\nimport {ConfirmedOwner} from \"../../shared/access/ConfirmedOwner.sol\";\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords, extraArgs),\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\n *\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\n  error ZeroAddress();\n\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\n  // so that coordinator reference is updated after migration\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\n    if (_vrfCoordinator == address(0)) {\n      revert ZeroAddress();\n    }\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\n    if (msg.sender != address(s_vrfCoordinator)) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n\n  /**\n   * @inheritdoc IVRFMigratableConsumerV2Plus\n   */\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\n    if (_vrfCoordinator == address(0)) {\n      revert ZeroAddress();\n    }\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\n\n    emit CoordinatorSet(_vrfCoordinator);\n  }\n\n  modifier onlyOwnerOrCoordinator() {\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\n    }\n    _;\n  }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ConfirmedOwnerWithProposal} from \"./ConfirmedOwnerWithProposal.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\n}\n"
			},
			"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\n/// @notice method required to be implemented by all V2Plus consumers.\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\ninterface IVRFMigratableConsumerV2Plus {\n  event CoordinatorSet(address vrfCoordinator);\n\n  /// @notice Sets the VRF Coordinator address\n  /// @notice This method should only be callable by the coordinator or contract owner\n  function setCoordinator(address vrfCoordinator) external;\n}\n"
			},
			"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {VRFV2PlusClient} from \"../libraries/VRFV2PlusClient.sol\";\nimport {IVRFSubscriptionV2Plus} from \"./IVRFSubscriptionV2Plus.sol\";\n\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\n  /**\n   * @notice Request a set of random words.\n   * @param req - a struct containing following fields for randomness request:\n   * keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * requestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * extraArgs - abi-encoded extra args\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\n/// @notice related methods implemented by the V2Plus coordinator.\ninterface IVRFSubscriptionV2Plus {\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint256 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint256 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint256 subId, address to) external;\n\n  /**\n   * @notice Accept subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n   * @dev  to send Native with the call, for example:\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\n   */\n  function createSubscription() external returns (uint256 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return nativeBalance - native balance of the subscription in wei.\n   * @return reqCount - Requests count of subscription.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint256 subId\n  )\n    external\n    view\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint256 subId) external view returns (bool);\n\n  /**\n   * @notice Paginate through all active VRF subscriptions.\n   * @param startIndex index of the subscription to start from\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\n   */\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\n\n  /**\n   * @notice Fund a subscription with native.\n   * @param subId - ID of the subscription\n   * @notice This method expects msg.value to be greater than or equal to 0.\n   */\n  function fundSubscriptionWithNative(uint256 subId) external payable;\n}\n"
			},
			"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IOwnable} from \"../interfaces/IOwnable.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwnerWithProposal is IOwnable {\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(address indexed from, address indexed to);\n  event OwnershipTransferred(address indexed from, address indexed to);\n\n  constructor(address newOwner, address pendingOwner) {\n    // solhint-disable-next-line gas-custom-errors\n    require(newOwner != address(0), \"Cannot set owner to zero\");\n\n    s_owner = newOwner;\n    if (pendingOwner != address(0)) {\n      _transferOwnership(pendingOwner);\n    }\n  }\n\n  /// @notice Allows an owner to begin transferring ownership to a new address.\n  function transferOwnership(address to) public override onlyOwner {\n    _transferOwnership(to);\n  }\n\n  /// @notice Allows an ownership transfer to be completed by the recipient.\n  function acceptOwnership() external override {\n    // solhint-disable-next-line gas-custom-errors\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /// @notice Get the current owner\n  function owner() public view override returns (address) {\n    return s_owner;\n  }\n\n  /// @notice validate, transfer ownership, and emit relevant events\n  function _transferOwnership(address to) private {\n    // solhint-disable-next-line gas-custom-errors\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /// @notice validate access\n  function _validateOwnership() internal view {\n    // solhint-disable-next-line gas-custom-errors\n    require(msg.sender == s_owner, \"Only callable by owner\");\n  }\n\n  /// @notice Reverts if called by anyone other than the contract owner.\n  modifier onlyOwner() {\n    _validateOwnership();\n    _;\n  }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IOwnable {\n  function owner() external returns (address);\n\n  function transferOwnership(address recipient) external;\n\n  function acceptOwnership() external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
				"AutomationBase": {
					"abi": [
						{
							"inputs": [],
							"name": "OnlySimulatedBackend",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":57:691  contract AutomationBase {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":57:691  contract AutomationBase {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e9f1923127ec9eb74add253f18621f14ab5a62aad7da32422068276395b3cf1a64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220e9f1923127ec9eb74add253f18621f14ab5a62aad7da32422068276395b3cf1a64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 CALL SWAP3 BALANCE 0x27 0xEC SWAP15 0xB7 0x4A 0xDD 0x25 EXTCODEHASH XOR PUSH3 0x1F14AB GAS PUSH3 0xAAD7DA ORIGIN TIMESTAMP KECCAK256 PUSH9 0x276395B3CF1A64736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "57:634:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220e9f1923127ec9eb74add253f18621f14ab5a62aad7da32422068276395b3cf1a64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 CALL SWAP3 BALANCE 0x27 0xEC SWAP15 0xB7 0x4A 0xDD 0x25 EXTCODEHASH XOR PUSH3 0x1F14AB GAS PUSH3 0xAAD7DA ORIGIN TIMESTAMP KECCAK256 PUSH9 0x276395B3CF1A64736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "57:634:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_preventExecution()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e9f1923127ec9eb74add253f18621f14ab5a62aad7da32422068276395b3cf1a64736f6c63430008130033",
									".code": [
										{
											"begin": 57,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 691,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
								"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
								"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"LotteryAutomation.sol",
								"LotteryBase.sol",
								"LotteryDraw.sol",
								"LotteryTickets.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":\"AutomationBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
				"AutomationCompatible": {
					"abi": [
						{
							"inputs": [],
							"name": "OnlySimulatedBackend",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":\"AutomationCompatible\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"AutomationCompatibleInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
				"ConfirmedOwner": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "The ConfirmedOwner contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":240:381  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\n  mstore(0x40, 0x80)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":298:379  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":355:363  newOwner */\n  dup1\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":373:374  0 */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":598:620  newOwner != address(0) */\n  dup3\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":590:649  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  tag_7\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":511:513   */\n  0x20\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":590:649  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":493:514   */\n  mstore\n    /* \"#utility.yul\":550:552   */\n  0x18\n    /* \"#utility.yul\":530:548   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":523:553   */\n  mstore\n    /* \"#utility.yul\":589:615   */\n  0x43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000\n    /* \"#utility.yul\":569:587   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":562:616   */\n  mstore\n    /* \"#utility.yul\":633:651   */\n  0x64\n  add\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":590:649  require(newOwner != address(0), \"Cannot set owner to zero\") */\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_7:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":656:663  s_owner */\n  0x00\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":656:674  s_owner = newOwner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":684:710  pendingOwner != address(0) */\n  dup2\n  and\n  iszero\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":680:759  if (pendingOwner != address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":720:752  _transferOwnership(pendingOwner) */\n  tag_11\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":739:751  pendingOwner */\n  dup2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":720:738  _transferOwnership */\n  tag_12\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":720:752  _transferOwnership(pendingOwner) */\n  jump\t// in\ntag_11:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":481:763  constructor(address newOwner, address pendingOwner) {... */\n  pop\n  pop\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":298:379  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {} */\n  pop\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":240:381  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\n  jump(tag_19)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1536:1775  function _transferOwnership(address to) private {... */\ntag_12:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1655:1665  msg.sender */\n  caller\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1649:1665  to != msg.sender */\n  dup3\n  and\n  sub\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":864:866   */\n  0x20\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":846:867   */\n  mstore\n    /* \"#utility.yul\":903:905   */\n  0x17\n    /* \"#utility.yul\":883:901   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":876:906   */\n  mstore\n    /* \"#utility.yul\":942:967   */\n  0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n    /* \"#utility.yul\":922:940   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":915:968   */\n  mstore\n    /* \"#utility.yul\":985:1003   */\n  0x64\n  add\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_8\n    /* \"#utility.yul\":662:1009   */\n  jump\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\ntag_16:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1700:1714  s_pendingOwner */\n  0x01\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1700:1719  s_pendingOwner = to */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  dup2\n  and\n  swap2\n  dup3\n  or\n  swap1\n  swap3\n  sstore\n  0x00\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1758:1765  s_owner */\n  dup1\n  sload\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1731:1770  OwnershipTransferRequested(s_owner, to) */\n  mload(0x40)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1700:1719  s_pendingOwner = to */\n  swap3\n  swap4\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1758:1765  s_owner */\n  and\n  swap2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1731:1770  OwnershipTransferRequested(s_owner, to) */\n  0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n  swap2\n  swap1\n  log3\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1536:1775  function _transferOwnership(address to) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_21:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_22:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":662:1009   */\ntag_19:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":240:381  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":240:381  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79ba5097\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1026:1342  function acceptOwnership() external override {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1382:1463  function owner() public view override returns (address) {... */\n    tag_4:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1429:1436  address */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1451:1458  s_owner */\n      sload\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1382:1463  function owner() public view override returns (address) {... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1451:1458  s_owner */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":160:211   */\n      dup3\n      mstore\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1382:1463  function owner() public view override returns (address) {... */\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1382:1463  function owner() public view override returns (address) {... */\n      add\n      swap1\n      return\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":847:945  function transferOwnership(address to) public override onlyOwner {... */\n    tag_5:\n      tag_6\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1026:1342  function acceptOwnership() external override {... */\n    tag_7:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1150:1164  s_pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1136:1146  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1136:1164  msg.sender == s_pendingOwner */\n      eq\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1128:1191  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1128:1191  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      mstore\n        /* \"#utility.yul\":754:756   */\n      0x16\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n      shl(0x51, 0x26bab9ba10313290383937b837b9b2b21037bbb732b9)\n        /* \"#utility.yul\":773:791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":766:818   */\n      mstore\n        /* \"#utility.yul\":835:853   */\n      0x64\n      add\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1128:1191  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1198:1214  address oldOwner */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1217:1224  s_owner */\n      dup1\n      sload\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1240:1250  msg.sender */\n      caller\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1230:1250  s_owner = msg.sender */\n      dup1\n      dup4\n      and\n      dup3\n      or\n      dup5\n      sstore\n      0x01\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1256:1283  s_pendingOwner = address(0) */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1295:1337  OwnershipTransferred(oldOwner, msg.sender) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1217:1224  s_owner */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1240:1250  msg.sender */\n      swap1\n      swap2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1217:1224  s_owner */\n      dup4\n      swap2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1295:1337  OwnershipTransferred(oldOwner, msg.sender) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1071:1342  {... */\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1026:1342  function acceptOwnership() external override {... */\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":847:945  function transferOwnership(address to) public override onlyOwner {... */\n    tag_15:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2075:2095  _validateOwnership() */\n      tag_22\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2075:2093  _validateOwnership */\n      tag_23\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2075:2095  _validateOwnership() */\n      jump\t// in\n    tag_22:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":918:940  _transferOwnership(to) */\n      tag_25\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":937:939  to */\n      dup2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":918:936  _transferOwnership */\n      tag_26\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":918:940  _transferOwnership(to) */\n      jump\t// in\n    tag_25:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":847:945  function transferOwnership(address to) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1809:1971  function _validateOwnership() internal view {... */\n    tag_23:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1932:1939  s_owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1918:1928  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1918:1939  msg.sender == s_owner */\n      eq\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1910:1966  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1066:1068   */\n      0x20\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1910:1966  require(msg.sender == s_owner, \"Only callable by owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1048:1069   */\n      mstore\n        /* \"#utility.yul\":1105:1107   */\n      0x16\n        /* \"#utility.yul\":1085:1103   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1078:1108   */\n      mstore\n      shl(0x51, 0x27b7363c9031b0b63630b1363290313c9037bbb732b9)\n        /* \"#utility.yul\":1124:1142   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1117:1169   */\n      mstore\n        /* \"#utility.yul\":1186:1204   */\n      0x64\n      add\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1910:1966  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_18\n        /* \"#utility.yul\":864:1210   */\n      jump\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1910:1966  require(msg.sender == s_owner, \"Only callable by owner\") */\n    tag_28:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1809:1971  function _validateOwnership() internal view {... */\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1536:1775  function _transferOwnership(address to) private {... */\n    tag_26:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1655:1665  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1649:1665  to != msg.sender */\n      dup3\n      and\n      sub\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1417:1419   */\n      0x20\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1399:1420   */\n      mstore\n        /* \"#utility.yul\":1456:1458   */\n      0x17\n        /* \"#utility.yul\":1436:1454   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1429:1459   */\n      mstore\n        /* \"#utility.yul\":1495:1520   */\n      0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n        /* \"#utility.yul\":1475:1493   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1468:1521   */\n      mstore\n        /* \"#utility.yul\":1538:1556   */\n      0x64\n      add\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_18\n        /* \"#utility.yul\":1215:1562   */\n      jump\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\n    tag_32:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1700:1714  s_pendingOwner */\n      0x01\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1700:1719  s_pendingOwner = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1758:1765  s_owner */\n      dup1\n      sload\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1731:1770  OwnershipTransferRequested(s_owner, to) */\n      mload(0x40)\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1700:1719  s_pendingOwner = to */\n      swap3\n      swap4\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1758:1765  s_owner */\n      and\n      swap2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1731:1770  OwnershipTransferRequested(s_owner, to) */\n      0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n      swap2\n      swap1\n      log3\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1536:1775  function _transferOwnership(address to) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:508   */\n    tag_14:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":334:336   */\n      0x20\n        /* \"#utility.yul\":322:331   */\n      dup3\n        /* \"#utility.yul\":313:320   */\n      dup5\n        /* \"#utility.yul\":309:332   */\n      sub\n        /* \"#utility.yul\":305:337   */\n      slt\n        /* \"#utility.yul\":302:354   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":350:351   */\n      0x00\n        /* \"#utility.yul\":347:348   */\n      dup1\n        /* \"#utility.yul\":340:352   */\n      revert\n        /* \"#utility.yul\":302:354   */\n    tag_38:\n        /* \"#utility.yul\":376:399   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":428:459   */\n      dup2\n      and\n        /* \"#utility.yul\":418:460   */\n      dup2\n      eq\n        /* \"#utility.yul\":408:478   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":471:472   */\n      dup1\n        /* \"#utility.yul\":464:476   */\n      revert\n        /* \"#utility.yul\":408:478   */\n    tag_39:\n        /* \"#utility.yul\":497:502   */\n      swap4\n        /* \"#utility.yul\":222:508   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c24e99242e82746bfc1995c3e90b4729806df48ade9b8f8218f581e8f881e2db64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_145": {
									"entryPoint": null,
									"id": 145,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_87": {
									"entryPoint": null,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_229": {
									"entryPoint": 197,
									"id": 229,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1011:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:17"
															},
															"nodeType": "YulIf",
															"src": "105:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:17"
															},
															"nodeType": "YulIf",
															"src": "204:70:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:17",
														"type": ""
													}
												],
												"src": "14:290:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "483:174:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "500:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "511:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "493:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "534:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "545:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "530:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "530:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "550:2:17",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "573:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "584:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "569:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "569:18:17"
																	},
																	{
																		"hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "589:26:17",
																		"type": "",
																		"value": "Cannot set owner to zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:54:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:54:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "625:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "637:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "648:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "633:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "633:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "625:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "460:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "474:4:17",
														"type": ""
													}
												],
												"src": "309:348:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "836:173:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "853:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "864:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "846:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "846:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "846:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "887:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "898:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "883:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "883:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:2:17",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "926:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "937:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "922:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "922:18:17"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "942:25:17",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "915:53:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "915:53:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "977:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "989:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1000:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "985:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "985:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "977:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "813:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "827:4:17",
														"type": ""
													}
												],
												"src": "662:347:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot set owner to zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161045638038061045683398101604081905261002f9161016e565b8060006001600160a01b03821661008d5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100bd576100bd816100c5565b50505061019e565b336001600160a01b0382160361011d5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610084565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561018057600080fd5b81516001600160a01b038116811461019757600080fd5b9392505050565b6102a9806101ad6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea2646970667358221220c24e99242e82746bfc1995c3e90b4729806df48ade9b8f8218f581e8f881e2db64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x456 CODESIZE SUB DUP1 PUSH2 0x456 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x16E JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH2 0xBD JUMPI PUSH2 0xBD DUP2 PUSH2 0xC5 JUMP JUMPDEST POP POP POP PUSH2 0x19E JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x11D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x84 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2A9 DUP1 PUSH2 0x1AD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0x4E SWAP10 0x24 0x2E DUP3 PUSH21 0x6BFC1995C3E90B4729806DF48ADE9B8F8218F581E8 0xF8 DUP2 0xE2 0xDB PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "240:141:3:-:0;;;298:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;355:8;373:1;-1:-1:-1;;;;;598:22:4;;590:59;;;;-1:-1:-1;;;590:59:4;;511:2:17;590:59:4;;;493:21:17;550:2;530:18;;;523:30;589:26;569:18;;;562:54;633:18;;590:59:4;;;;;;;;;656:7;:18;;-1:-1:-1;;;;;;656:18:4;-1:-1:-1;;;;;656:18:4;;;;;;;;;;684:26;;;680:79;;720:32;739:12;720:18;:32::i;:::-;481:282;;298:81:3;240:141;;1536:239:4;1655:10;-1:-1:-1;;;;;1649:16:4;;;1641:52;;;;-1:-1:-1;;;1641:52:4;;864:2:17;1641:52:4;;;846:21:17;903:2;883:18;;;876:30;942:25;922:18;;;915:53;985:18;;1641:52:4;662:347:17;1641:52:4;1700:14;:19;;-1:-1:-1;;;;;;1700:19:4;-1:-1:-1;;;;;1700:19:4;;;;;;;;;-1:-1:-1;1758:7:4;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:4;1536:239;:::o;14:290:17:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:17;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:17:o;662:347::-;240:141:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_229": {
									"entryPoint": 410,
									"id": 229,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_validateOwnership_242": {
									"entryPoint": 325,
									"id": 242,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptOwnership_195": {
									"entryPoint": 130,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_205": {
									"entryPoint": null,
									"id": 205,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_159": {
									"entryPoint": 305,
									"id": 159,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1564:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:17",
														"type": ""
													}
												],
												"src": "14:203:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "292:216:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "338:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "347:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "350:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "305:32:17"
															},
															"nodeType": "YulIf",
															"src": "302:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "363:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "376:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "367:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "471:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "464:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "421:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "432:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "447:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "452:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "443:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "443:11:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "456:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "439:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "439:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "428:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "411:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:50:17"
															},
															"nodeType": "YulIf",
															"src": "408:70:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "487:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "497:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "258:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "269:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "281:6:17",
														"type": ""
													}
												],
												"src": "222:286:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "687:172:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "715:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "697:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "749:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "734:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:17",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "727:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "777:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "788:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:18:17"
																	},
																	{
																		"hexValue": "4d7573742062652070726f706f736564206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "793:24:17",
																		"type": "",
																		"value": "Must be proposed owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:52:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "766:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "827:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "839:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "850:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "827:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "664:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "678:4:17",
														"type": ""
													}
												],
												"src": "513:346:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1038:172:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1055:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1066:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1048:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1048:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1048:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1089:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1100:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1105:2:17",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1078:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1139:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1124:18:17"
																	},
																	{
																		"hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1144:24:17",
																		"type": "",
																		"value": "Only callable by owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1117:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:52:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1117:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1178:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1190:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1201:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1186:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1178:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1015:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1029:4:17",
														"type": ""
													}
												],
												"src": "864:346:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:173:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1406:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1399:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1440:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1451:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1436:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1436:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1456:2:17",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1429:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1429:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1479:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1490:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1475:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1475:18:17"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1495:25:17",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1468:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1468:53:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1468:53:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1530:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1542:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1553:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1538:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1538:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1530:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1380:4:17",
														"type": ""
													}
												],
												"src": "1215:347:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Must be proposed owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only callable by owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea2646970667358221220c24e99242e82746bfc1995c3e90b4729806df48ade9b8f8218f581e8f881e2db64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0x4E SWAP10 0x24 0x2E DUP3 PUSH21 0x6BFC1995C3E90B4729806DF48ADE9B8F8218F581E8 0xF8 DUP2 0xE2 0xDB PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "240:141:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:316:4;;;:::i;:::-;;1382:81;1429:7;1451;1382:81;;;-1:-1:-1;;;;;1451:7:4;;;160:51:17;;1382:81:4;;;;;148:2:17;1382:81:4;;;847:98;;;;;;:::i;:::-;;:::i;1026:316::-;1150:14;;-1:-1:-1;;;;;1150:14:4;1136:10;:28;1128:63;;;;-1:-1:-1;;;1128:63:4;;715:2:17;1128:63:4;;;697:21:17;754:2;734:18;;;727:30;-1:-1:-1;;;773:18:17;;;766:52;835:18;;1128:63:4;;;;;;;;;1198:16;1217:7;;1240:10;-1:-1:-1;;;;;;1230:20:4;;;;;;;-1:-1:-1;1256:27:4;;;;;;;1295:42;;-1:-1:-1;;;;;1217:7:4;;;;1240:10;;1217:7;;1295:42;;;1071:271;1026:316::o;847:98::-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;1809:162::-;1932:7;;-1:-1:-1;;;;;1932:7:4;1918:10;:21;1910:56;;;;-1:-1:-1;;;1910:56:4;;1066:2:17;1910:56:4;;;1048:21:17;1105:2;1085:18;;;1078:30;-1:-1:-1;;;1124:18:17;;;1117:52;1186:18;;1910:56:4;864:346:17;1910:56:4;1809:162::o;1536:239::-;1655:10;-1:-1:-1;;;;;1649:16:4;;;1641:52;;;;-1:-1:-1;;;1641:52:4;;1417:2:17;1641:52:4;;;1399:21:17;1456:2;1436:18;;;1429:30;1495:25;1475:18;;;1468:53;1538:18;;1641:52:4;1215:347:17;1641:52:4;1700:14;:19;;-1:-1:-1;;;;;;1700:19:4;-1:-1:-1;;;;;1700:19:4;;;;;;;;;-1:-1:-1;1758:7:4;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:4;1536:239;:::o;222:286:17:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:17;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:17:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "136200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "52277",
								"owner()": "2292",
								"transferOwnership(address)": "30423"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 240,
									"end": 381,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 240,
									"end": 381,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 240,
									"end": 381,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 298,
									"end": 379,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 379,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 298,
									"end": 379,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 298,
									"end": 379,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 298,
									"end": 379,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 298,
									"end": 379,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 298,
									"end": 379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 298,
									"end": 379,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 298,
									"end": 379,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 355,
									"end": 363,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 373,
									"end": 374,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 598,
									"end": 620,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 598,
									"end": 620,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 590,
									"end": 649,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 590,
									"end": 649,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 590,
									"end": 649,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 511,
									"end": 513,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 590,
									"end": 649,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 590,
									"end": 649,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 493,
									"end": 514,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 17,
									"value": "18"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 530,
									"end": 548,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 523,
									"end": 553,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 589,
									"end": 615,
									"name": "PUSH",
									"source": 17,
									"value": "43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "PUSH",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 569,
									"end": 587,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 562,
									"end": 616,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 633,
									"end": 651,
									"name": "PUSH",
									"source": 17,
									"value": "64"
								},
								{
									"begin": 633,
									"end": 651,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 590,
									"end": 649,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 590,
									"end": 649,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 590,
									"end": 649,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 590,
									"end": 649,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 656,
									"end": 663,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 674,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 656,
									"end": 674,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 656,
									"end": 674,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 684,
									"end": 710,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 684,
									"end": 710,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 684,
									"end": 710,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 680,
									"end": 759,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 680,
									"end": 759,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 720,
									"end": 752,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 739,
									"end": 751,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 720,
									"end": 738,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 720,
									"end": 752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 720,
									"end": 752,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 720,
									"end": 752,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 298,
									"end": 379,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 240,
									"end": 381,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 240,
									"end": 381,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1775,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1536,
									"end": 1775,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1655,
									"end": 1665,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1649,
									"end": 1665,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1649,
									"end": 1665,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1649,
									"end": 1665,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 864,
									"end": 866,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 846,
									"end": 867,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 903,
									"end": 905,
									"name": "PUSH",
									"source": 17,
									"value": "17"
								},
								{
									"begin": 883,
									"end": 901,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 883,
									"end": 901,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 883,
									"end": 901,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 876,
									"end": 906,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 942,
									"end": 967,
									"name": "PUSH",
									"source": 17,
									"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
								},
								{
									"begin": 922,
									"end": 940,
									"name": "PUSH",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 922,
									"end": 940,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 922,
									"end": 940,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 915,
									"end": 968,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 985,
									"end": 1003,
									"name": "PUSH",
									"source": 17,
									"value": "64"
								},
								{
									"begin": 985,
									"end": 1003,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 662,
									"end": 1009,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1758,
									"end": 1765,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1765,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1731,
									"end": 1770,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1731,
									"end": 1770,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1765,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1765,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1731,
									"end": 1770,
									"name": "PUSH",
									"source": 4,
									"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
								},
								{
									"begin": 1731,
									"end": 1770,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1731,
									"end": 1770,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 1536,
									"end": 1775,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1536,
									"end": 1775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 662,
									"end": 1009,
									"name": "tag",
									"source": 17,
									"value": "19"
								},
								{
									"begin": 662,
									"end": 1009,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 240,
									"end": 381,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 381,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 240,
									"end": 381,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 381,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 381,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 240,
									"end": 381,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 381,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c24e99242e82746bfc1995c3e90b4729806df48ade9b8f8218f581e8f881e2db64736f6c63430008130033",
									".code": [
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 3,
											"value": "79BA5097"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 240,
											"end": 381,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1026,
											"end": 1342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1458,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1451,
											"end": 1458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1458,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1458,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 847,
											"end": 945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 847,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 847,
											"end": 945,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 847,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 847,
											"end": 945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 847,
											"end": 945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 847,
											"end": 945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1164,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1150,
											"end": 1164,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1150,
											"end": 1164,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1146,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1164,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26BAB9BA10313290383937B837B9B2B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 773,
											"end": 791,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 766,
											"end": 818,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 835,
											"end": 853,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 835,
											"end": 853,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1214,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1250,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1256,
											"end": 1283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1283,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1283,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1283,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1295,
											"end": 1337,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1295,
											"end": 1337,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1295,
											"end": 1337,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1295,
											"end": 1337,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1295,
											"end": 1337,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 1071,
											"end": 1342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 847,
											"end": 945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2075,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2095,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2075,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 918,
											"end": 940,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 937,
											"end": 939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 918,
											"end": 936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 918,
											"end": 940,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 918,
											"end": 940,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 918,
											"end": 940,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1971,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1809,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 1939,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1068,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1069,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1105,
											"end": 1107,
											"name": "PUSH",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1078,
											"end": 1108,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C9031B0B63630B1363290313C9037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1142,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 1124,
											"end": 1142,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1124,
											"end": 1142,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1117,
											"end": 1169,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1186,
											"end": 1204,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 1186,
											"end": 1204,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 864,
											"end": 1210,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1775,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1536,
											"end": 1775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1665,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1649,
											"end": 1665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1665,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1419,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1420,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1458,
											"name": "PUSH",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1429,
											"end": 1459,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1495,
											"end": 1520,
											"name": "PUSH",
											"source": 17,
											"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
										},
										{
											"begin": 1475,
											"end": 1493,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 1475,
											"end": 1493,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1475,
											"end": 1493,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1468,
											"end": 1521,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1215,
											"end": 1562,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1714,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1731,
											"end": 1770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1770,
											"name": "PUSH",
											"source": 4,
											"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
										},
										{
											"begin": 1731,
											"end": 1770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1731,
											"end": 1770,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1775,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 222,
											"end": 508,
											"name": "tag",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 336,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 313,
											"end": 320,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 309,
											"end": 332,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 305,
											"end": 337,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 302,
											"end": 354,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 302,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 340,
											"end": 352,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 302,
											"end": 354,
											"name": "tag",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 376,
											"end": 399,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 376,
											"end": 399,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 428,
											"end": 459,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 418,
											"end": 460,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 418,
											"end": 460,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 408,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 464,
											"end": 476,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 408,
											"end": 478,
											"name": "tag",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 222,
											"end": 508,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
								"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
								"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"LotteryAutomation.sol",
								"LotteryBase.sol",
								"LotteryDraw.sol",
								"LotteryTickets.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 97,
								"contract": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 99,
								"contract": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address."
							}
						},
						"notice": "A contract with helpers for basic contract ownership.",
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
				"ConfirmedOwnerWithProposal": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "The ConfirmedOwner contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":216:2109  contract ConfirmedOwnerWithProposal is IOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":481:763  constructor(address newOwner, address pendingOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":598:620  newOwner != address(0) */\n  dup3\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":590:649  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":590:649  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":678:699   */\n  mstore\n    /* \"#utility.yul\":735:737   */\n  0x18\n    /* \"#utility.yul\":715:733   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":708:738   */\n  mstore\n    /* \"#utility.yul\":774:800   */\n  0x43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000\n    /* \"#utility.yul\":754:772   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":747:801   */\n  mstore\n    /* \"#utility.yul\":818:836   */\n  0x64\n  add\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":590:649  require(newOwner != address(0), \"Cannot set owner to zero\") */\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":656:663  s_owner */\n  0x00\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":656:674  s_owner = newOwner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":684:710  pendingOwner != address(0) */\n  dup2\n  and\n  iszero\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":680:759  if (pendingOwner != address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":720:752  _transferOwnership(pendingOwner) */\n  tag_10\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":739:751  pendingOwner */\n  dup2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":720:738  _transferOwnership */\n  tag_11\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":720:752  _transferOwnership(pendingOwner) */\n  jump\t// in\ntag_10:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":481:763  constructor(address newOwner, address pendingOwner) {... */\n  pop\n  pop\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":216:2109  contract ConfirmedOwnerWithProposal is IOwnable {... */\n  jump(tag_18)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1536:1775  function _transferOwnership(address to) private {... */\ntag_11:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1655:1665  msg.sender */\n  caller\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1649:1665  to != msg.sender */\n  dup3\n  and\n  sub\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_14\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1049:1051   */\n  0x20\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1031:1052   */\n  mstore\n    /* \"#utility.yul\":1088:1090   */\n  0x17\n    /* \"#utility.yul\":1068:1086   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1061:1091   */\n  mstore\n    /* \"#utility.yul\":1127:1152   */\n  0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n    /* \"#utility.yul\":1107:1125   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1100:1153   */\n  mstore\n    /* \"#utility.yul\":1170:1188   */\n  0x64\n  add\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_7\n    /* \"#utility.yul\":847:1194   */\n  jump\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\ntag_14:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1700:1714  s_pendingOwner */\n  0x01\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1700:1719  s_pendingOwner = to */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  dup2\n  and\n  swap2\n  dup3\n  or\n  swap1\n  swap3\n  sstore\n  0x00\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1758:1765  s_owner */\n  dup1\n  sload\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1731:1770  OwnershipTransferRequested(s_owner, to) */\n  mload(0x40)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1700:1719  s_pendingOwner = to */\n  swap3\n  swap4\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1758:1765  s_owner */\n  and\n  swap2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1731:1770  OwnershipTransferRequested(s_owner, to) */\n  0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n  swap2\n  swap1\n  log3\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1536:1775  function _transferOwnership(address to) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_17:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_20:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_22:\n    /* \"#utility.yul\":375:415   */\n  tag_23\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_24\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":847:1194   */\ntag_18:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":216:2109  contract ConfirmedOwnerWithProposal is IOwnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":216:2109  contract ConfirmedOwnerWithProposal is IOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79ba5097\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1026:1342  function acceptOwnership() external override {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1382:1463  function owner() public view override returns (address) {... */\n    tag_4:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1429:1436  address */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1451:1458  s_owner */\n      sload\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1382:1463  function owner() public view override returns (address) {... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1451:1458  s_owner */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":160:211   */\n      dup3\n      mstore\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1382:1463  function owner() public view override returns (address) {... */\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1382:1463  function owner() public view override returns (address) {... */\n      add\n      swap1\n      return\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":847:945  function transferOwnership(address to) public override onlyOwner {... */\n    tag_5:\n      tag_6\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1026:1342  function acceptOwnership() external override {... */\n    tag_7:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1150:1164  s_pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1136:1146  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1136:1164  msg.sender == s_pendingOwner */\n      eq\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1128:1191  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1128:1191  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      mstore\n        /* \"#utility.yul\":754:756   */\n      0x16\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n      shl(0x51, 0x26bab9ba10313290383937b837b9b2b21037bbb732b9)\n        /* \"#utility.yul\":773:791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":766:818   */\n      mstore\n        /* \"#utility.yul\":835:853   */\n      0x64\n      add\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1128:1191  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1198:1214  address oldOwner */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1217:1224  s_owner */\n      dup1\n      sload\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1240:1250  msg.sender */\n      caller\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1230:1250  s_owner = msg.sender */\n      dup1\n      dup4\n      and\n      dup3\n      or\n      dup5\n      sstore\n      0x01\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1256:1283  s_pendingOwner = address(0) */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1295:1337  OwnershipTransferred(oldOwner, msg.sender) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1217:1224  s_owner */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1240:1250  msg.sender */\n      swap1\n      swap2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1217:1224  s_owner */\n      dup4\n      swap2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1295:1337  OwnershipTransferred(oldOwner, msg.sender) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1071:1342  {... */\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1026:1342  function acceptOwnership() external override {... */\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":847:945  function transferOwnership(address to) public override onlyOwner {... */\n    tag_15:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2075:2095  _validateOwnership() */\n      tag_22\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2075:2093  _validateOwnership */\n      tag_23\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2075:2095  _validateOwnership() */\n      jump\t// in\n    tag_22:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":918:940  _transferOwnership(to) */\n      tag_25\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":937:939  to */\n      dup2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":918:936  _transferOwnership */\n      tag_26\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":918:940  _transferOwnership(to) */\n      jump\t// in\n    tag_25:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":847:945  function transferOwnership(address to) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1809:1971  function _validateOwnership() internal view {... */\n    tag_23:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1932:1939  s_owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1918:1928  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1918:1939  msg.sender == s_owner */\n      eq\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1910:1966  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1066:1068   */\n      0x20\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1910:1966  require(msg.sender == s_owner, \"Only callable by owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1048:1069   */\n      mstore\n        /* \"#utility.yul\":1105:1107   */\n      0x16\n        /* \"#utility.yul\":1085:1103   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1078:1108   */\n      mstore\n      shl(0x51, 0x27b7363c9031b0b63630b1363290313c9037bbb732b9)\n        /* \"#utility.yul\":1124:1142   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1117:1169   */\n      mstore\n        /* \"#utility.yul\":1186:1204   */\n      0x64\n      add\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1910:1966  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_18\n        /* \"#utility.yul\":864:1210   */\n      jump\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1910:1966  require(msg.sender == s_owner, \"Only callable by owner\") */\n    tag_28:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1809:1971  function _validateOwnership() internal view {... */\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1536:1775  function _transferOwnership(address to) private {... */\n    tag_26:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1655:1665  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1649:1665  to != msg.sender */\n      dup3\n      and\n      sub\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1417:1419   */\n      0x20\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1399:1420   */\n      mstore\n        /* \"#utility.yul\":1456:1458   */\n      0x17\n        /* \"#utility.yul\":1436:1454   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1429:1459   */\n      mstore\n        /* \"#utility.yul\":1495:1520   */\n      0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n        /* \"#utility.yul\":1475:1493   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1468:1521   */\n      mstore\n        /* \"#utility.yul\":1538:1556   */\n      0x64\n      add\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_18\n        /* \"#utility.yul\":1215:1562   */\n      jump\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1641:1693  require(to != msg.sender, \"Cannot transfer to self\") */\n    tag_32:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1700:1714  s_pendingOwner */\n      0x01\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1700:1719  s_pendingOwner = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1758:1765  s_owner */\n      dup1\n      sload\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1731:1770  OwnershipTransferRequested(s_owner, to) */\n      mload(0x40)\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1700:1719  s_pendingOwner = to */\n      swap3\n      swap4\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1758:1765  s_owner */\n      and\n      swap2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1731:1770  OwnershipTransferRequested(s_owner, to) */\n      0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n      swap2\n      swap1\n      log3\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1536:1775  function _transferOwnership(address to) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:508   */\n    tag_14:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":334:336   */\n      0x20\n        /* \"#utility.yul\":322:331   */\n      dup3\n        /* \"#utility.yul\":313:320   */\n      dup5\n        /* \"#utility.yul\":309:332   */\n      sub\n        /* \"#utility.yul\":305:337   */\n      slt\n        /* \"#utility.yul\":302:354   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":350:351   */\n      0x00\n        /* \"#utility.yul\":347:348   */\n      dup1\n        /* \"#utility.yul\":340:352   */\n      revert\n        /* \"#utility.yul\":302:354   */\n    tag_38:\n        /* \"#utility.yul\":376:399   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":428:459   */\n      dup2\n      and\n        /* \"#utility.yul\":418:460   */\n      dup2\n      eq\n        /* \"#utility.yul\":408:478   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":471:472   */\n      dup1\n        /* \"#utility.yul\":464:476   */\n      revert\n        /* \"#utility.yul\":408:478   */\n    tag_39:\n        /* \"#utility.yul\":497:502   */\n      swap4\n        /* \"#utility.yul\":222:508   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209506668243a994881816ff8bfcbb8e8b07d4ac34e3d095e3aec5c5fe1fa75b0f64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_145": {
									"entryPoint": null,
									"id": 145,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_229": {
									"entryPoint": 193,
									"id": 229,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1196:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:17"
															},
															"nodeType": "YulIf",
															"src": "115:70:17"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:17",
														"type": ""
													}
												],
												"src": "14:177:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:195:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "352:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:17"
															},
															"nodeType": "YulIf",
															"src": "304:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "365:50:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:40:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "424:59:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:49:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:17",
														"type": ""
													}
												],
												"src": "196:293:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "668:174:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "685:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "696:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "678:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "678:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "719:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "730:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:17",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "708:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "708:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "758:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "769:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "754:18:17"
																	},
																	{
																		"hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "774:26:17",
																		"type": "",
																		"value": "Cannot set owner to zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:54:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "747:54:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "810:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "822:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "818:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "810:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "645:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "659:4:17",
														"type": ""
													}
												],
												"src": "494:348:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1021:173:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1038:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1049:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1031:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1031:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1072:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1083:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1068:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1068:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1088:2:17",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1061:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1061:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1061:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1111:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1122:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1107:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1107:18:17"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1127:25:17",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:53:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:53:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1162:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1174:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1185:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1170:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1170:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1162:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "998:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1012:4:17",
														"type": ""
													}
												],
												"src": "847:347:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot set owner to zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161047138038061047183398101604081905261002f91610186565b6001600160a01b03821661008a5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100ba576100ba816100c1565b50506101b9565b336001600160a01b038216036101195760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610081565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80516001600160a01b038116811461018157600080fd5b919050565b6000806040838503121561019957600080fd5b6101a28361016a565b91506101b06020840161016a565b90509250929050565b6102a9806101c86000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea26469706673582212209506668243a994881816ff8bfcbb8e8b07d4ac34e3d095e3aec5c5fe1fa75b0f64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x471 CODESIZE SUB DUP1 PUSH2 0x471 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH2 0xBA JUMPI PUSH2 0xBA DUP2 PUSH2 0xC1 JUMP JUMPDEST POP POP PUSH2 0x1B9 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x119 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x81 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A2 DUP4 PUSH2 0x16A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0 PUSH1 0x20 DUP5 ADD PUSH2 0x16A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A9 DUP1 PUSH2 0x1C8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 MOD PUSH7 0x8243A994881816 SELFDESTRUCT DUP12 0xFC 0xBB DUP15 DUP12 SMOD 0xD4 0xAC CALLVALUE 0xE3 0xD0 SWAP6 0xE3 0xAE 0xC5 0xC5 INVALID 0x1F 0xA7 JUMPDEST 0xF PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "216:1893:4:-:0;;;481:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;598:22:4;;590:59;;;;-1:-1:-1;;;590:59:4;;696:2:17;590:59:4;;;678:21:17;735:2;715:18;;;708:30;774:26;754:18;;;747:54;818:18;;590:59:4;;;;;;;;;656:7;:18;;-1:-1:-1;;;;;;656:18:4;-1:-1:-1;;;;;656:18:4;;;;;;;;;;684:26;;;680:79;;720:32;739:12;720:18;:32::i;:::-;481:282;;216:1893;;1536:239;1655:10;-1:-1:-1;;;;;1649:16:4;;;1641:52;;;;-1:-1:-1;;;1641:52:4;;1049:2:17;1641:52:4;;;1031:21:17;1088:2;1068:18;;;1061:30;1127:25;1107:18;;;1100:53;1170:18;;1641:52:4;847:347:17;1641:52:4;1700:14;:19;;-1:-1:-1;;;;;;1700:19:4;-1:-1:-1;;;;;1700:19:4;;;;;;;;;-1:-1:-1;1758:7:4;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:4;1536:239;:::o;14:177:17:-;93:13;;-1:-1:-1;;;;;135:31:17;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;847:347::-;216:1893:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_229": {
									"entryPoint": 410,
									"id": 229,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_validateOwnership_242": {
									"entryPoint": 325,
									"id": 242,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptOwnership_195": {
									"entryPoint": 130,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_205": {
									"entryPoint": null,
									"id": 205,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_159": {
									"entryPoint": 305,
									"id": 159,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1564:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:17",
														"type": ""
													}
												],
												"src": "14:203:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "292:216:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "338:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "347:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "350:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "305:32:17"
															},
															"nodeType": "YulIf",
															"src": "302:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "363:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "376:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "367:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "471:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "464:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "421:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "432:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "447:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "452:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "443:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "443:11:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "456:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "439:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "439:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "428:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "411:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:50:17"
															},
															"nodeType": "YulIf",
															"src": "408:70:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "487:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "497:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "258:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "269:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "281:6:17",
														"type": ""
													}
												],
												"src": "222:286:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "687:172:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "715:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "697:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "749:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "734:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:17",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "727:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "777:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "788:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:18:17"
																	},
																	{
																		"hexValue": "4d7573742062652070726f706f736564206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "793:24:17",
																		"type": "",
																		"value": "Must be proposed owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:52:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "766:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "827:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "839:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "850:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "827:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "664:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "678:4:17",
														"type": ""
													}
												],
												"src": "513:346:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1038:172:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1055:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1066:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1048:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1048:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1048:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1089:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1100:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1105:2:17",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1078:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1139:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1124:18:17"
																	},
																	{
																		"hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1144:24:17",
																		"type": "",
																		"value": "Only callable by owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1117:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:52:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1117:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1178:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1190:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1201:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1186:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1178:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1015:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1029:4:17",
														"type": ""
													}
												],
												"src": "864:346:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:173:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1406:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1399:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1440:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1451:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1436:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1436:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1456:2:17",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1429:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1429:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1479:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1490:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1475:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1475:18:17"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1495:25:17",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1468:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1468:53:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1468:53:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1530:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1542:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1553:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1538:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1538:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1530:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1380:4:17",
														"type": ""
													}
												],
												"src": "1215:347:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Must be proposed owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only callable by owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea26469706673582212209506668243a994881816ff8bfcbb8e8b07d4ac34e3d095e3aec5c5fe1fa75b0f64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 MOD PUSH7 0x8243A994881816 SELFDESTRUCT DUP12 0xFC 0xBB DUP15 DUP12 SMOD 0xD4 0xAC CALLVALUE 0xE3 0xD0 SWAP6 0xE3 0xAE 0xC5 0xC5 INVALID 0x1F 0xA7 JUMPDEST 0xF PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "216:1893:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:316;;;:::i;:::-;;1382:81;1429:7;1451;1382:81;;;-1:-1:-1;;;;;1451:7:4;;;160:51:17;;1382:81:4;;;;;148:2:17;1382:81:4;;;847:98;;;;;;:::i;:::-;;:::i;1026:316::-;1150:14;;-1:-1:-1;;;;;1150:14:4;1136:10;:28;1128:63;;;;-1:-1:-1;;;1128:63:4;;715:2:17;1128:63:4;;;697:21:17;754:2;734:18;;;727:30;-1:-1:-1;;;773:18:17;;;766:52;835:18;;1128:63:4;;;;;;;;;1198:16;1217:7;;1240:10;-1:-1:-1;;;;;;1230:20:4;;;;;;;-1:-1:-1;1256:27:4;;;;;;;1295:42;;-1:-1:-1;;;;;1217:7:4;;;;1240:10;;1217:7;;1295:42;;;1071:271;1026:316::o;847:98::-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;1809:162::-;1932:7;;-1:-1:-1;;;;;1932:7:4;1918:10;:21;1910:56;;;;-1:-1:-1;;;1910:56:4;;1066:2:17;1910:56:4;;;1048:21:17;1105:2;1085:18;;;1078:30;-1:-1:-1;;;1124:18:17;;;1117:52;1186:18;;1910:56:4;864:346:17;1910:56:4;1809:162::o;1536:239::-;1655:10;-1:-1:-1;;;;;1649:16:4;;;1641:52;;;;-1:-1:-1;;;1641:52:4;;1417:2:17;1641:52:4;;;1399:21:17;1456:2;1436:18;;;1429:30;1495:25;1475:18;;;1468:53;1538:18;;1641:52:4;1215:347:17;1641:52:4;1700:14;:19;;-1:-1:-1;;;;;;1700:19:4;-1:-1:-1;;;;;1700:19:4;;;;;;;;;-1:-1:-1;1758:7:4;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:4;1536:239;:::o;222:286:17:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:17;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:17:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "136200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "52277",
								"owner()": "2292",
								"transferOwnership(address)": "30423"
							},
							"internal": {
								"_transferOwnership(address)": "infinite",
								"_validateOwnership()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 2109,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 216,
									"end": 2109,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 216,
									"end": 2109,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 481,
									"end": 763,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 481,
									"end": 763,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 481,
									"end": 763,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 481,
									"end": 763,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 481,
									"end": 763,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 481,
									"end": 763,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 481,
									"end": 763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 481,
									"end": 763,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 598,
									"end": 620,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 598,
									"end": 620,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 590,
									"end": 649,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 590,
									"end": 649,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 590,
									"end": 649,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 590,
									"end": 649,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 590,
									"end": 649,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 678,
									"end": 699,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 17,
									"value": "18"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 715,
									"end": 733,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 708,
									"end": 738,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 774,
									"end": 800,
									"name": "PUSH",
									"source": 17,
									"value": "43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 754,
									"end": 772,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 747,
									"end": 801,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 818,
									"end": 836,
									"name": "PUSH",
									"source": 17,
									"value": "64"
								},
								{
									"begin": 818,
									"end": 836,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 590,
									"end": 649,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 590,
									"end": 649,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 590,
									"end": 649,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 590,
									"end": 649,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 590,
									"end": 649,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 656,
									"end": 663,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 674,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 656,
									"end": 674,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 656,
									"end": 674,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 656,
									"end": 674,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 684,
									"end": 710,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 684,
									"end": 710,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 684,
									"end": 710,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 680,
									"end": 759,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 680,
									"end": 759,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 720,
									"end": 752,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 739,
									"end": 751,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 720,
									"end": 738,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 720,
									"end": 752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 720,
									"end": 752,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 720,
									"end": 752,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 481,
									"end": 763,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 216,
									"end": 2109,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 216,
									"end": 2109,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1536,
									"end": 1775,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1536,
									"end": 1775,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1655,
									"end": 1665,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1649,
									"end": 1665,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1649,
									"end": 1665,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1649,
									"end": 1665,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1031,
									"end": 1052,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1088,
									"end": 1090,
									"name": "PUSH",
									"source": 17,
									"value": "17"
								},
								{
									"begin": 1068,
									"end": 1086,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1068,
									"end": 1086,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1068,
									"end": 1086,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1061,
									"end": 1091,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1127,
									"end": 1152,
									"name": "PUSH",
									"source": 17,
									"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
								},
								{
									"begin": 1107,
									"end": 1125,
									"name": "PUSH",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 1107,
									"end": 1125,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1107,
									"end": 1125,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1153,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1170,
									"end": 1188,
									"name": "PUSH",
									"source": 17,
									"value": "64"
								},
								{
									"begin": 1170,
									"end": 1188,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 847,
									"end": 1194,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1641,
									"end": 1693,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1758,
									"end": 1765,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1765,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1731,
									"end": 1770,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1731,
									"end": 1770,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1719,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1765,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1765,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1731,
									"end": 1770,
									"name": "PUSH",
									"source": 4,
									"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
								},
								{
									"begin": 1731,
									"end": 1770,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1731,
									"end": 1770,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 1536,
									"end": 1775,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1536,
									"end": 1775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 17,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "17"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "17"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 847,
									"end": 1194,
									"name": "tag",
									"source": 17,
									"value": "18"
								},
								{
									"begin": 847,
									"end": 1194,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 216,
									"end": 2109,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 2109,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 216,
									"end": 2109,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 2109,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 2109,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 216,
									"end": 2109,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 2109,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209506668243a994881816ff8bfcbb8e8b07d4ac34e3d095e3aec5c5fe1fa75b0f64736f6c63430008130033",
									".code": [
										{
											"begin": 216,
											"end": 2109,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "PUSH",
											"source": 4,
											"value": "79BA5097"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 2109,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1026,
											"end": 1342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1458,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1451,
											"end": 1458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1458,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1458,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1463,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 847,
											"end": 945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 847,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 847,
											"end": 945,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 847,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 847,
											"end": 945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 847,
											"end": 945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 847,
											"end": 945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1026,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1164,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1150,
											"end": 1164,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1150,
											"end": 1164,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1146,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1164,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26BAB9BA10313290383937B837B9B2B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 773,
											"end": 791,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 766,
											"end": 818,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 835,
											"end": 853,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 835,
											"end": 853,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1128,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1214,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1250,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1256,
											"end": 1283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1283,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1283,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1283,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1295,
											"end": 1337,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1295,
											"end": 1337,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1295,
											"end": 1337,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1295,
											"end": 1337,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1295,
											"end": 1337,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 1071,
											"end": 1342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 847,
											"end": 945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2075,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2095,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2075,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 918,
											"end": 940,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 937,
											"end": 939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 918,
											"end": 936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 918,
											"end": 940,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 918,
											"end": 940,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 918,
											"end": 940,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 847,
											"end": 945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1971,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1809,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 1939,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1068,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1069,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1105,
											"end": 1107,
											"name": "PUSH",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1078,
											"end": 1108,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C9031B0B63630B1363290313C9037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1142,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 1124,
											"end": 1142,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1124,
											"end": 1142,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1117,
											"end": 1169,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1186,
											"end": 1204,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 1186,
											"end": 1204,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 864,
											"end": 1210,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1910,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1775,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1536,
											"end": 1775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1665,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1649,
											"end": 1665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1665,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1419,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1420,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1458,
											"name": "PUSH",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1429,
											"end": 1459,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1495,
											"end": 1520,
											"name": "PUSH",
											"source": 17,
											"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
										},
										{
											"begin": 1475,
											"end": 1493,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 1475,
											"end": 1493,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1475,
											"end": 1493,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1468,
											"end": 1521,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1215,
											"end": 1562,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1641,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1714,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1731,
											"end": 1770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1719,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1770,
											"name": "PUSH",
											"source": 4,
											"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
										},
										{
											"begin": 1731,
											"end": 1770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1731,
											"end": 1770,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1775,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 222,
											"end": 508,
											"name": "tag",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 336,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 313,
											"end": 320,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 309,
											"end": 332,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 305,
											"end": 337,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 302,
											"end": 354,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 302,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 340,
											"end": 352,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 302,
											"end": 354,
											"name": "tag",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 376,
											"end": 399,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 376,
											"end": 399,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 428,
											"end": 459,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 418,
											"end": 460,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 418,
											"end": 460,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 408,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 464,
											"end": 476,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 408,
											"end": 478,
											"name": "tag",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 222,
											"end": 508,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
								"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
								"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"LotteryAutomation.sol",
								"LotteryBase.sol",
								"LotteryDraw.sol",
								"LotteryTickets.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 97,
								"contract": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 99,
								"contract": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address."
							}
						},
						"notice": "A contract with helpers for basic contract ownership.",
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol": {
				"VRFConsumerBaseV2Plus": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "want",
									"type": "address"
								}
							],
							"name": "OnlyCoordinatorCanFulfill",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "coordinator",
									"type": "address"
								}
							],
							"name": "OnlyOwnerOrCoordinator",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vrfCoordinator",
									"type": "address"
								}
							],
							"name": "CoordinatorSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "randomWords",
									"type": "uint256[]"
								}
							],
							"name": "rawFulfillRandomWords",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_vrfCoordinator",
							"outputs": [
								{
									"internalType": "contract IVRFCoordinatorV2Plus",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vrfCoordinator",
									"type": "address"
								}
							],
							"name": "setCoordinator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinatorV2Plus.2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBaseV2Plus, and caninitialize VRFConsumerBaseV2Plus's attributes in their constructor asshown:contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {constructor(<other arguments>, address _vrfCoordinator, address _subOwner)VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create a subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords, extraArgs),see (IVRFCoordinatorV2Plus for a description of the arguments).Once the VRFCoordinatorV2Plus has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).",
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_vrfCoordinator": "address of VRFCoordinator contract"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"rawFulfillRandomWords(uint256,uint256[])": "1fe543e3",
							"s_vrfCoordinator()": "9eccacf6",
							"setCoordinator(address)": "8ea98117",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinatorV2Plus.2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBaseV2Plus, and caninitialize VRFConsumerBaseV2Plus's attributes in their constructor asshown:contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {constructor(<other arguments>, address _vrfCoordinator, address _subOwner)VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create a subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords, extraArgs),see (IVRFCoordinatorV2Plus for a description of the arguments).Once the VRFCoordinatorV2Plus has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":\"VRFConsumerBaseV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0915715c5ad87db245b527514302b6da362894944299dd65c1382ca07b13d4\",\"dweb:/ipfs/QmQ2xcF7FQB33DAcpXuh4Jpx1PFniEjWbPMRatRgyp3UJW\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 97,
								"contract": "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 99,
								"contract": "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 345,
								"contract": "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus",
								"label": "s_vrfCoordinator",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IVRFCoordinatorV2Plus)494"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IVRFCoordinatorV2Plus)494": {
								"encoding": "inplace",
								"label": "contract IVRFCoordinatorV2Plus",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"setCoordinator(address)": {
								"notice": "Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address."
							}
						},
						"notice": "****************************************************************************Interface for contracts using VRF randomness *****************************************************************************",
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol": {
				"IVRFCoordinatorV2Plus": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								}
							],
							"name": "acceptSubscriptionOwnerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								}
							],
							"name": "addConsumer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "cancelSubscription",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "createSubscription",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								}
							],
							"name": "fundSubscriptionWithNative",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "startIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxCount",
									"type": "uint256"
								}
							],
							"name": "getActiveSubscriptionIds",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								}
							],
							"name": "getSubscription",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "balance",
									"type": "uint96"
								},
								{
									"internalType": "uint96",
									"name": "nativeBalance",
									"type": "uint96"
								},
								{
									"internalType": "uint64",
									"name": "reqCount",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "consumers",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								}
							],
							"name": "pendingRequestExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								}
							],
							"name": "removeConsumer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "keyHash",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "subId",
											"type": "uint256"
										},
										{
											"internalType": "uint16",
											"name": "requestConfirmations",
											"type": "uint16"
										},
										{
											"internalType": "uint32",
											"name": "callbackGasLimit",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "numWords",
											"type": "uint32"
										},
										{
											"internalType": "bytes",
											"name": "extraArgs",
											"type": "bytes"
										}
									],
									"internalType": "struct VRFV2PlusClient.RandomWordsRequest",
									"name": "req",
									"type": "tuple"
								}
							],
							"name": "requestRandomWords",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "requestSubscriptionOwnerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"acceptSubscriptionOwnerTransfer(uint256)": {
								"details": "will revert if original owner of subId has not requested that msg.sender become the new owner.",
								"params": {
									"subId": "- ID of the subscription"
								}
							},
							"addConsumer(uint256,address)": {
								"params": {
									"consumer": "- New consumer which can use the subscription",
									"subId": "- ID of the subscription"
								}
							},
							"cancelSubscription(uint256,address)": {
								"params": {
									"subId": "- ID of the subscription",
									"to": "- Where to send the remaining LINK to"
								}
							},
							"createSubscription()": {
								"details": "You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);",
								"returns": {
									"subId": "- A unique subscription id."
								}
							},
							"fundSubscriptionWithNative(uint256)": {
								"params": {
									"subId": "- ID of the subscription"
								}
							},
							"getActiveSubscriptionIds(uint256,uint256)": {
								"details": "the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state",
								"params": {
									"maxCount": "maximum number of subscriptions to return, 0 to return all",
									"startIndex": "index of the subscription to start from"
								}
							},
							"getSubscription(uint256)": {
								"params": {
									"subId": "- ID of the subscription"
								},
								"returns": {
									"balance": "- LINK balance of the subscription in juels.",
									"consumers": "- list of consumer address which are able to use this subscription.",
									"nativeBalance": "- native balance of the subscription in wei.",
									"owner": "- owner of the subscription.",
									"reqCount": "- Requests count of subscription."
								}
							},
							"removeConsumer(uint256,address)": {
								"params": {
									"consumer": "- Consumer to remove from the subscription",
									"subId": "- ID of the subscription"
								}
							},
							"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))": {
								"params": {
									"req": "- a struct containing following fields for randomness request: keyHash - Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost. subId  - The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash. requestConfirmations - How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200]. callbackGasLimit - How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit] numWords - The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle. extraArgs - abi-encoded extra args"
								},
								"returns": {
									"requestId": "- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."
								}
							},
							"requestSubscriptionOwnerTransfer(uint256,address)": {
								"params": {
									"newOwner": "- proposed new owner of the subscription",
									"subId": "- ID of the subscription"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptSubscriptionOwnerTransfer(uint256)": "b2a7cac5",
							"addConsumer(uint256,address)": "bec4c08c",
							"cancelSubscription(uint256,address)": "0ae09540",
							"createSubscription()": "a21a23e4",
							"fundSubscriptionWithNative(uint256)": "95b55cfc",
							"getActiveSubscriptionIds(uint256,uint256)": "aefb212f",
							"getSubscription(uint256)": "dc311dd3",
							"pendingRequestExists(uint256)": "41af6c87",
							"removeConsumer(uint256,address)": "cb631797",
							"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))": "9b1c385e",
							"requestSubscriptionOwnerTransfer(uint256,address)": "dac83d29"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"requestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct VRFV2PlusClient.RandomWordsRequest\",\"name\":\"req\",\"type\":\"tuple\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"params\":{\"req\":\"- a struct containing following fields for randomness request: keyHash - Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost. subId  - The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash. requestConfirmations - How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200]. callbackGasLimit - How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit] numWords - The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle. extraArgs - abi-encoded extra args\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":\"IVRFCoordinatorV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptSubscriptionOwnerTransfer(uint256)": {
								"notice": "Accept subscription owner transfer."
							},
							"addConsumer(uint256,address)": {
								"notice": "Add a consumer to a VRF subscription."
							},
							"cancelSubscription(uint256,address)": {
								"notice": "Cancel a subscription"
							},
							"createSubscription()": {
								"notice": "Create a VRF subscription."
							},
							"fundSubscriptionWithNative(uint256)": {
								"notice": "Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."
							},
							"getActiveSubscriptionIds(uint256,uint256)": {
								"notice": "Paginate through all active VRF subscriptions."
							},
							"getSubscription(uint256)": {
								"notice": "Get a VRF subscription."
							},
							"removeConsumer(uint256,address)": {
								"notice": "Remove a consumer from a VRF subscription."
							},
							"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))": {
								"notice": "Request a set of random words."
							},
							"requestSubscriptionOwnerTransfer(uint256,address)": {
								"notice": "Request subscription owner transfer."
							}
						},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol": {
				"IVRFMigratableConsumerV2Plus": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vrfCoordinator",
									"type": "address"
								}
							],
							"name": "CoordinatorSet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vrfCoordinator",
									"type": "address"
								}
							],
							"name": "setCoordinator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This interface is designed to be used in VRFConsumerBaseV2Plus.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setCoordinator(address)": "8ea98117"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface is designed to be used in VRFConsumerBaseV2Plus.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"}},\"notice\":\"The IVRFMigratableConsumerV2Plus interface defines themethod required to be implemented by all V2Plus consumers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":\"IVRFMigratableConsumerV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setCoordinator(address)": {
								"notice": "Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"
							}
						},
						"notice": "The IVRFMigratableConsumerV2Plus interface defines themethod required to be implemented by all V2Plus consumers.",
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol": {
				"IVRFSubscriptionV2Plus": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								}
							],
							"name": "acceptSubscriptionOwnerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								}
							],
							"name": "addConsumer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "cancelSubscription",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "createSubscription",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								}
							],
							"name": "fundSubscriptionWithNative",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "startIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxCount",
									"type": "uint256"
								}
							],
							"name": "getActiveSubscriptionIds",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								}
							],
							"name": "getSubscription",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "balance",
									"type": "uint96"
								},
								{
									"internalType": "uint96",
									"name": "nativeBalance",
									"type": "uint96"
								},
								{
									"internalType": "uint64",
									"name": "reqCount",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "consumers",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								}
							],
							"name": "pendingRequestExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								}
							],
							"name": "removeConsumer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "subId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "requestSubscriptionOwnerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"acceptSubscriptionOwnerTransfer(uint256)": {
								"details": "will revert if original owner of subId has not requested that msg.sender become the new owner.",
								"params": {
									"subId": "- ID of the subscription"
								}
							},
							"addConsumer(uint256,address)": {
								"params": {
									"consumer": "- New consumer which can use the subscription",
									"subId": "- ID of the subscription"
								}
							},
							"cancelSubscription(uint256,address)": {
								"params": {
									"subId": "- ID of the subscription",
									"to": "- Where to send the remaining LINK to"
								}
							},
							"createSubscription()": {
								"details": "You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);",
								"returns": {
									"subId": "- A unique subscription id."
								}
							},
							"fundSubscriptionWithNative(uint256)": {
								"params": {
									"subId": "- ID of the subscription"
								}
							},
							"getActiveSubscriptionIds(uint256,uint256)": {
								"details": "the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state",
								"params": {
									"maxCount": "maximum number of subscriptions to return, 0 to return all",
									"startIndex": "index of the subscription to start from"
								}
							},
							"getSubscription(uint256)": {
								"params": {
									"subId": "- ID of the subscription"
								},
								"returns": {
									"balance": "- LINK balance of the subscription in juels.",
									"consumers": "- list of consumer address which are able to use this subscription.",
									"nativeBalance": "- native balance of the subscription in wei.",
									"owner": "- owner of the subscription.",
									"reqCount": "- Requests count of subscription."
								}
							},
							"removeConsumer(uint256,address)": {
								"params": {
									"consumer": "- Consumer to remove from the subscription",
									"subId": "- ID of the subscription"
								}
							},
							"requestSubscriptionOwnerTransfer(uint256,address)": {
								"params": {
									"newOwner": "- proposed new owner of the subscription",
									"subId": "- ID of the subscription"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptSubscriptionOwnerTransfer(uint256)": "b2a7cac5",
							"addConsumer(uint256,address)": "bec4c08c",
							"cancelSubscription(uint256,address)": "0ae09540",
							"createSubscription()": "a21a23e4",
							"fundSubscriptionWithNative(uint256)": "95b55cfc",
							"getActiveSubscriptionIds(uint256,uint256)": "aefb212f",
							"getSubscription(uint256)": "dc311dd3",
							"pendingRequestExists(uint256)": "41af6c87",
							"removeConsumer(uint256,address)": "cb631797",
							"requestSubscriptionOwnerTransfer(uint256,address)": "dac83d29"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"notice\":\"The IVRFSubscriptionV2Plus interface defines the subscriptionrelated methods implemented by the V2Plus coordinator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":\"IVRFSubscriptionV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptSubscriptionOwnerTransfer(uint256)": {
								"notice": "Accept subscription owner transfer."
							},
							"addConsumer(uint256,address)": {
								"notice": "Add a consumer to a VRF subscription."
							},
							"cancelSubscription(uint256,address)": {
								"notice": "Cancel a subscription"
							},
							"createSubscription()": {
								"notice": "Create a VRF subscription."
							},
							"fundSubscriptionWithNative(uint256)": {
								"notice": "Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."
							},
							"getActiveSubscriptionIds(uint256,uint256)": {
								"notice": "Paginate through all active VRF subscriptions."
							},
							"getSubscription(uint256)": {
								"notice": "Get a VRF subscription."
							},
							"removeConsumer(uint256,address)": {
								"notice": "Remove a consumer from a VRF subscription."
							},
							"requestSubscriptionOwnerTransfer(uint256,address)": {
								"notice": "Request subscription owner transfer."
							}
						},
						"notice": "The IVRFSubscriptionV2Plus interface defines the subscriptionrelated methods implemented by the V2Plus coordinator.",
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol": {
				"VRFV2PlusClient": {
					"abi": [
						{
							"inputs": [],
							"name": "EXTRA_ARGS_V1_TAG",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":82:640  library VRFV2PlusClient {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":82:640  library VRFV2PlusClient {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xf7514ab4\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":161:240  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\"VRF ExtraArgsV1\")) */\n    tag_2:\n      tag_3\n        /* \"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":211:239  keccak256(\"VRF ExtraArgsV1\") */\n      0x92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa\n        /* \"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":161:240  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\"VRF ExtraArgsV1\")) */\n      dup2\n      jump\n    tag_3:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":184:217   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":166:218   */\n      dup2\n      mstore\n        /* \"#utility.yul\":154:156   */\n      0x20\n        /* \"#utility.yul\":139:157   */\n      add\n        /* \"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":161:240  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\"VRF ExtraArgsV1\")) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n\n    auxdata: 0xa264697066735822122007ad63c56d4b9ef8982dfad4cfc40842231f1e1393a05dde8956ddf21c22db9a64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60b1610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f7514ab4146038575b600080fd5b605e7f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa81565b6040516001600160e01b0319909116815260200160405180910390f3fea264697066735822122007ad63c56d4b9ef8982dfad4cfc40842231f1e1393a05dde8956ddf21c22db9a64736f6c63430008130033",
							"opcodes": "PUSH1 0xB1 PUSH2 0x38 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF7514AB4 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5E PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xAD PUSH4 0xC56D4B9E 0xF8 SWAP9 0x2D STATICCALL 0xD4 0xCF 0xC4 ADDMOD TIMESTAMP 0x23 0x1F 0x1E SGT SWAP4 LOG0 0x5D 0xDE DUP10 JUMP 0xDD CALLCODE SHR 0x22 0xDB SWAP11 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "82:558:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;82:558:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@EXTRA_ARGS_V1_TAG_607": {
									"entryPoint": null,
									"id": 607,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:226:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "121:103:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "131:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "143:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "154:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "139:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "139:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "131:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "188:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "200:3:17",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "205:10:17",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "196:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "196:20:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "184:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:33:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:52:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:52:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "90:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "101:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "112:4:17",
														"type": ""
													}
												],
												"src": "14:210:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f7514ab4146038575b600080fd5b605e7f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa81565b6040516001600160e01b0319909116815260200160405180910390f3fea264697066735822122007ad63c56d4b9ef8982dfad4cfc40842231f1e1393a05dde8956ddf21c22db9a64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF7514AB4 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5E PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xAD PUSH4 0xC56D4B9E 0xF8 SWAP9 0x2D STATICCALL 0xD4 0xCF 0xC4 ADDMOD TIMESTAMP 0x23 0x1F 0x1E SGT SWAP4 LOG0 0x5D 0xDE DUP10 JUMP 0xDD CALLCODE SHR 0x22 0xDB SWAP11 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "82:558:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;161:79;;211:28;161:79;;;;;-1:-1:-1;;;;;;184:33:17;;;166:52;;154:2;139:18;161:79:11;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "35400",
								"executionCost": "118",
								"totalCost": "35518"
							},
							"external": {
								"EXTRA_ARGS_V1_TAG()": "169"
							},
							"internal": {
								"_argsToBytes(struct VRFV2PlusClient.ExtraArgsV1 memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 82,
									"end": 640,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82,
									"end": 640,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82,
									"end": 640,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 82,
									"end": 640,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 640,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 82,
									"end": 640,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 640,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 82,
									"end": 640,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 640,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 640,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 82,
									"end": 640,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 82,
									"end": 640,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 640,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 640,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 640,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 82,
									"end": 640,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 82,
									"end": 640,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122007ad63c56d4b9ef8982dfad4cfc40842231f1e1393a05dde8956ddf21c22db9a64736f6c63430008130033",
									".code": [
										{
											"begin": 82,
											"end": 640,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 82,
											"end": 640,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 82,
											"end": 640,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 82,
											"end": 640,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 82,
											"end": 640,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 82,
											"end": 640,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 82,
											"end": 640,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 640,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 82,
											"end": 640,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 82,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 82,
											"end": 640,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 82,
											"end": 640,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 640,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 82,
											"end": 640,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 82,
											"end": 640,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 82,
											"end": 640,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 82,
											"end": 640,
											"name": "PUSH",
											"source": 11,
											"value": "F7514AB4"
										},
										{
											"begin": 82,
											"end": 640,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 82,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 82,
											"end": 640,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 82,
											"end": 640,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 82,
											"end": 640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 82,
											"end": 640,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 640,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 82,
											"end": 640,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 161,
											"end": 240,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 161,
											"end": 240,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 161,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 211,
											"end": 239,
											"name": "PUSH",
											"source": 11,
											"value": "92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA"
										},
										{
											"begin": 161,
											"end": 240,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 161,
											"end": 240,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 161,
											"end": 240,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 161,
											"end": 240,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 161,
											"end": 240,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 240,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 184,
											"end": 217,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 184,
											"end": 217,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 184,
											"end": 217,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 166,
											"end": 218,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 166,
											"end": 218,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 154,
											"end": 156,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 139,
											"end": 157,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 161,
											"end": 240,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 240,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 161,
											"end": 240,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 161,
											"end": 240,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 161,
											"end": 240,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 161,
											"end": 240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 161,
											"end": 240,
											"name": "RETURN",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
								"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
								"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol",
								"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"LotteryAutomation.sol",
								"LotteryBase.sol",
								"LotteryDraw.sol",
								"LotteryTickets.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"EXTRA_ARGS_V1_TAG()": "f7514ab4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EXTRA_ARGS_V1_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":\"VRFV2PlusClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 650,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"LotteryAutomation.sol": {
				"LotteryAutomation": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "want",
									"type": "address"
								}
							],
							"name": "OnlyCoordinatorCanFulfill",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "coordinator",
									"type": "address"
								}
							],
							"name": "OnlyOwnerOrCoordinator",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vrfCoordinator",
									"type": "address"
								}
							],
							"name": "CoordinatorSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint8[5]",
									"name": "winningNumbers",
									"type": "uint8[5]"
								}
							],
							"name": "DrawFulfilled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "DrawRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "DrawStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "EmergencyWithdrawal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PrizePoolFunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "tier",
									"type": "uint8"
								}
							],
							"name": "PrizesDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8[5]",
									"name": "numbers",
									"type": "uint8[5]"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "TicketPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "WinnersSubmitted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allRounds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizePool",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "prizesDistributed",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "rollover",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizeAmount3",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizeAmount4",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizeAmount5",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "automationRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "ticketCount",
									"type": "uint8"
								}
							],
							"name": "bulkTicketsWithRandomNumbers",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8[5]",
									"name": "numbers",
									"type": "uint8[5]"
								}
							],
							"name": "buyTicket",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTicketWithRandomNumbers",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "callbackGasLimit",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "tier",
									"type": "uint8"
								}
							],
							"name": "distributePrizes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "drawNumbers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fundPrizePool",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "getAllTicketsForRound",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "players",
									"type": "address[]"
								},
								{
									"internalType": "uint8[5][]",
									"name": "numbersList",
									"type": "uint8[5][]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "getMyTickets",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "players",
									"type": "address[]"
								},
								{
									"internalType": "uint8[5][]",
									"name": "numbersList",
									"type": "uint8[5][]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrizePoolInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "getWinningAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "winners3",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "winners4",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "winners5",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "getWinningNumbers",
							"outputs": [
								{
									"internalType": "uint8[5]",
									"name": "",
									"type": "uint8[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getusdTicketPriceInBNB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastDrawTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRequestId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "numWords",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingDraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "playerTickets",
							"outputs": [
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "randomWords",
									"type": "uint256[]"
								}
							],
							"name": "rawFulfillRandomWords",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestConfirmations",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "roundInProgress",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "roundLocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_keyHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_subscriptionId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_vrfCoordinator",
							"outputs": [
								{
									"internalType": "contract IVRFCoordinatorV2Plus",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_registry",
									"type": "address"
								}
							],
							"name": "setAutomationRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_newLimit",
									"type": "uint32"
								}
							],
							"name": "setCallbackGasLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vrfCoordinator",
									"type": "address"
								}
							],
							"name": "setCoordinator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "setPendingDraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newPrice",
									"type": "uint256"
								}
							],
							"name": "setUsdTicketPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "setWinnersSubmitted",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "_winners3",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "_winners4",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "_winners5",
									"type": "address[]"
								}
							],
							"name": "submitWinners",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "totalTicketsPerDraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uniqueParticipantsPerDraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newFeed",
									"type": "address"
								}
							],
							"name": "updatePriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newSubId",
									"type": "uint256"
								}
							],
							"name": "updateSubscriptionId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_coordinator",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_keyHash",
									"type": "bytes32"
								}
							],
							"name": "updateVRFSettings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdTicketPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerSubmissionDeadline",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnersSubmitted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"allRounds(uint256)": "e1bf07b7",
							"automationRegistry()": "5dc228a0",
							"bulkTicketsWithRandomNumbers(uint8)": "dc65c843",
							"buyTicket(uint8[5])": "cc957f28",
							"buyTicketWithRandomNumbers()": "b933dcba",
							"callbackGasLimit()": "24f74697",
							"checkUpkeep(bytes)": "6e04ff0d",
							"currentRound()": "8a19c8bc",
							"distributePrizes(uint8)": "61edf9b2",
							"drawNumbers()": "676c902f",
							"emergencyWithdraw()": "db2e21bc",
							"fundPrizePool()": "88b2f7c3",
							"getAllTicketsForRound(uint256)": "85705ad3",
							"getMyTickets(uint256)": "c81d9217",
							"getPrizePoolInUSD()": "6a91da2b",
							"getWinningAddresses(uint256)": "75b26d21",
							"getWinningNumbers(uint256)": "9d5c35ae",
							"getusdTicketPriceInBNB()": "d11532b7",
							"lastDrawTime()": "5cbbd635",
							"lastRequestId()": "fc2a88c3",
							"numWords()": "7ccfd7fc",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"pendingDraw()": "88ed5d64",
							"performUpkeep(bytes)": "4585e33b",
							"playerTickets(uint256,address,uint256)": "dc7fe6a5",
							"rawFulfillRandomWords(uint256,uint256[])": "1fe543e3",
							"requestConfirmations()": "b0fb162f",
							"roundInProgress()": "ea5ab0ba",
							"roundLocked(uint256)": "1706672a",
							"s_keyHash()": "45bb327b",
							"s_subscriptionId()": "8ac00021",
							"s_vrfCoordinator()": "9eccacf6",
							"setAutomationRegistry(address)": "5ff2d2aa",
							"setCallbackGasLimit(uint32)": "a4eb718c",
							"setCoordinator(address)": "8ea98117",
							"setPendingDraw(bool)": "667640eb",
							"setUsdTicketPrice(uint256)": "bc076f52",
							"setWinnersSubmitted(bool)": "25d75795",
							"submitWinners(uint256,address[],address[],address[])": "4ac2a741",
							"totalTicketsPerDraw(uint256)": "87cc17b1",
							"transferOwnership(address)": "f2fde38b",
							"uniqueParticipantsPerDraw(uint256)": "c3279f8f",
							"unpause()": "3f4ba83a",
							"updatePriceFeed(address)": "95877f78",
							"updateSubscriptionId(uint256)": "2b09d310",
							"updateVRFSettings(address,bytes32)": "f664e752",
							"usdTicketPrice()": "63ecd0c3",
							"winnerSubmissionDeadline()": "8ea2d9ef",
							"winnersSubmitted()": "a9ecbf69"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8[5]\",\"name\":\"winningNumbers\",\"type\":\"uint8[5]\"}],\"name\":\"DrawFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"DrawRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"DrawStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"EmergencyWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrizePoolFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"tier\",\"type\":\"uint8\"}],\"name\":\"PrizesDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8[5]\",\"name\":\"numbers\",\"type\":\"uint8[5]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"TicketPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"WinnersSubmitted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allRounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizePool\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prizesDistributed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rollover\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount3\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount4\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount5\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"automationRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ticketCount\",\"type\":\"uint8\"}],\"name\":\"bulkTicketsWithRandomNumbers\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8[5]\",\"name\":\"numbers\",\"type\":\"uint8[5]\"}],\"name\":\"buyTicket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTicketWithRandomNumbers\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callbackGasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tier\",\"type\":\"uint8\"}],\"name\":\"distributePrizes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drawNumbers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundPrizePool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"getAllTicketsForRound\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"players\",\"type\":\"address[]\"},{\"internalType\":\"uint8[5][]\",\"name\":\"numbersList\",\"type\":\"uint8[5][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"getMyTickets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"players\",\"type\":\"address[]\"},{\"internalType\":\"uint8[5][]\",\"name\":\"numbersList\",\"type\":\"uint8[5][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrizePoolInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"getWinningAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"winners3\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"winners4\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"winners5\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"getWinningNumbers\",\"outputs\":[{\"internalType\":\"uint8[5]\",\"name\":\"\",\"type\":\"uint8[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getusdTicketPriceInBNB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastDrawTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numWords\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingDraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playerTickets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestConfirmations\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roundInProgress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roundLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_keyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_subscriptionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"setAutomationRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_newLimit\",\"type\":\"uint32\"}],\"name\":\"setCallbackGasLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPendingDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setUsdTicketPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setWinnersSubmitted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_winners3\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_winners4\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_winners5\",\"type\":\"address[]\"}],\"name\":\"submitWinners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalTicketsPerDraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uniqueParticipantsPerDraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFeed\",\"type\":\"address\"}],\"name\":\"updatePriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSubId\",\"type\":\"uint256\"}],\"name\":\"updateSubscriptionId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coordinator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"}],\"name\":\"updateVRFSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdTicketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerSubmissionDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnersSubmitted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LotteryAutomation.sol\":\"LotteryAutomation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0915715c5ad87db245b527514302b6da362894944299dd65c1382ca07b13d4\",\"dweb:/ipfs/QmQ2xcF7FQB33DAcpXuh4Jpx1PFniEjWbPMRatRgyp3UJW\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"LotteryAutomation.sol\":{\"keccak256\":\"0x49dabdc8104d47ca0497da91ebee714af3ac924546a38899fc066215a1f59b65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8105d2472be8bf86d0efb9a9e86c62db3004300a30c6855db806ee090572f0a8\",\"dweb:/ipfs/QmY6WZRjVdSpURk7DfRto2fo3zcfiYHcfdrkzSqCCpGwC7\"]},\"LotteryBase.sol\":{\"keccak256\":\"0x7e55ac47602d3c48a0ae6c94105d13b5155ad0b1b572b7ff5ab13f0d8c17f3b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6735b2873753420f0b7679f63ded166e1e25a9afb92ad6f99b7c6a6ac8d02bf5\",\"dweb:/ipfs/QmdWg9S9fQG3RBahhsoJBFr7pYXhJRfVDxSwLJNx9iFc5o\"]},\"LotteryDraw.sol\":{\"keccak256\":\"0xd906c6d49e3a102319f13c0011ee9373a76566a37bbacc6bdd04ad4c593705b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://729581b4d67e52b763efc864f117d07ceb2e3197cf7e0f742ff10d3ae9f3f5b4\",\"dweb:/ipfs/Qmeuat9WfYCwfbs1z5NxPF5rKtcaNDrZeGqDdNTCWvo4ZE\"]},\"LotteryTickets.sol\":{\"keccak256\":\"0x6017734a7d56d164317a73f69d0035159e9b5090323f0ca3eac3d193f4dc5f59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8649caeaf56b0b88ac3cb1fe1e429d7650ce5ba3c63df36a39b5027d21e6eac3\",\"dweb:/ipfs/Qmd3SMefEGB5bK4GU3zdv9JcRc56CNB6Hhxc747ivpzw38\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 97,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 99,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 345,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "s_vrfCoordinator",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IVRFCoordinatorV2Plus)494"
							},
							{
								"astId": 776,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "usdTicketPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 778,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "lastDrawTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 780,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "currentRound",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 782,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 784,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "roundInProgress",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 786,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "winnersSubmitted",
								"offset": 0,
								"slot": "8",
								"type": "t_bool"
							},
							{
								"astId": 788,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "winnerSubmissionDeadline",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 790,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "automationRegistry",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 833,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "totalTicketsPerDraw",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 839,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "hasParticipated",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 843,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "uniqueParticipantsPerDraw",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 848,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "allRounds",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint256,t_struct(Round)829_storage)"
							},
							{
								"astId": 856,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "playerTickets",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage))"
							},
							{
								"astId": 860,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "roundLocked",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 863,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "priceFeed",
								"offset": 0,
								"slot": "17",
								"type": "t_contract(AggregatorV3Interface)297"
							},
							{
								"astId": 866,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "vrfCoordinator",
								"offset": 0,
								"slot": "18",
								"type": "t_address"
							},
							{
								"astId": 868,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "s_subscriptionId",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 871,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "s_keyHash",
								"offset": 0,
								"slot": "20",
								"type": "t_bytes32"
							},
							{
								"astId": 874,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "callbackGasLimit",
								"offset": 0,
								"slot": "21",
								"type": "t_uint32"
							},
							{
								"astId": 877,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "requestConfirmations",
								"offset": 4,
								"slot": "21",
								"type": "t_uint16"
							},
							{
								"astId": 880,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "numWords",
								"offset": 6,
								"slot": "21",
								"type": "t_uint32"
							},
							{
								"astId": 882,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "lastRequestId",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 884,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "pendingDraw",
								"offset": 0,
								"slot": "23",
								"type": "t_bool"
							},
							{
								"astId": 888,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "s_requestInitiator",
								"offset": 0,
								"slot": "24",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 890,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "nonce",
								"offset": 0,
								"slot": "25",
								"type": "t_uint256"
							},
							{
								"astId": 650,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "_status",
								"offset": 0,
								"slot": "26",
								"type": "t_uint256"
							},
							{
								"astId": 1455,
								"contract": "LotteryAutomation.sol:LotteryAutomation",
								"label": "_distributing",
								"offset": 0,
								"slot": "27",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Ticket)797_storage)dyn_storage": {
								"base": "t_struct(Ticket)797_storage",
								"encoding": "dynamic_array",
								"label": "struct LotteryBase.Ticket[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint8)5_storage": {
								"base": "t_uint8",
								"encoding": "inplace",
								"label": "uint8[5]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(AggregatorV3Interface)297": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_contract(IVRFCoordinatorV2Plus)494": {
								"encoding": "inplace",
								"label": "contract IVRFCoordinatorV2Plus",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LotteryBase.Ticket[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Ticket)797_storage)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct LotteryBase.Ticket[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint256,t_struct(Round)829_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LotteryBase.Round)",
								"numberOfBytes": "32",
								"value": "t_struct(Round)829_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Round)829_storage": {
								"encoding": "inplace",
								"label": "struct LotteryBase.Round",
								"members": [
									{
										"astId": 799,
										"contract": "LotteryAutomation.sol:LotteryAutomation",
										"label": "timestamp",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 801,
										"contract": "LotteryAutomation.sol:LotteryAutomation",
										"label": "prizePool",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 805,
										"contract": "LotteryAutomation.sol:LotteryAutomation",
										"label": "winningNumbers",
										"offset": 0,
										"slot": "2",
										"type": "t_array(t_uint8)5_storage"
									},
									{
										"astId": 809,
										"contract": "LotteryAutomation.sol:LotteryAutomation",
										"label": "tickets",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_struct(Ticket)797_storage)dyn_storage"
									},
									{
										"astId": 812,
										"contract": "LotteryAutomation.sol:LotteryAutomation",
										"label": "winners3",
										"offset": 0,
										"slot": "4",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 815,
										"contract": "LotteryAutomation.sol:LotteryAutomation",
										"label": "winners4",
										"offset": 0,
										"slot": "5",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 818,
										"contract": "LotteryAutomation.sol:LotteryAutomation",
										"label": "winners5",
										"offset": 0,
										"slot": "6",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 820,
										"contract": "LotteryAutomation.sol:LotteryAutomation",
										"label": "prizesDistributed",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 822,
										"contract": "LotteryAutomation.sol:LotteryAutomation",
										"label": "rollover",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 824,
										"contract": "LotteryAutomation.sol:LotteryAutomation",
										"label": "prizeAmount3",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 826,
										"contract": "LotteryAutomation.sol:LotteryAutomation",
										"label": "prizeAmount4",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 828,
										"contract": "LotteryAutomation.sol:LotteryAutomation",
										"label": "prizeAmount5",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "384"
							},
							"t_struct(Ticket)797_storage": {
								"encoding": "inplace",
								"label": "struct LotteryBase.Ticket",
								"members": [
									{
										"astId": 792,
										"contract": "LotteryAutomation.sol:LotteryAutomation",
										"label": "player",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 796,
										"contract": "LotteryAutomation.sol:LotteryAutomation",
										"label": "numbers",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_uint8)5_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"setCoordinator(address)": {
								"notice": "Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address."
							}
						},
						"version": 1
					}
				}
			},
			"LotteryBase.sol": {
				"LotteryBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "want",
									"type": "address"
								}
							],
							"name": "OnlyCoordinatorCanFulfill",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "coordinator",
									"type": "address"
								}
							],
							"name": "OnlyOwnerOrCoordinator",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vrfCoordinator",
									"type": "address"
								}
							],
							"name": "CoordinatorSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint8[5]",
									"name": "winningNumbers",
									"type": "uint8[5]"
								}
							],
							"name": "DrawFulfilled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "DrawRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "DrawStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "EmergencyWithdrawal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PrizePoolFunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "tier",
									"type": "uint8"
								}
							],
							"name": "PrizesDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8[5]",
									"name": "numbers",
									"type": "uint8[5]"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "TicketPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "WinnersSubmitted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allRounds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizePool",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "prizesDistributed",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "rollover",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizeAmount3",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizeAmount4",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizeAmount5",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "automationRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "callbackGasLimit",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fundPrizePool",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "getAllTicketsForRound",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "players",
									"type": "address[]"
								},
								{
									"internalType": "uint8[5][]",
									"name": "numbersList",
									"type": "uint8[5][]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrizePoolInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "getWinningAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "winners3",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "winners4",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "winners5",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "getWinningNumbers",
							"outputs": [
								{
									"internalType": "uint8[5]",
									"name": "",
									"type": "uint8[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getusdTicketPriceInBNB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastDrawTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRequestId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "numWords",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingDraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "playerTickets",
							"outputs": [
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "randomWords",
									"type": "uint256[]"
								}
							],
							"name": "rawFulfillRandomWords",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestConfirmations",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "roundInProgress",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "roundLocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_keyHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_subscriptionId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_vrfCoordinator",
							"outputs": [
								{
									"internalType": "contract IVRFCoordinatorV2Plus",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_registry",
									"type": "address"
								}
							],
							"name": "setAutomationRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_newLimit",
									"type": "uint32"
								}
							],
							"name": "setCallbackGasLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vrfCoordinator",
									"type": "address"
								}
							],
							"name": "setCoordinator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "setPendingDraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newPrice",
									"type": "uint256"
								}
							],
							"name": "setUsdTicketPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "setWinnersSubmitted",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "totalTicketsPerDraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uniqueParticipantsPerDraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newFeed",
									"type": "address"
								}
							],
							"name": "updatePriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newSubId",
									"type": "uint256"
								}
							],
							"name": "updateSubscriptionId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_coordinator",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_keyHash",
									"type": "bytes32"
								}
							],
							"name": "updateVRFSettings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdTicketPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerSubmissionDeadline",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnersSubmitted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"allRounds(uint256)": "e1bf07b7",
							"automationRegistry()": "5dc228a0",
							"callbackGasLimit()": "24f74697",
							"currentRound()": "8a19c8bc",
							"emergencyWithdraw()": "db2e21bc",
							"fundPrizePool()": "88b2f7c3",
							"getAllTicketsForRound(uint256)": "85705ad3",
							"getPrizePoolInUSD()": "6a91da2b",
							"getWinningAddresses(uint256)": "75b26d21",
							"getWinningNumbers(uint256)": "9d5c35ae",
							"getusdTicketPriceInBNB()": "d11532b7",
							"lastDrawTime()": "5cbbd635",
							"lastRequestId()": "fc2a88c3",
							"numWords()": "7ccfd7fc",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"pendingDraw()": "88ed5d64",
							"playerTickets(uint256,address,uint256)": "dc7fe6a5",
							"rawFulfillRandomWords(uint256,uint256[])": "1fe543e3",
							"requestConfirmations()": "b0fb162f",
							"roundInProgress()": "ea5ab0ba",
							"roundLocked(uint256)": "1706672a",
							"s_keyHash()": "45bb327b",
							"s_subscriptionId()": "8ac00021",
							"s_vrfCoordinator()": "9eccacf6",
							"setAutomationRegistry(address)": "5ff2d2aa",
							"setCallbackGasLimit(uint32)": "a4eb718c",
							"setCoordinator(address)": "8ea98117",
							"setPendingDraw(bool)": "667640eb",
							"setUsdTicketPrice(uint256)": "bc076f52",
							"setWinnersSubmitted(bool)": "25d75795",
							"totalTicketsPerDraw(uint256)": "87cc17b1",
							"transferOwnership(address)": "f2fde38b",
							"uniqueParticipantsPerDraw(uint256)": "c3279f8f",
							"unpause()": "3f4ba83a",
							"updatePriceFeed(address)": "95877f78",
							"updateSubscriptionId(uint256)": "2b09d310",
							"updateVRFSettings(address,bytes32)": "f664e752",
							"usdTicketPrice()": "63ecd0c3",
							"winnerSubmissionDeadline()": "8ea2d9ef",
							"winnersSubmitted()": "a9ecbf69"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8[5]\",\"name\":\"winningNumbers\",\"type\":\"uint8[5]\"}],\"name\":\"DrawFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"DrawRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"DrawStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"EmergencyWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrizePoolFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"tier\",\"type\":\"uint8\"}],\"name\":\"PrizesDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8[5]\",\"name\":\"numbers\",\"type\":\"uint8[5]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"TicketPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"WinnersSubmitted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allRounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizePool\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prizesDistributed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rollover\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount3\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount4\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount5\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"automationRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callbackGasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundPrizePool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"getAllTicketsForRound\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"players\",\"type\":\"address[]\"},{\"internalType\":\"uint8[5][]\",\"name\":\"numbersList\",\"type\":\"uint8[5][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrizePoolInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"getWinningAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"winners3\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"winners4\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"winners5\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"getWinningNumbers\",\"outputs\":[{\"internalType\":\"uint8[5]\",\"name\":\"\",\"type\":\"uint8[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getusdTicketPriceInBNB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastDrawTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numWords\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingDraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playerTickets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestConfirmations\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roundInProgress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roundLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_keyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_subscriptionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"setAutomationRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_newLimit\",\"type\":\"uint32\"}],\"name\":\"setCallbackGasLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPendingDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setUsdTicketPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setWinnersSubmitted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalTicketsPerDraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uniqueParticipantsPerDraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFeed\",\"type\":\"address\"}],\"name\":\"updatePriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSubId\",\"type\":\"uint256\"}],\"name\":\"updateSubscriptionId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coordinator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"}],\"name\":\"updateVRFSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdTicketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerSubmissionDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnersSubmitted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LotteryBase.sol\":\"LotteryBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0915715c5ad87db245b527514302b6da362894944299dd65c1382ca07b13d4\",\"dweb:/ipfs/QmQ2xcF7FQB33DAcpXuh4Jpx1PFniEjWbPMRatRgyp3UJW\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]},\"LotteryBase.sol\":{\"keccak256\":\"0x7e55ac47602d3c48a0ae6c94105d13b5155ad0b1b572b7ff5ab13f0d8c17f3b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6735b2873753420f0b7679f63ded166e1e25a9afb92ad6f99b7c6a6ac8d02bf5\",\"dweb:/ipfs/QmdWg9S9fQG3RBahhsoJBFr7pYXhJRfVDxSwLJNx9iFc5o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 97,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 99,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 345,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "s_vrfCoordinator",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IVRFCoordinatorV2Plus)494"
							},
							{
								"astId": 776,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "usdTicketPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 778,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "lastDrawTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 780,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "currentRound",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 782,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 784,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "roundInProgress",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 786,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "winnersSubmitted",
								"offset": 0,
								"slot": "8",
								"type": "t_bool"
							},
							{
								"astId": 788,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "winnerSubmissionDeadline",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 790,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "automationRegistry",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 833,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "totalTicketsPerDraw",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 839,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "hasParticipated",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 843,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "uniqueParticipantsPerDraw",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 848,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "allRounds",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint256,t_struct(Round)829_storage)"
							},
							{
								"astId": 856,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "playerTickets",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage))"
							},
							{
								"astId": 860,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "roundLocked",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 863,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "priceFeed",
								"offset": 0,
								"slot": "17",
								"type": "t_contract(AggregatorV3Interface)297"
							},
							{
								"astId": 866,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "vrfCoordinator",
								"offset": 0,
								"slot": "18",
								"type": "t_address"
							},
							{
								"astId": 868,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "s_subscriptionId",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 871,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "s_keyHash",
								"offset": 0,
								"slot": "20",
								"type": "t_bytes32"
							},
							{
								"astId": 874,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "callbackGasLimit",
								"offset": 0,
								"slot": "21",
								"type": "t_uint32"
							},
							{
								"astId": 877,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "requestConfirmations",
								"offset": 4,
								"slot": "21",
								"type": "t_uint16"
							},
							{
								"astId": 880,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "numWords",
								"offset": 6,
								"slot": "21",
								"type": "t_uint32"
							},
							{
								"astId": 882,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "lastRequestId",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 884,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "pendingDraw",
								"offset": 0,
								"slot": "23",
								"type": "t_bool"
							},
							{
								"astId": 888,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "s_requestInitiator",
								"offset": 0,
								"slot": "24",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 890,
								"contract": "LotteryBase.sol:LotteryBase",
								"label": "nonce",
								"offset": 0,
								"slot": "25",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Ticket)797_storage)dyn_storage": {
								"base": "t_struct(Ticket)797_storage",
								"encoding": "dynamic_array",
								"label": "struct LotteryBase.Ticket[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint8)5_storage": {
								"base": "t_uint8",
								"encoding": "inplace",
								"label": "uint8[5]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(AggregatorV3Interface)297": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_contract(IVRFCoordinatorV2Plus)494": {
								"encoding": "inplace",
								"label": "contract IVRFCoordinatorV2Plus",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LotteryBase.Ticket[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Ticket)797_storage)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct LotteryBase.Ticket[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint256,t_struct(Round)829_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LotteryBase.Round)",
								"numberOfBytes": "32",
								"value": "t_struct(Round)829_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Round)829_storage": {
								"encoding": "inplace",
								"label": "struct LotteryBase.Round",
								"members": [
									{
										"astId": 799,
										"contract": "LotteryBase.sol:LotteryBase",
										"label": "timestamp",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 801,
										"contract": "LotteryBase.sol:LotteryBase",
										"label": "prizePool",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 805,
										"contract": "LotteryBase.sol:LotteryBase",
										"label": "winningNumbers",
										"offset": 0,
										"slot": "2",
										"type": "t_array(t_uint8)5_storage"
									},
									{
										"astId": 809,
										"contract": "LotteryBase.sol:LotteryBase",
										"label": "tickets",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_struct(Ticket)797_storage)dyn_storage"
									},
									{
										"astId": 812,
										"contract": "LotteryBase.sol:LotteryBase",
										"label": "winners3",
										"offset": 0,
										"slot": "4",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 815,
										"contract": "LotteryBase.sol:LotteryBase",
										"label": "winners4",
										"offset": 0,
										"slot": "5",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 818,
										"contract": "LotteryBase.sol:LotteryBase",
										"label": "winners5",
										"offset": 0,
										"slot": "6",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 820,
										"contract": "LotteryBase.sol:LotteryBase",
										"label": "prizesDistributed",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 822,
										"contract": "LotteryBase.sol:LotteryBase",
										"label": "rollover",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 824,
										"contract": "LotteryBase.sol:LotteryBase",
										"label": "prizeAmount3",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 826,
										"contract": "LotteryBase.sol:LotteryBase",
										"label": "prizeAmount4",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 828,
										"contract": "LotteryBase.sol:LotteryBase",
										"label": "prizeAmount5",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "384"
							},
							"t_struct(Ticket)797_storage": {
								"encoding": "inplace",
								"label": "struct LotteryBase.Ticket",
								"members": [
									{
										"astId": 792,
										"contract": "LotteryBase.sol:LotteryBase",
										"label": "player",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 796,
										"contract": "LotteryBase.sol:LotteryBase",
										"label": "numbers",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_uint8)5_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"setCoordinator(address)": {
								"notice": "Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address."
							}
						},
						"version": 1
					}
				}
			},
			"LotteryDraw.sol": {
				"LotteryDraw": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "want",
									"type": "address"
								}
							],
							"name": "OnlyCoordinatorCanFulfill",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "coordinator",
									"type": "address"
								}
							],
							"name": "OnlyOwnerOrCoordinator",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vrfCoordinator",
									"type": "address"
								}
							],
							"name": "CoordinatorSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint8[5]",
									"name": "winningNumbers",
									"type": "uint8[5]"
								}
							],
							"name": "DrawFulfilled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "DrawRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "DrawStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "EmergencyWithdrawal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PrizePoolFunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "tier",
									"type": "uint8"
								}
							],
							"name": "PrizesDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8[5]",
									"name": "numbers",
									"type": "uint8[5]"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "TicketPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "WinnersSubmitted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allRounds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizePool",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "prizesDistributed",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "rollover",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizeAmount3",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizeAmount4",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizeAmount5",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "automationRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "ticketCount",
									"type": "uint8"
								}
							],
							"name": "bulkTicketsWithRandomNumbers",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8[5]",
									"name": "numbers",
									"type": "uint8[5]"
								}
							],
							"name": "buyTicket",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTicketWithRandomNumbers",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "callbackGasLimit",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "tier",
									"type": "uint8"
								}
							],
							"name": "distributePrizes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "drawNumbers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fundPrizePool",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "getAllTicketsForRound",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "players",
									"type": "address[]"
								},
								{
									"internalType": "uint8[5][]",
									"name": "numbersList",
									"type": "uint8[5][]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "getMyTickets",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "players",
									"type": "address[]"
								},
								{
									"internalType": "uint8[5][]",
									"name": "numbersList",
									"type": "uint8[5][]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrizePoolInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "getWinningAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "winners3",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "winners4",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "winners5",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "getWinningNumbers",
							"outputs": [
								{
									"internalType": "uint8[5]",
									"name": "",
									"type": "uint8[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getusdTicketPriceInBNB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastDrawTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRequestId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "numWords",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingDraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "playerTickets",
							"outputs": [
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "randomWords",
									"type": "uint256[]"
								}
							],
							"name": "rawFulfillRandomWords",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestConfirmations",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "roundInProgress",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "roundLocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_keyHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_subscriptionId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_vrfCoordinator",
							"outputs": [
								{
									"internalType": "contract IVRFCoordinatorV2Plus",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_registry",
									"type": "address"
								}
							],
							"name": "setAutomationRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_newLimit",
									"type": "uint32"
								}
							],
							"name": "setCallbackGasLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vrfCoordinator",
									"type": "address"
								}
							],
							"name": "setCoordinator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "setPendingDraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newPrice",
									"type": "uint256"
								}
							],
							"name": "setUsdTicketPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "setWinnersSubmitted",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "_winners3",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "_winners4",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "_winners5",
									"type": "address[]"
								}
							],
							"name": "submitWinners",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "totalTicketsPerDraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uniqueParticipantsPerDraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newFeed",
									"type": "address"
								}
							],
							"name": "updatePriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newSubId",
									"type": "uint256"
								}
							],
							"name": "updateSubscriptionId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_coordinator",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_keyHash",
									"type": "bytes32"
								}
							],
							"name": "updateVRFSettings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdTicketPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerSubmissionDeadline",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnersSubmitted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"allRounds(uint256)": "e1bf07b7",
							"automationRegistry()": "5dc228a0",
							"bulkTicketsWithRandomNumbers(uint8)": "dc65c843",
							"buyTicket(uint8[5])": "cc957f28",
							"buyTicketWithRandomNumbers()": "b933dcba",
							"callbackGasLimit()": "24f74697",
							"currentRound()": "8a19c8bc",
							"distributePrizes(uint8)": "61edf9b2",
							"drawNumbers()": "676c902f",
							"emergencyWithdraw()": "db2e21bc",
							"fundPrizePool()": "88b2f7c3",
							"getAllTicketsForRound(uint256)": "85705ad3",
							"getMyTickets(uint256)": "c81d9217",
							"getPrizePoolInUSD()": "6a91da2b",
							"getWinningAddresses(uint256)": "75b26d21",
							"getWinningNumbers(uint256)": "9d5c35ae",
							"getusdTicketPriceInBNB()": "d11532b7",
							"lastDrawTime()": "5cbbd635",
							"lastRequestId()": "fc2a88c3",
							"numWords()": "7ccfd7fc",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"pendingDraw()": "88ed5d64",
							"playerTickets(uint256,address,uint256)": "dc7fe6a5",
							"rawFulfillRandomWords(uint256,uint256[])": "1fe543e3",
							"requestConfirmations()": "b0fb162f",
							"roundInProgress()": "ea5ab0ba",
							"roundLocked(uint256)": "1706672a",
							"s_keyHash()": "45bb327b",
							"s_subscriptionId()": "8ac00021",
							"s_vrfCoordinator()": "9eccacf6",
							"setAutomationRegistry(address)": "5ff2d2aa",
							"setCallbackGasLimit(uint32)": "a4eb718c",
							"setCoordinator(address)": "8ea98117",
							"setPendingDraw(bool)": "667640eb",
							"setUsdTicketPrice(uint256)": "bc076f52",
							"setWinnersSubmitted(bool)": "25d75795",
							"submitWinners(uint256,address[],address[],address[])": "4ac2a741",
							"totalTicketsPerDraw(uint256)": "87cc17b1",
							"transferOwnership(address)": "f2fde38b",
							"uniqueParticipantsPerDraw(uint256)": "c3279f8f",
							"unpause()": "3f4ba83a",
							"updatePriceFeed(address)": "95877f78",
							"updateSubscriptionId(uint256)": "2b09d310",
							"updateVRFSettings(address,bytes32)": "f664e752",
							"usdTicketPrice()": "63ecd0c3",
							"winnerSubmissionDeadline()": "8ea2d9ef",
							"winnersSubmitted()": "a9ecbf69"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8[5]\",\"name\":\"winningNumbers\",\"type\":\"uint8[5]\"}],\"name\":\"DrawFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"DrawRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"DrawStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"EmergencyWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrizePoolFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"tier\",\"type\":\"uint8\"}],\"name\":\"PrizesDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8[5]\",\"name\":\"numbers\",\"type\":\"uint8[5]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"TicketPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"WinnersSubmitted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allRounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizePool\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prizesDistributed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rollover\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount3\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount4\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount5\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"automationRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ticketCount\",\"type\":\"uint8\"}],\"name\":\"bulkTicketsWithRandomNumbers\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8[5]\",\"name\":\"numbers\",\"type\":\"uint8[5]\"}],\"name\":\"buyTicket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTicketWithRandomNumbers\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callbackGasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tier\",\"type\":\"uint8\"}],\"name\":\"distributePrizes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drawNumbers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundPrizePool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"getAllTicketsForRound\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"players\",\"type\":\"address[]\"},{\"internalType\":\"uint8[5][]\",\"name\":\"numbersList\",\"type\":\"uint8[5][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"getMyTickets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"players\",\"type\":\"address[]\"},{\"internalType\":\"uint8[5][]\",\"name\":\"numbersList\",\"type\":\"uint8[5][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrizePoolInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"getWinningAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"winners3\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"winners4\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"winners5\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"getWinningNumbers\",\"outputs\":[{\"internalType\":\"uint8[5]\",\"name\":\"\",\"type\":\"uint8[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getusdTicketPriceInBNB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastDrawTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numWords\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingDraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playerTickets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestConfirmations\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roundInProgress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roundLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_keyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_subscriptionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"setAutomationRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_newLimit\",\"type\":\"uint32\"}],\"name\":\"setCallbackGasLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPendingDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setUsdTicketPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setWinnersSubmitted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_winners3\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_winners4\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_winners5\",\"type\":\"address[]\"}],\"name\":\"submitWinners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalTicketsPerDraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uniqueParticipantsPerDraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFeed\",\"type\":\"address\"}],\"name\":\"updatePriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSubId\",\"type\":\"uint256\"}],\"name\":\"updateSubscriptionId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coordinator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"}],\"name\":\"updateVRFSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdTicketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerSubmissionDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnersSubmitted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LotteryDraw.sol\":\"LotteryDraw\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0915715c5ad87db245b527514302b6da362894944299dd65c1382ca07b13d4\",\"dweb:/ipfs/QmQ2xcF7FQB33DAcpXuh4Jpx1PFniEjWbPMRatRgyp3UJW\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"LotteryBase.sol\":{\"keccak256\":\"0x7e55ac47602d3c48a0ae6c94105d13b5155ad0b1b572b7ff5ab13f0d8c17f3b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6735b2873753420f0b7679f63ded166e1e25a9afb92ad6f99b7c6a6ac8d02bf5\",\"dweb:/ipfs/QmdWg9S9fQG3RBahhsoJBFr7pYXhJRfVDxSwLJNx9iFc5o\"]},\"LotteryDraw.sol\":{\"keccak256\":\"0xd906c6d49e3a102319f13c0011ee9373a76566a37bbacc6bdd04ad4c593705b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://729581b4d67e52b763efc864f117d07ceb2e3197cf7e0f742ff10d3ae9f3f5b4\",\"dweb:/ipfs/Qmeuat9WfYCwfbs1z5NxPF5rKtcaNDrZeGqDdNTCWvo4ZE\"]},\"LotteryTickets.sol\":{\"keccak256\":\"0x6017734a7d56d164317a73f69d0035159e9b5090323f0ca3eac3d193f4dc5f59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8649caeaf56b0b88ac3cb1fe1e429d7650ce5ba3c63df36a39b5027d21e6eac3\",\"dweb:/ipfs/Qmd3SMefEGB5bK4GU3zdv9JcRc56CNB6Hhxc747ivpzw38\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 97,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 99,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 345,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "s_vrfCoordinator",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IVRFCoordinatorV2Plus)494"
							},
							{
								"astId": 776,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "usdTicketPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 778,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "lastDrawTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 780,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "currentRound",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 782,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 784,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "roundInProgress",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 786,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "winnersSubmitted",
								"offset": 0,
								"slot": "8",
								"type": "t_bool"
							},
							{
								"astId": 788,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "winnerSubmissionDeadline",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 790,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "automationRegistry",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 833,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "totalTicketsPerDraw",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 839,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "hasParticipated",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 843,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "uniqueParticipantsPerDraw",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 848,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "allRounds",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint256,t_struct(Round)829_storage)"
							},
							{
								"astId": 856,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "playerTickets",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage))"
							},
							{
								"astId": 860,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "roundLocked",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 863,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "priceFeed",
								"offset": 0,
								"slot": "17",
								"type": "t_contract(AggregatorV3Interface)297"
							},
							{
								"astId": 866,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "vrfCoordinator",
								"offset": 0,
								"slot": "18",
								"type": "t_address"
							},
							{
								"astId": 868,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "s_subscriptionId",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 871,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "s_keyHash",
								"offset": 0,
								"slot": "20",
								"type": "t_bytes32"
							},
							{
								"astId": 874,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "callbackGasLimit",
								"offset": 0,
								"slot": "21",
								"type": "t_uint32"
							},
							{
								"astId": 877,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "requestConfirmations",
								"offset": 4,
								"slot": "21",
								"type": "t_uint16"
							},
							{
								"astId": 880,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "numWords",
								"offset": 6,
								"slot": "21",
								"type": "t_uint32"
							},
							{
								"astId": 882,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "lastRequestId",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 884,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "pendingDraw",
								"offset": 0,
								"slot": "23",
								"type": "t_bool"
							},
							{
								"astId": 888,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "s_requestInitiator",
								"offset": 0,
								"slot": "24",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 890,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "nonce",
								"offset": 0,
								"slot": "25",
								"type": "t_uint256"
							},
							{
								"astId": 650,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "_status",
								"offset": 0,
								"slot": "26",
								"type": "t_uint256"
							},
							{
								"astId": 1455,
								"contract": "LotteryDraw.sol:LotteryDraw",
								"label": "_distributing",
								"offset": 0,
								"slot": "27",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Ticket)797_storage)dyn_storage": {
								"base": "t_struct(Ticket)797_storage",
								"encoding": "dynamic_array",
								"label": "struct LotteryBase.Ticket[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint8)5_storage": {
								"base": "t_uint8",
								"encoding": "inplace",
								"label": "uint8[5]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(AggregatorV3Interface)297": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_contract(IVRFCoordinatorV2Plus)494": {
								"encoding": "inplace",
								"label": "contract IVRFCoordinatorV2Plus",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LotteryBase.Ticket[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Ticket)797_storage)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct LotteryBase.Ticket[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint256,t_struct(Round)829_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LotteryBase.Round)",
								"numberOfBytes": "32",
								"value": "t_struct(Round)829_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Round)829_storage": {
								"encoding": "inplace",
								"label": "struct LotteryBase.Round",
								"members": [
									{
										"astId": 799,
										"contract": "LotteryDraw.sol:LotteryDraw",
										"label": "timestamp",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 801,
										"contract": "LotteryDraw.sol:LotteryDraw",
										"label": "prizePool",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 805,
										"contract": "LotteryDraw.sol:LotteryDraw",
										"label": "winningNumbers",
										"offset": 0,
										"slot": "2",
										"type": "t_array(t_uint8)5_storage"
									},
									{
										"astId": 809,
										"contract": "LotteryDraw.sol:LotteryDraw",
										"label": "tickets",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_struct(Ticket)797_storage)dyn_storage"
									},
									{
										"astId": 812,
										"contract": "LotteryDraw.sol:LotteryDraw",
										"label": "winners3",
										"offset": 0,
										"slot": "4",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 815,
										"contract": "LotteryDraw.sol:LotteryDraw",
										"label": "winners4",
										"offset": 0,
										"slot": "5",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 818,
										"contract": "LotteryDraw.sol:LotteryDraw",
										"label": "winners5",
										"offset": 0,
										"slot": "6",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 820,
										"contract": "LotteryDraw.sol:LotteryDraw",
										"label": "prizesDistributed",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 822,
										"contract": "LotteryDraw.sol:LotteryDraw",
										"label": "rollover",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 824,
										"contract": "LotteryDraw.sol:LotteryDraw",
										"label": "prizeAmount3",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 826,
										"contract": "LotteryDraw.sol:LotteryDraw",
										"label": "prizeAmount4",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 828,
										"contract": "LotteryDraw.sol:LotteryDraw",
										"label": "prizeAmount5",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "384"
							},
							"t_struct(Ticket)797_storage": {
								"encoding": "inplace",
								"label": "struct LotteryBase.Ticket",
								"members": [
									{
										"astId": 792,
										"contract": "LotteryDraw.sol:LotteryDraw",
										"label": "player",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 796,
										"contract": "LotteryDraw.sol:LotteryDraw",
										"label": "numbers",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_uint8)5_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"setCoordinator(address)": {
								"notice": "Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address."
							}
						},
						"version": 1
					}
				}
			},
			"LotteryTickets.sol": {
				"LotteryTickets": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "want",
									"type": "address"
								}
							],
							"name": "OnlyCoordinatorCanFulfill",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "coordinator",
									"type": "address"
								}
							],
							"name": "OnlyOwnerOrCoordinator",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vrfCoordinator",
									"type": "address"
								}
							],
							"name": "CoordinatorSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint8[5]",
									"name": "winningNumbers",
									"type": "uint8[5]"
								}
							],
							"name": "DrawFulfilled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "DrawRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "DrawStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "EmergencyWithdrawal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PrizePoolFunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "tier",
									"type": "uint8"
								}
							],
							"name": "PrizesDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8[5]",
									"name": "numbers",
									"type": "uint8[5]"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "TicketPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "WinnersSubmitted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allRounds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizePool",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "prizesDistributed",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "rollover",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizeAmount3",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizeAmount4",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "prizeAmount5",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "automationRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "ticketCount",
									"type": "uint8"
								}
							],
							"name": "bulkTicketsWithRandomNumbers",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8[5]",
									"name": "numbers",
									"type": "uint8[5]"
								}
							],
							"name": "buyTicket",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTicketWithRandomNumbers",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "callbackGasLimit",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fundPrizePool",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "getAllTicketsForRound",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "players",
									"type": "address[]"
								},
								{
									"internalType": "uint8[5][]",
									"name": "numbersList",
									"type": "uint8[5][]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "getMyTickets",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "players",
									"type": "address[]"
								},
								{
									"internalType": "uint8[5][]",
									"name": "numbersList",
									"type": "uint8[5][]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrizePoolInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "getWinningAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "winners3",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "winners4",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "winners5",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "getWinningNumbers",
							"outputs": [
								{
									"internalType": "uint8[5]",
									"name": "",
									"type": "uint8[5]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getusdTicketPriceInBNB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastDrawTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRequestId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "numWords",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingDraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "playerTickets",
							"outputs": [
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "randomWords",
									"type": "uint256[]"
								}
							],
							"name": "rawFulfillRandomWords",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestConfirmations",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "roundInProgress",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "roundLocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_keyHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_subscriptionId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_vrfCoordinator",
							"outputs": [
								{
									"internalType": "contract IVRFCoordinatorV2Plus",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_registry",
									"type": "address"
								}
							],
							"name": "setAutomationRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_newLimit",
									"type": "uint32"
								}
							],
							"name": "setCallbackGasLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vrfCoordinator",
									"type": "address"
								}
							],
							"name": "setCoordinator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "setPendingDraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newPrice",
									"type": "uint256"
								}
							],
							"name": "setUsdTicketPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "setWinnersSubmitted",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "totalTicketsPerDraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uniqueParticipantsPerDraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newFeed",
									"type": "address"
								}
							],
							"name": "updatePriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newSubId",
									"type": "uint256"
								}
							],
							"name": "updateSubscriptionId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_coordinator",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_keyHash",
									"type": "bytes32"
								}
							],
							"name": "updateVRFSettings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdTicketPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerSubmissionDeadline",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnersSubmitted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"allRounds(uint256)": "e1bf07b7",
							"automationRegistry()": "5dc228a0",
							"bulkTicketsWithRandomNumbers(uint8)": "dc65c843",
							"buyTicket(uint8[5])": "cc957f28",
							"buyTicketWithRandomNumbers()": "b933dcba",
							"callbackGasLimit()": "24f74697",
							"currentRound()": "8a19c8bc",
							"emergencyWithdraw()": "db2e21bc",
							"fundPrizePool()": "88b2f7c3",
							"getAllTicketsForRound(uint256)": "85705ad3",
							"getMyTickets(uint256)": "c81d9217",
							"getPrizePoolInUSD()": "6a91da2b",
							"getWinningAddresses(uint256)": "75b26d21",
							"getWinningNumbers(uint256)": "9d5c35ae",
							"getusdTicketPriceInBNB()": "d11532b7",
							"lastDrawTime()": "5cbbd635",
							"lastRequestId()": "fc2a88c3",
							"numWords()": "7ccfd7fc",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"pendingDraw()": "88ed5d64",
							"playerTickets(uint256,address,uint256)": "dc7fe6a5",
							"rawFulfillRandomWords(uint256,uint256[])": "1fe543e3",
							"requestConfirmations()": "b0fb162f",
							"roundInProgress()": "ea5ab0ba",
							"roundLocked(uint256)": "1706672a",
							"s_keyHash()": "45bb327b",
							"s_subscriptionId()": "8ac00021",
							"s_vrfCoordinator()": "9eccacf6",
							"setAutomationRegistry(address)": "5ff2d2aa",
							"setCallbackGasLimit(uint32)": "a4eb718c",
							"setCoordinator(address)": "8ea98117",
							"setPendingDraw(bool)": "667640eb",
							"setUsdTicketPrice(uint256)": "bc076f52",
							"setWinnersSubmitted(bool)": "25d75795",
							"totalTicketsPerDraw(uint256)": "87cc17b1",
							"transferOwnership(address)": "f2fde38b",
							"uniqueParticipantsPerDraw(uint256)": "c3279f8f",
							"unpause()": "3f4ba83a",
							"updatePriceFeed(address)": "95877f78",
							"updateSubscriptionId(uint256)": "2b09d310",
							"updateVRFSettings(address,bytes32)": "f664e752",
							"usdTicketPrice()": "63ecd0c3",
							"winnerSubmissionDeadline()": "8ea2d9ef",
							"winnersSubmitted()": "a9ecbf69"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8[5]\",\"name\":\"winningNumbers\",\"type\":\"uint8[5]\"}],\"name\":\"DrawFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"DrawRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"DrawStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"EmergencyWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrizePoolFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"tier\",\"type\":\"uint8\"}],\"name\":\"PrizesDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8[5]\",\"name\":\"numbers\",\"type\":\"uint8[5]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"TicketPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"WinnersSubmitted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allRounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizePool\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prizesDistributed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rollover\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount3\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount4\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount5\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"automationRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ticketCount\",\"type\":\"uint8\"}],\"name\":\"bulkTicketsWithRandomNumbers\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8[5]\",\"name\":\"numbers\",\"type\":\"uint8[5]\"}],\"name\":\"buyTicket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTicketWithRandomNumbers\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callbackGasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundPrizePool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"getAllTicketsForRound\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"players\",\"type\":\"address[]\"},{\"internalType\":\"uint8[5][]\",\"name\":\"numbersList\",\"type\":\"uint8[5][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"getMyTickets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"players\",\"type\":\"address[]\"},{\"internalType\":\"uint8[5][]\",\"name\":\"numbersList\",\"type\":\"uint8[5][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrizePoolInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"getWinningAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"winners3\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"winners4\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"winners5\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"getWinningNumbers\",\"outputs\":[{\"internalType\":\"uint8[5]\",\"name\":\"\",\"type\":\"uint8[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getusdTicketPriceInBNB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastDrawTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numWords\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingDraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playerTickets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestConfirmations\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roundInProgress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roundLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_keyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_subscriptionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"setAutomationRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_newLimit\",\"type\":\"uint32\"}],\"name\":\"setCallbackGasLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPendingDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setUsdTicketPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setWinnersSubmitted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalTicketsPerDraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uniqueParticipantsPerDraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFeed\",\"type\":\"address\"}],\"name\":\"updatePriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSubId\",\"type\":\"uint256\"}],\"name\":\"updateSubscriptionId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coordinator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"}],\"name\":\"updateVRFSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdTicketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerSubmissionDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnersSubmitted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LotteryTickets.sol\":\"LotteryTickets\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0915715c5ad87db245b527514302b6da362894944299dd65c1382ca07b13d4\",\"dweb:/ipfs/QmQ2xcF7FQB33DAcpXuh4Jpx1PFniEjWbPMRatRgyp3UJW\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]},\"LotteryBase.sol\":{\"keccak256\":\"0x7e55ac47602d3c48a0ae6c94105d13b5155ad0b1b572b7ff5ab13f0d8c17f3b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6735b2873753420f0b7679f63ded166e1e25a9afb92ad6f99b7c6a6ac8d02bf5\",\"dweb:/ipfs/QmdWg9S9fQG3RBahhsoJBFr7pYXhJRfVDxSwLJNx9iFc5o\"]},\"LotteryTickets.sol\":{\"keccak256\":\"0x6017734a7d56d164317a73f69d0035159e9b5090323f0ca3eac3d193f4dc5f59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8649caeaf56b0b88ac3cb1fe1e429d7650ce5ba3c63df36a39b5027d21e6eac3\",\"dweb:/ipfs/Qmd3SMefEGB5bK4GU3zdv9JcRc56CNB6Hhxc747ivpzw38\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 97,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 99,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 345,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "s_vrfCoordinator",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IVRFCoordinatorV2Plus)494"
							},
							{
								"astId": 776,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "usdTicketPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 778,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "lastDrawTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 780,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "currentRound",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 782,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 784,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "roundInProgress",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 786,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "winnersSubmitted",
								"offset": 0,
								"slot": "8",
								"type": "t_bool"
							},
							{
								"astId": 788,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "winnerSubmissionDeadline",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 790,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "automationRegistry",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 833,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "totalTicketsPerDraw",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 839,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "hasParticipated",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 843,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "uniqueParticipantsPerDraw",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 848,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "allRounds",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint256,t_struct(Round)829_storage)"
							},
							{
								"astId": 856,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "playerTickets",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage))"
							},
							{
								"astId": 860,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "roundLocked",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 863,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "priceFeed",
								"offset": 0,
								"slot": "17",
								"type": "t_contract(AggregatorV3Interface)297"
							},
							{
								"astId": 866,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "vrfCoordinator",
								"offset": 0,
								"slot": "18",
								"type": "t_address"
							},
							{
								"astId": 868,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "s_subscriptionId",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 871,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "s_keyHash",
								"offset": 0,
								"slot": "20",
								"type": "t_bytes32"
							},
							{
								"astId": 874,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "callbackGasLimit",
								"offset": 0,
								"slot": "21",
								"type": "t_uint32"
							},
							{
								"astId": 877,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "requestConfirmations",
								"offset": 4,
								"slot": "21",
								"type": "t_uint16"
							},
							{
								"astId": 880,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "numWords",
								"offset": 6,
								"slot": "21",
								"type": "t_uint32"
							},
							{
								"astId": 882,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "lastRequestId",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 884,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "pendingDraw",
								"offset": 0,
								"slot": "23",
								"type": "t_bool"
							},
							{
								"astId": 888,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "s_requestInitiator",
								"offset": 0,
								"slot": "24",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 890,
								"contract": "LotteryTickets.sol:LotteryTickets",
								"label": "nonce",
								"offset": 0,
								"slot": "25",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Ticket)797_storage)dyn_storage": {
								"base": "t_struct(Ticket)797_storage",
								"encoding": "dynamic_array",
								"label": "struct LotteryBase.Ticket[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint8)5_storage": {
								"base": "t_uint8",
								"encoding": "inplace",
								"label": "uint8[5]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(AggregatorV3Interface)297": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_contract(IVRFCoordinatorV2Plus)494": {
								"encoding": "inplace",
								"label": "contract IVRFCoordinatorV2Plus",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LotteryBase.Ticket[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Ticket)797_storage)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct LotteryBase.Ticket[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_array(t_struct(Ticket)797_storage)dyn_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint256,t_struct(Round)829_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LotteryBase.Round)",
								"numberOfBytes": "32",
								"value": "t_struct(Round)829_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Round)829_storage": {
								"encoding": "inplace",
								"label": "struct LotteryBase.Round",
								"members": [
									{
										"astId": 799,
										"contract": "LotteryTickets.sol:LotteryTickets",
										"label": "timestamp",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 801,
										"contract": "LotteryTickets.sol:LotteryTickets",
										"label": "prizePool",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 805,
										"contract": "LotteryTickets.sol:LotteryTickets",
										"label": "winningNumbers",
										"offset": 0,
										"slot": "2",
										"type": "t_array(t_uint8)5_storage"
									},
									{
										"astId": 809,
										"contract": "LotteryTickets.sol:LotteryTickets",
										"label": "tickets",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_struct(Ticket)797_storage)dyn_storage"
									},
									{
										"astId": 812,
										"contract": "LotteryTickets.sol:LotteryTickets",
										"label": "winners3",
										"offset": 0,
										"slot": "4",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 815,
										"contract": "LotteryTickets.sol:LotteryTickets",
										"label": "winners4",
										"offset": 0,
										"slot": "5",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 818,
										"contract": "LotteryTickets.sol:LotteryTickets",
										"label": "winners5",
										"offset": 0,
										"slot": "6",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 820,
										"contract": "LotteryTickets.sol:LotteryTickets",
										"label": "prizesDistributed",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 822,
										"contract": "LotteryTickets.sol:LotteryTickets",
										"label": "rollover",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 824,
										"contract": "LotteryTickets.sol:LotteryTickets",
										"label": "prizeAmount3",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 826,
										"contract": "LotteryTickets.sol:LotteryTickets",
										"label": "prizeAmount4",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 828,
										"contract": "LotteryTickets.sol:LotteryTickets",
										"label": "prizeAmount5",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "384"
							},
							"t_struct(Ticket)797_storage": {
								"encoding": "inplace",
								"label": "struct LotteryBase.Ticket",
								"members": [
									{
										"astId": 792,
										"contract": "LotteryTickets.sol:LotteryTickets",
										"label": "player",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 796,
										"contract": "LotteryTickets.sol:LotteryTickets",
										"label": "numbers",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_uint8)5_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"setCoordinator(address)": {
								"notice": "Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
					"exportedSymbols": {
						"AutomationBase": [
							37
						]
					},
					"id": 38,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 37,
							"linearizedBaseContracts": [
								37
							],
							"name": "AutomationBase",
							"nameLocation": "66:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "b60ac5db",
									"id": 3,
									"name": "OnlySimulatedBackend",
									"nameLocation": "91:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:0"
									},
									"src": "85:29:0"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "291:200:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 7,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "350:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "353:6:0",
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "350:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 11,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "371:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 9,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "363:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "363:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "350:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 14,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "377:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "380:6:0",
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "377:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "307831313131313131313131313131313131313131313131313131313131313131313131313131313131",
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "398:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x1111111111111111111111111111111111111111"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "390:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 16,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "390:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "390:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "377:64:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "350:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 26,
												"nodeType": "IfStatement",
												"src": "346:141:0",
												"trueBody": {
													"id": 25,
													"nodeType": "Block",
													"src": "443:44:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 22,
																	"name": "OnlySimulatedBackend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "458:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "458:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 24,
															"nodeType": "RevertStatement",
															"src": "451:29:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "118:127:0",
										"text": " @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preventExecution",
									"nameLocation": "257:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "291:0:0"
									},
									"scope": 37,
									"src": "248:243:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "652:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 31,
														"name": "_preventExecution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "658:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "658:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "658:19:0"
											},
											{
												"id": 34,
												"nodeType": "PlaceholderStatement",
												"src": "683:1:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "495:129:0",
										"text": " @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."
									},
									"id": 36,
									"name": "cannotExecute",
									"nameLocation": "636:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "649:2:0"
									},
									"src": "627:62:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 38,
							"src": "57:634:0",
							"usedErrors": [
								3
							]
						}
					],
					"src": "32:660:0"
				},
				"id": 0
			},
			"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
					"exportedSymbols": {
						"AutomationBase": [
							37
						],
						"AutomationCompatible": [
							48
						],
						"AutomationCompatibleInterface": [
							67
						]
					},
					"id": 49,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 39,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
							"file": "./AutomationBase.sol",
							"id": 41,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 49,
							"sourceUnit": 38,
							"src": "57:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 40,
										"name": "AutomationBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 37,
										"src": "65:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
							"file": "./interfaces/AutomationCompatibleInterface.sol",
							"id": 43,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 49,
							"sourceUnit": 68,
							"src": "110:93:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 42,
										"name": "AutomationCompatibleInterface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 67,
										"src": "118:29:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 44,
										"name": "AutomationBase",
										"nameLocations": [
											"247:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 37,
										"src": "247:14:1"
									},
									"id": 45,
									"nodeType": "InheritanceSpecifier",
									"src": "247:14:1"
								},
								{
									"baseName": {
										"id": 46,
										"name": "AutomationCompatibleInterface",
										"nameLocations": [
											"263:29:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 67,
										"src": "263:29:1"
									},
									"id": 47,
									"nodeType": "InheritanceSpecifier",
									"src": "263:29:1"
								}
							],
							"canonicalName": "AutomationCompatible",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 48,
							"linearizedBaseContracts": [
								48,
								67,
								37
							],
							"name": "AutomationCompatible",
							"nameLocation": "223:20:1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 49,
							"src": "205:90:1",
							"usedErrors": [
								3
							]
						}
					],
					"src": "32:264:1"
				},
				"id": 1
			},
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
					"exportedSymbols": {
						"AutomationCompatibleInterface": [
							67
						]
					},
					"id": 68,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 50,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationCompatibleInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 67,
							"linearizedBaseContracts": [
								67
							],
							"name": "AutomationCompatibleInterface",
							"nameLocation": "120:29:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "154:985:2",
										"text": " @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."
									},
									"functionSelector": "6e04ff0d",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "1151:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "checkData",
												"nameLocation": "1178:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1163:24:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1163:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1162:26:2"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "1212:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1207:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1207:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "1239:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1226:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1226:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1206:45:2"
									},
									"scope": 67,
									"src": "1142:110:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1256:1003:2",
										"text": " @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."
									},
									"functionSelector": "4585e33b",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "2271:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "2300:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2285:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 62,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2285:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:28:2"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:0:2"
									},
									"scope": 67,
									"src": "2262:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 68,
							"src": "110:2214:2",
							"usedErrors": []
						}
					],
					"src": "32:2293:2"
				},
				"id": 2
			},
			"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
					"exportedSymbols": {
						"ConfirmedOwner": [
							88
						],
						"ConfirmedOwnerWithProposal": [
							251
						]
					},
					"id": 89,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 69,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
							"file": "./ConfirmedOwnerWithProposal.sol",
							"id": 71,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 89,
							"sourceUnit": 252,
							"src": "57:76:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 70,
										"name": "ConfirmedOwnerWithProposal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 251,
										"src": "65:26:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 73,
										"name": "ConfirmedOwnerWithProposal",
										"nameLocations": [
											"267:26:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 251,
										"src": "267:26:3"
									},
									"id": 74,
									"nodeType": "InheritanceSpecifier",
									"src": "267:26:3"
								}
							],
							"canonicalName": "ConfirmedOwner",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 72,
								"nodeType": "StructuredDocumentation",
								"src": "135:105:3",
								"text": "@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."
							},
							"fullyImplemented": true,
							"id": 88,
							"linearizedBaseContracts": [
								88,
								251,
								313
							],
							"name": "ConfirmedOwner",
							"nameLocation": "249:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "377:2:3",
										"statements": []
									},
									"id": 87,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 79,
													"name": "newOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 76,
													"src": "355:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "373:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "365:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 80,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "365:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "365:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 84,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 78,
												"name": "ConfirmedOwnerWithProposal",
												"nameLocations": [
													"328:26:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 251,
												"src": "328:26:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "328:48:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "318:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "310:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "309:18:3"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "377:0:3"
									},
									"scope": 88,
									"src": "298:81:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 89,
							"src": "240:141:3",
							"usedErrors": []
						}
					],
					"src": "32:350:3"
				},
				"id": 3
			},
			"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
					"exportedSymbols": {
						"ConfirmedOwnerWithProposal": [
							251
						],
						"IOwnable": [
							313
						]
					},
					"id": 252,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 90,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
							"file": "../interfaces/IOwnable.sol",
							"id": 92,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 252,
							"sourceUnit": 314,
							"src": "57:52:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 91,
										"name": "IOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 313,
										"src": "65:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 94,
										"name": "IOwnable",
										"nameLocations": [
											"255:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 313,
										"src": "255:8:4"
									},
									"id": 95,
									"nodeType": "InheritanceSpecifier",
									"src": "255:8:4"
								}
							],
							"canonicalName": "ConfirmedOwnerWithProposal",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 93,
								"nodeType": "StructuredDocumentation",
								"src": "111:105:4",
								"text": "@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."
							},
							"fullyImplemented": true,
							"id": 251,
							"linearizedBaseContracts": [
								251,
								313
							],
							"name": "ConfirmedOwnerWithProposal",
							"nameLocation": "225:26:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 97,
									"mutability": "mutable",
									"name": "s_owner",
									"nameLocation": "284:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 251,
									"src": "268:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 96,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "268:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 99,
									"mutability": "mutable",
									"name": "s_pendingOwner",
									"nameLocation": "311:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 251,
									"src": "295:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 98,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "295:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278",
									"id": 105,
									"name": "OwnershipTransferRequested",
									"nameLocation": "336:26:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "379:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "363:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "401:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "385:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "362:42:4"
									},
									"src": "330:75:4"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 111,
									"name": "OwnershipTransferred",
									"nameLocation": "414:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "451:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "435:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "473:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "457:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "434:42:4"
									},
									"src": "408:69:4"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "533:230:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 119,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "598:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "618:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "610:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 120,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "610:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "610:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "598:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "622:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
																"typeString": "literal_string \"Cannot set owner to zero\""
															},
															"value": "Cannot set owner to zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
																"typeString": "literal_string \"Cannot set owner to zero\""
															}
														],
														"id": 118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "590:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "590:59:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "590:59:4"
											},
											{
												"expression": {
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 128,
														"name": "s_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "656:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 129,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "666:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "656:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "656:18:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 132,
														"name": "pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "684:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "708:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "700:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 133,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "700:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "700:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "684:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 143,
												"nodeType": "IfStatement",
												"src": "680:79:4",
												"trueBody": {
													"id": 142,
													"nodeType": "Block",
													"src": "712:47:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 139,
																		"name": "pendingOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "739:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 138,
																	"name": "_transferOwnership",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "720:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "720:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 141,
															"nodeType": "ExpressionStatement",
															"src": "720:32:4"
														}
													]
												}
											}
										]
									},
									"id": 145,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "501:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "493:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "pendingOwner",
												"nameLocation": "519:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "511:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:40:4"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:0:4"
									},
									"scope": 251,
									"src": "481:282:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										309
									],
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "912:33:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 155,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "937:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 154,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "918:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "918:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "918:22:4"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "767:77:4",
										"text": "@notice Allows an owner to begin transferring ownership to a new address."
									},
									"functionSelector": "f2fde38b",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 152,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 151,
												"name": "onlyOwner",
												"nameLocations": [
													"902:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "902:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "902:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "856:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 150,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "893:8:4"
									},
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "874:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:12:4"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "912:0:4"
									},
									"scope": 251,
									"src": "847:98:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										312
									],
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "1071:271:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 165,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1136:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1140:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1136:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 167,
																"name": "s_pendingOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1150:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1136:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742062652070726f706f736564206f776e6572",
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1166:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
																"typeString": "literal_string \"Must be proposed owner\""
															},
															"value": "Must be proposed owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
																"typeString": "literal_string \"Must be proposed owner\""
															}
														],
														"id": 164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1128:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1128:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1128:63:4"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1206:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "1198:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 172,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1198:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"id": 174,
													"name": "s_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 97,
													"src": "1217:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1198:26:4"
											},
											{
												"expression": {
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 176,
														"name": "s_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1230:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 177,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1240:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1244:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1240:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1230:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "1230:20:4"
											},
											{
												"expression": {
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 181,
														"name": "s_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1256:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1281:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1273:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 182,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1273:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1273:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1256:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "1256:27:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 189,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1316:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 190,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1326:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1330:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1326:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 188,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1295:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1295:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "EmitStatement",
												"src": "1290:47:4"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "949:74:4",
										"text": "@notice Allows an ownership transfer to be completed by the recipient."
									},
									"functionSelector": "79ba5097",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "1035:15:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1062:8:4"
									},
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:4"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1071:0:4"
									},
									"scope": 251,
									"src": "1026:316:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										304
									],
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1438:25:4",
										"statements": [
											{
												"expression": {
													"id": 202,
													"name": "s_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 97,
													"src": "1451:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 201,
												"id": 203,
												"nodeType": "Return",
												"src": "1444:14:4"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "1346:33:4",
										"text": "@notice Get the current owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1391:5:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 198,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1411:8:4"
									},
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1396:2:4"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1429:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:9:4"
									},
									"scope": 251,
									"src": "1382:81:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "1584:191:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 212,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "1649:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 213,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1655:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1659:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1655:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1649:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1667:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
																"typeString": "literal_string \"Cannot transfer to self\""
															},
															"value": "Cannot transfer to self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
																"typeString": "literal_string \"Cannot transfer to self\""
															}
														],
														"id": 211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1641:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1641:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "1641:52:4"
											},
											{
												"expression": {
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 219,
														"name": "s_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1700:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 220,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "1717:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1700:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "1700:19:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 224,
															"name": "s_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "1758:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 225,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "1767:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 223,
														"name": "OwnershipTransferRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "1731:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1731:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "EmitStatement",
												"src": "1726:44:4"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "1467:66:4",
										"text": "@notice validate, transfer ownership, and emit relevant events"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1545:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1572:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1564:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:12:4"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1584:0:4"
									},
									"scope": 251,
									"src": "1536:239:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "1853:118:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 234,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1918:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1922:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1918:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 236,
																"name": "s_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "1932:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1918:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1941:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
																"typeString": "literal_string \"Only callable by owner\""
															},
															"value": "Only callable by owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
																"typeString": "literal_string \"Only callable by owner\""
															}
														],
														"id": 233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1910:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1910:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "1910:56:4"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "1779:27:4",
										"text": "@notice validate access"
									},
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateOwnership",
									"nameLocation": "1818:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1836:2:4"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1853:0:4"
									},
									"scope": 251,
									"src": "1809:162:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "2069:38:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 245,
														"name": "_validateOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "2075:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2075:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "2075:20:4"
											},
											{
												"id": 248,
												"nodeType": "PlaceholderStatement",
												"src": "2101:1:4"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "1975:70:4",
										"text": "@notice Reverts if called by anyone other than the contract owner."
									},
									"id": 250,
									"name": "onlyOwner",
									"nameLocation": "2057:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:2:4"
									},
									"src": "2048:59:4",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 252,
							"src": "216:1893:4",
							"usedErrors": []
						}
					],
					"src": "32:2078:4"
				},
				"id": 4
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							297
						]
					},
					"id": 298,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 253,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 297,
							"linearizedBaseContracts": [
								297
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "120:21:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "155:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:5"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "189:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 255,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "189:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:7:5"
									},
									"scope": 297,
									"src": "146:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "209:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:2:5"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "246:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 260,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "246:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:15:5"
									},
									"scope": 297,
									"src": "200:61:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "274:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:5"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "307:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:5"
									},
									"scope": 297,
									"src": "265:51:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "329:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "354:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "347:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 269,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:25:5"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "397:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "390:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 272,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "390:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "413:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "406:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 274,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "429:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "421:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "448:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "440:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "466:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "459:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 280,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "459:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:93:5"
									},
									"scope": 297,
									"src": "320:163:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "496:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:5"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "556:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "549:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 285,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "549:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "572:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "565:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 287,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "588:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "580:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "607:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "599:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "625:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "618:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 293,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "618:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:93:5"
									},
									"scope": 297,
									"src": "487:155:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 298,
							"src": "110:534:5",
							"usedErrors": []
						}
					],
					"src": "32:613:5"
				},
				"id": 5
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
					"exportedSymbols": {
						"IOwnable": [
							313
						]
					},
					"id": 314,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 299,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 313,
							"linearizedBaseContracts": [
								313
							],
							"name": "IOwnable",
							"nameLocation": "67:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8da5cb5b",
									"id": 304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "89:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "94:2:6"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "115:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:9:6"
									},
									"scope": 313,
									"src": "80:44:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f2fde38b",
									"id": 309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "137:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "163:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "155:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "154:19:6"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "182:0:6"
									},
									"scope": 313,
									"src": "128:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79ba5097",
									"id": 312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "196:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:2:6"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "222:0:6"
									},
									"scope": 313,
									"src": "187:36:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 314,
							"src": "57:168:6",
							"usedErrors": []
						}
					],
					"src": "32:194:6"
				},
				"id": 6
			},
			"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
					"exportedSymbols": {
						"ConfirmedOwner": [
							88
						],
						"IVRFCoordinatorV2Plus": [
							494
						],
						"IVRFMigratableConsumerV2Plus": [
							508
						],
						"VRFConsumerBaseV2Plus": [
							476
						]
					},
					"id": 477,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 315,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol",
							"file": "./interfaces/IVRFCoordinatorV2Plus.sol",
							"id": 317,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 477,
							"sourceUnit": 495,
							"src": "57:77:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 316,
										"name": "IVRFCoordinatorV2Plus",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "65:21:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol",
							"file": "./interfaces/IVRFMigratableConsumerV2Plus.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 477,
							"sourceUnit": 509,
							"src": "135:91:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IVRFMigratableConsumerV2Plus",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 508,
										"src": "143:28:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
							"file": "../../shared/access/ConfirmedOwner.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 477,
							"sourceUnit": 89,
							"src": "227:70:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "ConfirmedOwner",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 88,
										"src": "235:14:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 323,
										"name": "IVRFMigratableConsumerV2Plus",
										"nameLocations": [
											"5712:28:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 508,
										"src": "5712:28:7"
									},
									"id": 324,
									"nodeType": "InheritanceSpecifier",
									"src": "5712:28:7"
								},
								{
									"baseName": {
										"id": 325,
										"name": "ConfirmedOwner",
										"nameLocations": [
											"5742:14:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 88,
										"src": "5742:14:7"
									},
									"id": 326,
									"nodeType": "InheritanceSpecifier",
									"src": "5742:14:7"
								}
							],
							"canonicalName": "VRFConsumerBaseV2Plus",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "299:5369:7",
								"text": "****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\n @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\n @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create a subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords, extraArgs),\n @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\n @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."
							},
							"fullyImplemented": false,
							"id": 476,
							"linearizedBaseContracts": [
								476,
								88,
								251,
								313,
								508
							],
							"name": "VRFConsumerBaseV2Plus",
							"nameLocation": "5687:21:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "1cf993f4",
									"id": 332,
									"name": "OnlyCoordinatorCanFulfill",
									"nameLocation": "5767:25:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "have",
												"nameLocation": "5801:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "5793:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5793:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "want",
												"nameLocation": "5815:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "5807:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5807:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5792:28:7"
									},
									"src": "5761:60:7"
								},
								{
									"errorSelector": "061db9c1",
									"id": 340,
									"name": "OnlyOwnerOrCoordinator",
									"nameLocation": "5830:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "have",
												"nameLocation": "5861:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "5853:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5853:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5875:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "5867:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "coordinator",
												"nameLocation": "5890:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "5882:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5882:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5852:50:7"
									},
									"src": "5824:79:7"
								},
								{
									"errorSelector": "d92e233d",
									"id": 342,
									"name": "ZeroAddress",
									"nameLocation": "5912:11:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5923:2:7"
									},
									"src": "5906:20:7"
								},
								{
									"constant": false,
									"functionSelector": "9eccacf6",
									"id": 345,
									"mutability": "mutable",
									"name": "s_vrfCoordinator",
									"nameLocation": "6106:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 476,
									"src": "6077:45:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
										"typeString": "contract IVRFCoordinatorV2Plus"
									},
									"typeName": {
										"id": 344,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 343,
											"name": "IVRFCoordinatorV2Plus",
											"nameLocations": [
												"6077:21:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 494,
											"src": "6077:21:7"
										},
										"referencedDeclaration": 494,
										"src": "6077:21:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
											"typeString": "contract IVRFCoordinatorV2Plus"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "6266:143:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 355,
														"name": "_vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "6276:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6303:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6295:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 356,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6295:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6295:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6276:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 365,
												"nodeType": "IfStatement",
												"src": "6272:70:7",
												"trueBody": {
													"id": 364,
													"nodeType": "Block",
													"src": "6307:35:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 361,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "6322:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6322:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 363,
															"nodeType": "RevertStatement",
															"src": "6315:20:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 366,
														"name": "s_vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "6347:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
															"typeString": "contract IVRFCoordinatorV2Plus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 368,
																"name": "_vrfCoordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "6388:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 367,
															"name": "IVRFCoordinatorV2Plus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "6366:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IVRFCoordinatorV2Plus_$494_$",
																"typeString": "type(contract IVRFCoordinatorV2Plus)"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6366:38:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
															"typeString": "contract IVRFCoordinatorV2Plus"
														}
													},
													"src": "6347:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
														"typeString": "contract IVRFCoordinatorV2Plus"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "6347:57:7"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "6127:72:7",
										"text": " @param _vrfCoordinator address of VRFCoordinator contract"
									},
									"id": 373,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 351,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6254:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6258:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6254:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 353,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 350,
												"name": "ConfirmedOwner",
												"nameLocations": [
													"6239:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 88,
												"src": "6239:14:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6239:26:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "_vrfCoordinator",
												"nameLocation": "6222:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "6214:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6214:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6213:25:7"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6266:0:7"
									},
									"scope": 476,
									"src": "6202:207:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "6413:690:7",
										"text": " @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"
									},
									"id": 382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomWords",
									"nameLocation": "7207:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "7234:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "7226:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7226:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "7264:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "7245:30:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 377,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7245:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 378,
													"nodeType": "ArrayTypeName",
													"src": "7245:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7225:51:7"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7293:0:7"
									},
									"scope": 476,
									"src": "7198:96:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "7580:189:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 390,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7590:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7594:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7590:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 394,
																"name": "s_vrfCoordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "7612:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
																	"typeString": "contract IVRFCoordinatorV2Plus"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
																	"typeString": "contract IVRFCoordinatorV2Plus"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7604:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7604:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7604:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7590:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 407,
												"nodeType": "IfStatement",
												"src": "7586:131:7",
												"trueBody": {
													"id": 406,
													"nodeType": "Block",
													"src": "7631:86:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 398,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7672:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7676:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7672:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 402,
																				"name": "s_vrfCoordinator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "7692:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
																					"typeString": "contract IVRFCoordinatorV2Plus"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
																					"typeString": "contract IVRFCoordinatorV2Plus"
																				}
																			],
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7684:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 400,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7684:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7684:25:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 397,
																	"name": "OnlyCoordinatorCanFulfill",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "7646:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7646:64:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 405,
															"nodeType": "RevertStatement",
															"src": "7639:71:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 409,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7741:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 410,
															"name": "randomWords",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "7752:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 408,
														"name": "fulfillRandomWords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "7722:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
															"typeString": "function (uint256,uint256[] calldata)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7722:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "7722:42:7"
											}
										]
									},
									"functionSelector": "1fe543e3",
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rawFulfillRandomWords",
									"nameLocation": "7498:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "7528:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "7520:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7520:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "7558:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "7539:30:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 385,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7539:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 386,
													"nodeType": "ArrayTypeName",
													"src": "7539:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7519:51:7"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7580:0:7"
									},
									"scope": 476,
									"src": "7489:280:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										507
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7921:186:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 423,
														"name": "_vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "7931:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7958:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7950:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 424,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7950:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7950:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7931:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 433,
												"nodeType": "IfStatement",
												"src": "7927:70:7",
												"trueBody": {
													"id": 432,
													"nodeType": "Block",
													"src": "7962:35:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 429,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "7977:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7977:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 431,
															"nodeType": "RevertStatement",
															"src": "7970:20:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 434,
														"name": "s_vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "8002:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
															"typeString": "contract IVRFCoordinatorV2Plus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 436,
																"name": "_vrfCoordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "8043:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 435,
															"name": "IVRFCoordinatorV2Plus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8021:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IVRFCoordinatorV2Plus_$494_$",
																"typeString": "type(contract IVRFCoordinatorV2Plus)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8021:38:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
															"typeString": "contract IVRFCoordinatorV2Plus"
														}
													},
													"src": "8002:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
														"typeString": "contract IVRFCoordinatorV2Plus"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "8002:57:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 441,
															"name": "_vrfCoordinator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "8086:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 440,
														"name": "CoordinatorSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "8071:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8071:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "EmitStatement",
												"src": "8066:36:7"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "7773:55:7",
										"text": " @inheritdoc IVRFMigratableConsumerV2Plus"
									},
									"functionSelector": "8ea98117",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 421,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 420,
												"name": "onlyOwnerOrCoordinator",
												"nameLocations": [
													"7898:22:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 475,
												"src": "7898:22:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7898:22:7"
										}
									],
									"name": "setCoordinator",
									"nameLocation": "7840:14:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 419,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7889:8:7"
									},
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "_vrfCoordinator",
												"nameLocation": "7863:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7855:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7855:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7854:25:7"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7921:0:7"
									},
									"scope": 476,
									"src": "7831:276:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "8145:179:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 447,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8155:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8159:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8155:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 449,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "8169:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8169:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "8155:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 452,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8180:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8184:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8180:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 456,
																	"name": "s_vrfCoordinator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "8202:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
																		"typeString": "contract IVRFCoordinatorV2Plus"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
																		"typeString": "contract IVRFCoordinatorV2Plus"
																	}
																],
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8194:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 454,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8194:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8194:25:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "8180:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8155:64:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 472,
												"nodeType": "IfStatement",
												"src": "8151:162:7",
												"trueBody": {
													"id": 471,
													"nodeType": "Block",
													"src": "8221:92:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 461,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8259:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8263:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8259:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 463,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 205,
																			"src": "8271:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8271:7:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 467,
																				"name": "s_vrfCoordinator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "8288:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
																					"typeString": "contract IVRFCoordinatorV2Plus"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
																					"typeString": "contract IVRFCoordinatorV2Plus"
																				}
																			],
																			"id": 466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8280:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 465,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8280:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8280:25:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 460,
																	"name": "OnlyOwnerOrCoordinator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "8236:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address,address) pure"
																	}
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8236:70:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 470,
															"nodeType": "RevertStatement",
															"src": "8229:77:7"
														}
													]
												}
											},
											{
												"id": 473,
												"nodeType": "PlaceholderStatement",
												"src": "8318:1:7"
											}
										]
									},
									"id": 475,
									"name": "onlyOwnerOrCoordinator",
									"nameLocation": "8120:22:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8142:2:7"
									},
									"src": "8111:213:7",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 477,
							"src": "5669:2657:7",
							"usedErrors": [
								332,
								340,
								342
							]
						}
					],
					"src": "32:8295:7"
				},
				"id": 7
			},
			"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol",
					"exportedSymbols": {
						"IVRFCoordinatorV2Plus": [
							494
						],
						"IVRFSubscriptionV2Plus": [
							597
						],
						"VRFV2PlusClient": [
							639
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 478,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
							"file": "../libraries/VRFV2PlusClient.sol",
							"id": 480,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 640,
							"src": "57:65:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 479,
										"name": "VRFV2PlusClient",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 639,
										"src": "65:15:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol",
							"file": "./IVRFSubscriptionV2Plus.sol",
							"id": 482,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 598,
							"src": "123:68:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 481,
										"name": "IVRFSubscriptionV2Plus",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 597,
										"src": "131:22:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 483,
										"name": "IVRFSubscriptionV2Plus",
										"nameLocations": [
											"398:22:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 597,
										"src": "398:22:8"
									},
									"id": 484,
									"nodeType": "InheritanceSpecifier",
									"src": "398:22:8"
								}
							],
							"canonicalName": "IVRFCoordinatorV2Plus",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 494,
							"linearizedBaseContracts": [
								494,
								597
							],
							"name": "IVRFCoordinatorV2Plus",
							"nameLocation": "373:21:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "425:1588:8",
										"text": " @notice Request a set of random words.\n @param req - a struct containing following fields for randomness request:\n keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n requestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n extraArgs - abi-encoded extra args\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."
									},
									"functionSelector": "9b1c385e",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestRandomWords",
									"nameLocation": "2025:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "req",
												"nameLocation": "2088:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "2044:47:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RandomWordsRequest_$623_calldata_ptr",
													"typeString": "struct VRFV2PlusClient.RandomWordsRequest"
												},
												"typeName": {
													"id": 487,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 486,
														"name": "VRFV2PlusClient.RandomWordsRequest",
														"nameLocations": [
															"2044:15:8",
															"2060:18:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 623,
														"src": "2044:34:8"
													},
													"referencedDeclaration": 623,
													"src": "2044:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RandomWordsRequest_$623_storage_ptr",
														"typeString": "struct VRFV2PlusClient.RandomWordsRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2043:49:8"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "2119:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "2111:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2110:19:8"
									},
									"scope": 494,
									"src": "2016:114:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 495,
							"src": "363:1769:8",
							"usedErrors": []
						}
					],
					"src": "32:2101:8"
				},
				"id": 8
			},
			"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol",
					"exportedSymbols": {
						"IVRFMigratableConsumerV2Plus": [
							508
						]
					},
					"id": 509,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVRFMigratableConsumerV2Plus",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 497,
								"nodeType": "StructuredDocumentation",
								"src": "57:211:9",
								"text": "@notice The IVRFMigratableConsumerV2Plus interface defines the\n @notice method required to be implemented by all V2Plus consumers.\n @dev This interface is designed to be used in VRFConsumerBaseV2Plus."
							},
							"fullyImplemented": false,
							"id": 508,
							"linearizedBaseContracts": [
								508
							],
							"name": "IVRFMigratableConsumerV2Plus",
							"nameLocation": "278:28:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "d1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be6",
									"id": 501,
									"name": "CoordinatorSet",
									"nameLocation": "317:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"indexed": false,
												"mutability": "mutable",
												"name": "vrfCoordinator",
												"nameLocation": "340:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "332:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:24:9"
									},
									"src": "311:45:9"
								},
								{
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "360:131:9",
										"text": "@notice Sets the VRF Coordinator address\n @notice This method should only be callable by the coordinator or contract owner"
									},
									"functionSelector": "8ea98117",
									"id": 507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCoordinator",
									"nameLocation": "503:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "vrfCoordinator",
												"nameLocation": "526:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "518:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:24:9"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "550:0:9"
									},
									"scope": 508,
									"src": "494:57:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 509,
							"src": "268:285:9",
							"usedErrors": []
						}
					],
					"src": "32:522:9"
				},
				"id": 9
			},
			"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol",
					"exportedSymbols": {
						"IVRFSubscriptionV2Plus": [
							597
						]
					},
					"id": 598,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 510,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVRFSubscriptionV2Plus",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 511,
								"nodeType": "StructuredDocumentation",
								"src": "57:141:10",
								"text": "@notice The IVRFSubscriptionV2Plus interface defines the subscription\n @notice related methods implemented by the V2Plus coordinator."
							},
							"fullyImplemented": false,
							"id": 597,
							"linearizedBaseContracts": [
								597
							],
							"name": "IVRFSubscriptionV2Plus",
							"nameLocation": "208:22:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "235:170:10",
										"text": " @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"
									},
									"functionSelector": "bec4c08c",
									"id": 519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addConsumer",
									"nameLocation": "417:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "437:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "429:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "consumer",
												"nameLocation": "452:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "444:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:33:10"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "470:0:10"
									},
									"scope": 597,
									"src": "408:63:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "475:172:10",
										"text": " @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"
									},
									"functionSelector": "cb631797",
									"id": 527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeConsumer",
									"nameLocation": "659:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "682:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "674:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "consumer",
												"nameLocation": "697:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "689:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:33:10"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "715:0:10"
									},
									"scope": 597,
									"src": "650:66:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "720:140:10",
										"text": " @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"
									},
									"functionSelector": "0ae09540",
									"id": 535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelSubscription",
									"nameLocation": "872:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "899:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "891:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "914:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "906:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:27:10"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:10"
									},
									"scope": 597,
									"src": "863:64:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "931:211:10",
										"text": " @notice Accept subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."
									},
									"functionSelector": "b2a7cac5",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptSubscriptionOwnerTransfer",
									"nameLocation": "1154:31:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "1194:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1186:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1185:15:10"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1209:0:10"
									},
									"scope": 597,
									"src": "1145:65:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "1214:164:10",
										"text": " @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"
									},
									"functionSelector": "dac83d29",
									"id": 549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestSubscriptionOwnerTransfer",
									"nameLocation": "1390:32:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "1431:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1423:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1446:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1438:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:33:10"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1464:0:10"
									},
									"scope": 597,
									"src": "1381:84:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "1469:613:10",
										"text": " @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription with LINK, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));\n @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n @dev  to send Native with the call, for example:\n @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);"
									},
									"functionSelector": "a21a23e4",
									"id": 555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createSubscription",
									"nameLocation": "2094:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2112:2:10"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "2141:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "2133:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:15:10"
									},
									"scope": 597,
									"src": "2085:63:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "2152:422:10",
										"text": " @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return nativeBalance - native balance of the subscription in wei.\n @return reqCount - Requests count of subscription.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."
									},
									"functionSelector": "dc311dd3",
									"id": 572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSubscription",
									"nameLocation": "2586:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "2615:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2607:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2601:23:10"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "2667:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2660:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 560,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2660:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "nativeBalance",
												"nameLocation": "2683:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2676:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 562,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2676:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "reqCount",
												"nameLocation": "2705:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2698:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 564,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2698:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2723:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2715:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "consumers",
												"nameLocation": "2747:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2730:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 568,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2730:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 569,
													"nodeType": "ArrayTypeName",
													"src": "2730:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:98:10"
									},
									"scope": 597,
									"src": "2577:181:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "41af6c87",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingRequestExists",
									"nameLocation": "3063:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3092:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "3084:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3084:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:15:10"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "3122:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3122:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3121:6:10"
									},
									"scope": 597,
									"src": "3054:74:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "3132:427:10",
										"text": " @notice Paginate through all active VRF subscriptions.\n @param startIndex index of the subscription to start from\n @param maxCount maximum number of subscriptions to return, 0 to return all\n @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state"
									},
									"functionSelector": "aefb212f",
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getActiveSubscriptionIds",
									"nameLocation": "3571:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "startIndex",
												"nameLocation": "3604:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3596:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "maxCount",
												"nameLocation": "3624:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3616:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3616:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:38:10"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3657:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 586,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3657:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 587,
													"nodeType": "ArrayTypeName",
													"src": "3657:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3656:18:10"
									},
									"scope": 597,
									"src": "3562:113:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "3679:175:10",
										"text": " @notice Fund a subscription with native.\n @param subId - ID of the subscription\n @notice This method expects msg.value to be greater than or equal to 0."
									},
									"functionSelector": "95b55cfc",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fundSubscriptionWithNative",
									"nameLocation": "3866:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3901:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3893:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3893:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3892:15:10"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3924:0:10"
									},
									"scope": 597,
									"src": "3857:68:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 598,
							"src": "198:3729:10",
							"usedErrors": []
						}
					],
					"src": "32:3896:10"
				},
				"id": 10
			},
			"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
					"exportedSymbols": {
						"VRFV2PlusClient": [
							639
						]
					},
					"id": 640,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 599,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "VRFV2PlusClient",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 639,
							"linearizedBaseContracts": [
								639
							],
							"name": "VRFV2PlusClient",
							"nameLocation": "90:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "f7514ab4",
									"id": 607,
									"mutability": "constant",
									"name": "EXTRA_ARGS_V1_TAG",
									"nameLocation": "184:17:11",
									"nodeType": "VariableDeclaration",
									"scope": 639,
									"src": "161:79:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 600,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "161:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "565246204578747261417267735631",
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "221:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa",
															"typeString": "literal_string \"VRF ExtraArgsV1\""
														},
														"value": "VRF ExtraArgsV1"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa",
															"typeString": "literal_string \"VRF ExtraArgsV1\""
														}
													],
													"id": 603,
													"name": "keccak256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967288,
													"src": "211:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
														"typeString": "function (bytes memory) pure returns (bytes32)"
													}
												},
												"id": 605,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "211:28:11",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											],
											"id": 602,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "204:6:11",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 601,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "204:6:11",
												"typeDescriptions": {}
											}
										},
										"id": 606,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "204:36:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "VRFV2PlusClient.ExtraArgsV1",
									"id": 610,
									"members": [
										{
											"constant": false,
											"id": 609,
											"mutability": "mutable",
											"name": "nativePayment",
											"nameLocation": "274:13:11",
											"nodeType": "VariableDeclaration",
											"scope": 610,
											"src": "269:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 608,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "269:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExtraArgsV1",
									"nameLocation": "251:11:11",
									"nodeType": "StructDefinition",
									"scope": 639,
									"src": "244:48:11",
									"visibility": "public"
								},
								{
									"canonicalName": "VRFV2PlusClient.RandomWordsRequest",
									"id": 623,
									"members": [
										{
											"constant": false,
											"id": 612,
											"mutability": "mutable",
											"name": "keyHash",
											"nameLocation": "336:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 623,
											"src": "328:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 611,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "328:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 614,
											"mutability": "mutable",
											"name": "subId",
											"nameLocation": "357:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 623,
											"src": "349:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 613,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "349:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 616,
											"mutability": "mutable",
											"name": "requestConfirmations",
											"nameLocation": "375:20:11",
											"nodeType": "VariableDeclaration",
											"scope": 623,
											"src": "368:27:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 615,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "368:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 618,
											"mutability": "mutable",
											"name": "callbackGasLimit",
											"nameLocation": "408:16:11",
											"nodeType": "VariableDeclaration",
											"scope": 623,
											"src": "401:23:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 617,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "401:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 620,
											"mutability": "mutable",
											"name": "numWords",
											"nameLocation": "437:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 623,
											"src": "430:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 619,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "430:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 622,
											"mutability": "mutable",
											"name": "extraArgs",
											"nameLocation": "457:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 623,
											"src": "451:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 621,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "451:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RandomWordsRequest",
									"nameLocation": "303:18:11",
									"nodeType": "StructDefinition",
									"scope": 639,
									"src": "296:175:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "568:70:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "EXTRA_ARGS_V1_TAG",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "604:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 634,
															"name": "extraArgs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "623:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExtraArgsV1_$610_memory_ptr",
																"typeString": "struct VRFV2PlusClient.ExtraArgsV1 memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_struct$_ExtraArgsV1_$610_memory_ptr",
																"typeString": "struct VRFV2PlusClient.ExtraArgsV1 memory"
															}
														],
														"expression": {
															"id": 631,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "581:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "585:18:11",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "581:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "581:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 630,
												"id": 636,
												"nodeType": "Return",
												"src": "574:59:11"
											}
										]
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_argsToBytes",
									"nameLocation": "484:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "extraArgs",
												"nameLocation": "516:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "497:28:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExtraArgsV1_$610_memory_ptr",
													"typeString": "struct VRFV2PlusClient.ExtraArgsV1"
												},
												"typeName": {
													"id": 625,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 624,
														"name": "ExtraArgsV1",
														"nameLocations": [
															"497:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 610,
														"src": "497:11:11"
													},
													"referencedDeclaration": 610,
													"src": "497:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExtraArgsV1_$610_storage_ptr",
														"typeString": "struct VRFV2PlusClient.ExtraArgsV1"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:30:11"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "bts",
												"nameLocation": "563:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "550:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "550:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "549:18:11"
									},
									"scope": 639,
									"src": "475:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 640,
							"src": "82:558:11",
							"usedErrors": []
						}
					],
					"src": "32:609:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							704
						]
					},
					"id": 705,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 641,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:12"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 642,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:12",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 704,
							"linearizedBaseContracts": [
								704
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 645,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "1676:41:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 643,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 644,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 648,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "1723:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 646,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 647,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 650,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 704,
									"src": "1767:23:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 649,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "1811:39:12",
										"statements": [
											{
												"expression": {
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 653,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "1821:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 654,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "1831:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:12"
											}
										]
									},
									"id": 658,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:12"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:12"
									},
									"scope": 704,
									"src": "1797:53:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "2251:79:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 661,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "2261:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:12"
											},
											{
												"id": 664,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 665,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "2303:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:12"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:12",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 669,
									"name": "nonReentrant",
									"nameLocation": "2236:12:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:12"
									},
									"src": "2227:103:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "2375:248:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 673,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "2468:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 674,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "2479:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:12"
											},
											{
												"expression": {
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 679,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "2598:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 680,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "2608:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:12"
											}
										]
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:12"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:12"
									},
									"scope": 704,
									"src": "2336:287:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "2667:171:12",
										"statements": [
											{
												"expression": {
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 687,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "2809:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 688,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "2819:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:12"
											}
										]
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:12"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:12"
									},
									"scope": 704,
									"src": "2629:209:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "3081:43:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 698,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "3098:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 699,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "3109:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 697,
												"id": 701,
												"nodeType": "Return",
												"src": "3091:26:12"
											}
										]
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:12",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:12"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "3075:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 695,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:12"
									},
									"scope": 704,
									"src": "3017:107:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 705,
							"src": "888:2238:12",
							"usedErrors": []
						}
					],
					"src": "112:3015:12"
				},
				"id": 12
			},
			"LotteryAutomation.sol": {
				"ast": {
					"absolutePath": "LotteryAutomation.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							297
						],
						"AutomationCompatibleInterface": [
							67
						],
						"LotteryAutomation": [
							761
						],
						"LotteryBase": [
							1443
						],
						"LotteryDraw": [
							1967
						],
						"LotteryTickets": [
							2605
						],
						"ReentrancyGuard": [
							704
						],
						"VRFConsumerBaseV2Plus": [
							476
						],
						"VRFV2PlusClient": [
							639
						]
					},
					"id": 762,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 706,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:13"
						},
						{
							"absolutePath": "LotteryDraw.sol",
							"file": "./LotteryDraw.sol",
							"id": 707,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 762,
							"sourceUnit": 1968,
							"src": "57:27:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
							"file": "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
							"id": 709,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 762,
							"sourceUnit": 49,
							"src": "85:112:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 708,
										"name": "AutomationCompatibleInterface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 67,
										"src": "93:29:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 710,
										"name": "LotteryDraw",
										"nameLocations": [
											"238:11:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1967,
										"src": "238:11:13"
									},
									"id": 711,
									"nodeType": "InheritanceSpecifier",
									"src": "238:11:13"
								},
								{
									"baseName": {
										"id": 712,
										"name": "AutomationCompatibleInterface",
										"nameLocations": [
											"251:29:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 67,
										"src": "251:29:13"
									},
									"id": 713,
									"nodeType": "InheritanceSpecifier",
									"src": "251:29:13"
								}
							],
							"canonicalName": "LotteryAutomation",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 761,
							"linearizedBaseContracts": [
								761,
								67,
								1967,
								704,
								2605,
								1443,
								476,
								88,
								251,
								313,
								508
							],
							"name": "LotteryAutomation",
							"nameLocation": "217:17:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										60
									],
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "389:86:13",
										"statements": [
											{
												"expression": {
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 723,
														"name": "upkeepNeeded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "399:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "414:12:13",
														"subExpression": {
															"id": 724,
															"name": "pendingDraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "415:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "399:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "399:27:13"
											},
											{
												"expression": {
													"components": [
														{
															"id": 728,
															"name": "upkeepNeeded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "444:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "464:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "458:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 729,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "458:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "458:9:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"id": 733,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "443:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"functionReturnParameters": 722,
												"id": 734,
												"nodeType": "Return",
												"src": "436:32:13"
											}
										]
									},
									"functionSelector": "6e04ff0d",
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "296:11:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 717,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "338:8:13"
									},
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "308:14:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 714,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "308:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "307:16:13"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "361:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "356:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "356:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "375:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "375:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:33:13"
									},
									"scope": 761,
									"src": "287:188:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										66
									],
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "538:170:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 743,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "556:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "560:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "556:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 745,
																"name": "automationRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "570:18:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "556:32:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "590:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 742,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "548:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "548:59:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "548:59:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "625:12:13",
															"subExpression": {
																"id": 751,
																"name": "pendingDraw",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "626:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4472617720616c726561647920696e2070726f6772657373206f722070656e64696e67",
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "639:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f7ce55da0acb6d810c04101dd59bd935e7dad816f934e218111e7d4ab9ba514f",
																"typeString": "literal_string \"Draw already in progress or pending\""
															},
															"value": "Draw already in progress or pending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f7ce55da0acb6d810c04101dd59bd935e7dad816f934e218111e7d4ab9ba514f",
																"typeString": "literal_string \"Draw already in progress or pending\""
															}
														],
														"id": 750,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "617:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "617:60:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "617:60:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 756,
														"name": "_drawNumbers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "687:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "687:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "687:14:13"
											}
										]
									},
									"functionSelector": "4585e33b",
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "490:13:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 740,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "529:8:13"
									},
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "504:14:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 737,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "504:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:16:13"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "538:0:13"
									},
									"scope": 761,
									"src": "481:227:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 762,
							"src": "199:511:13",
							"usedErrors": [
								332,
								340,
								342
							]
						}
					],
					"src": "32:679:13"
				},
				"id": 13
			},
			"LotteryBase.sol": {
				"ast": {
					"absolutePath": "LotteryBase.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							297
						],
						"LotteryBase": [
							1443
						],
						"VRFConsumerBaseV2Plus": [
							476
						]
					},
					"id": 1444,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 763,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:14"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
							"file": "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
							"id": 765,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1444,
							"sourceUnit": 477,
							"src": "57:102:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 764,
										"name": "VRFConsumerBaseV2Plus",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 476,
										"src": "65:21:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"id": 767,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1444,
							"sourceUnit": 298,
							"src": "160:112:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 766,
										"name": "AggregatorV3Interface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 297,
										"src": "168:21:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 768,
										"name": "VRFConsumerBaseV2Plus",
										"nameLocations": [
											"307:21:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 476,
										"src": "307:21:14"
									},
									"id": 769,
									"nodeType": "InheritanceSpecifier",
									"src": "307:21:14"
								}
							],
							"canonicalName": "LotteryBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 1443,
							"linearizedBaseContracts": [
								1443,
								476,
								88,
								251,
								313,
								508
							],
							"name": "LotteryBase",
							"nameLocation": "292:11:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "63ecd0c3",
									"id": 776,
									"mutability": "mutable",
									"name": "usdTicketPrice",
									"nameLocation": "386:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "371:44:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 770,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "371:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000_by_1",
											"typeString": "int_const 1000000000"
										},
										"id": 775,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 771,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "403:2:14",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_100000000_by_1",
												"typeString": "int_const 100000000"
											},
											"id": 774,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 772,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "408:2:14",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "38",
												"id": 773,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "414:1:14",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_8_by_1",
													"typeString": "int_const 8"
												},
												"value": "8"
											},
											"src": "408:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000000_by_1",
												"typeString": "int_const 100000000"
											}
										},
										"src": "403:12:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000_by_1",
											"typeString": "int_const 1000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5cbbd635",
									"id": 778,
									"mutability": "mutable",
									"name": "lastDrawTime",
									"nameLocation": "436:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "421:27:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 777,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "421:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a19c8bc",
									"id": 780,
									"mutability": "mutable",
									"name": "currentRound",
									"nameLocation": "469:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "454:27:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 779,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "454:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 782,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "499:6:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "487:18:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 781,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "487:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ea5ab0ba",
									"id": 784,
									"mutability": "mutable",
									"name": "roundInProgress",
									"nameLocation": "526:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "511:30:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 783,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "511:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a9ecbf69",
									"id": 786,
									"mutability": "mutable",
									"name": "winnersSubmitted",
									"nameLocation": "559:16:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "547:28:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 785,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "547:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ea2d9ef",
									"id": 788,
									"mutability": "mutable",
									"name": "winnerSubmissionDeadline",
									"nameLocation": "596:24:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "581:39:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 787,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "581:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5dc228a0",
									"id": 790,
									"mutability": "mutable",
									"name": "automationRegistry",
									"nameLocation": "641:18:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "626:33:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 789,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "626:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LotteryBase.Ticket",
									"id": 797,
									"members": [
										{
											"constant": false,
											"id": 792,
											"mutability": "mutable",
											"name": "player",
											"nameLocation": "702:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 797,
											"src": "694:14:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 791,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "694:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 796,
											"mutability": "mutable",
											"name": "numbers",
											"nameLocation": "727:7:14",
											"nodeType": "VariableDeclaration",
											"scope": 797,
											"src": "718:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
												"typeString": "uint8[5]"
											},
											"typeName": {
												"baseType": {
													"id": 793,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "718:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 795,
												"length": {
													"hexValue": "35",
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "724:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_5_by_1",
														"typeString": "int_const 5"
													},
													"value": "5"
												},
												"nodeType": "ArrayTypeName",
												"src": "718:8:14",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
													"typeString": "uint8[5]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Ticket",
									"nameLocation": "677:6:14",
									"nodeType": "StructDefinition",
									"scope": 1443,
									"src": "670:71:14",
									"visibility": "public"
								},
								{
									"canonicalName": "LotteryBase.Round",
									"id": 829,
									"members": [
										{
											"constant": false,
											"id": 799,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "778:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 829,
											"src": "770:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 798,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "770:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 801,
											"mutability": "mutable",
											"name": "prizePool",
											"nameLocation": "805:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 829,
											"src": "797:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 800,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "797:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 805,
											"mutability": "mutable",
											"name": "winningNumbers",
											"nameLocation": "833:14:14",
											"nodeType": "VariableDeclaration",
											"scope": 829,
											"src": "824:23:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
												"typeString": "uint8[5]"
											},
											"typeName": {
												"baseType": {
													"id": 802,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "824:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 804,
												"length": {
													"hexValue": "35",
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "830:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_5_by_1",
														"typeString": "int_const 5"
													},
													"value": "5"
												},
												"nodeType": "ArrayTypeName",
												"src": "824:8:14",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
													"typeString": "uint8[5]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 809,
											"mutability": "mutable",
											"name": "tickets",
											"nameLocation": "866:7:14",
											"nodeType": "VariableDeclaration",
											"scope": 829,
											"src": "857:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_ptr",
												"typeString": "struct LotteryBase.Ticket[]"
											},
											"typeName": {
												"baseType": {
													"id": 807,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 806,
														"name": "Ticket",
														"nameLocations": [
															"857:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 797,
														"src": "857:6:14"
													},
													"referencedDeclaration": 797,
													"src": "857:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ticket_$797_storage_ptr",
														"typeString": "struct LotteryBase.Ticket"
													}
												},
												"id": 808,
												"nodeType": "ArrayTypeName",
												"src": "857:8:14",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_ptr",
													"typeString": "struct LotteryBase.Ticket[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 812,
											"mutability": "mutable",
											"name": "winners3",
											"nameLocation": "893:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 829,
											"src": "883:18:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 811,
												"nodeType": "ArrayTypeName",
												"src": "883:9:14",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 815,
											"mutability": "mutable",
											"name": "winners4",
											"nameLocation": "921:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 829,
											"src": "911:18:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 814,
												"nodeType": "ArrayTypeName",
												"src": "911:9:14",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 818,
											"mutability": "mutable",
											"name": "winners5",
											"nameLocation": "949:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 829,
											"src": "939:18:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 817,
												"nodeType": "ArrayTypeName",
												"src": "939:9:14",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 820,
											"mutability": "mutable",
											"name": "prizesDistributed",
											"nameLocation": "972:17:14",
											"nodeType": "VariableDeclaration",
											"scope": 829,
											"src": "967:22:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 819,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "967:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 822,
											"mutability": "mutable",
											"name": "rollover",
											"nameLocation": "1007:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 829,
											"src": "999:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 821,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "999:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 824,
											"mutability": "mutable",
											"name": "prizeAmount3",
											"nameLocation": "1033:12:14",
											"nodeType": "VariableDeclaration",
											"scope": 829,
											"src": "1025:20:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 823,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1025:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 826,
											"mutability": "mutable",
											"name": "prizeAmount4",
											"nameLocation": "1063:12:14",
											"nodeType": "VariableDeclaration",
											"scope": 829,
											"src": "1055:20:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 825,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1055:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 828,
											"mutability": "mutable",
											"name": "prizeAmount5",
											"nameLocation": "1093:12:14",
											"nodeType": "VariableDeclaration",
											"scope": 829,
											"src": "1085:20:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 827,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1085:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Round",
									"nameLocation": "754:5:14",
									"nodeType": "StructDefinition",
									"scope": 1443,
									"src": "747:365:14",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "87cc17b1",
									"id": 833,
									"mutability": "mutable",
									"name": "totalTicketsPerDraw",
									"nameLocation": "1153:19:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1118:54:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 832,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 830,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1126:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1118:27:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 831,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1137:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 839,
									"mutability": "mutable",
									"name": "hasParticipated",
									"nameLocation": "1232:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1178:69:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 838,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 834,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1186:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1178:44:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 837,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 835,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1205:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1197:24:14",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 836,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1216:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "c3279f8f",
									"id": 843,
									"mutability": "mutable",
									"name": "uniqueParticipantsPerDraw",
									"nameLocation": "1288:25:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1253:60:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 842,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 840,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1261:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1253:27:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 841,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1272:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e1bf07b7",
									"id": 848,
									"mutability": "mutable",
									"name": "allRounds",
									"nameLocation": "1352:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1319:42:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$829_storage_$",
										"typeString": "mapping(uint256 => struct LotteryBase.Round)"
									},
									"typeName": {
										"id": 847,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 844,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1327:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1319:25:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$829_storage_$",
											"typeString": "mapping(uint256 => struct LotteryBase.Round)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 846,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 845,
												"name": "Round",
												"nameLocations": [
													"1338:5:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 829,
												"src": "1338:5:14"
											},
											"referencedDeclaration": 829,
											"src": "1338:5:14",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
												"typeString": "struct LotteryBase.Round"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dc7fe6a5",
									"id": 856,
									"mutability": "mutable",
									"name": "playerTickets",
									"nameLocation": "1423:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1367:69:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct LotteryBase.Ticket[]))"
									},
									"typeName": {
										"id": 855,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 849,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1375:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1367:48:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct LotteryBase.Ticket[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 854,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 850,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1394:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1386:28:14",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_$",
												"typeString": "mapping(address => struct LotteryBase.Ticket[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 852,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 851,
														"name": "Ticket",
														"nameLocations": [
															"1405:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 797,
														"src": "1405:6:14"
													},
													"referencedDeclaration": 797,
													"src": "1405:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ticket_$797_storage_ptr",
														"typeString": "struct LotteryBase.Ticket"
													}
												},
												"id": 853,
												"nodeType": "ArrayTypeName",
												"src": "1405:8:14",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_ptr",
													"typeString": "struct LotteryBase.Ticket[]"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1706672a",
									"id": 860,
									"mutability": "mutable",
									"name": "roundLocked",
									"nameLocation": "1474:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1442:43:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 859,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 857,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1450:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1442:24:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 858,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1461:4:14",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 863,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "1523:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1492:40:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$297",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 862,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 861,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"1492:21:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 297,
											"src": "1492:21:14"
										},
										"referencedDeclaration": 297,
										"src": "1492:21:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$297",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 866,
									"mutability": "mutable",
									"name": "vrfCoordinator",
									"nameLocation": "1546:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1538:67:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 864,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1538:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307864363931663034626330433961323445646237386166394530303543663835373638463639344339",
										"id": 865,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1563:42:14",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xd691f04bc0C9a24Edb78af9E005Cf85768F694C9"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "8ac00021",
									"id": 868,
									"mutability": "mutable",
									"name": "s_subscriptionId",
									"nameLocation": "1626:16:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1611:31:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 867,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1611:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "45bb327b",
									"id": 871,
									"mutability": "mutable",
									"name": "s_keyHash",
									"nameLocation": "1663:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1648:93:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 869,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1648:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307831333064626135306164343335643465636332313461616430643538323034373431333762643638653765373737323431343466323763336333373764336434",
										"id": 870,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1675:66:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8618199034787155392146217452319723736505395714061315642167387499905351668692_by_1",
											"typeString": "int_const 8618...(68 digits omitted)...8692"
										},
										"value": "0x130dba50ad435d4ecc214aad0d5820474137bd68e7e77724144f27c3c377d3d4"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "24f74697",
									"id": 874,
									"mutability": "mutable",
									"name": "callbackGasLimit",
									"nameLocation": "1761:16:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1747:39:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 872,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "1747:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "353030303030",
										"id": 873,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1780:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000_by_1",
											"typeString": "int_const 500000"
										},
										"value": "500000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b0fb162f",
									"id": 877,
									"mutability": "mutable",
									"name": "requestConfirmations",
									"nameLocation": "1806:20:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1792:38:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 875,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1792:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 876,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1829:1:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7ccfd7fc",
									"id": 880,
									"mutability": "mutable",
									"name": "numWords",
									"nameLocation": "1850:8:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1836:26:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 878,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "1836:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 879,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1861:1:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc2a88c3",
									"id": 882,
									"mutability": "mutable",
									"name": "lastRequestId",
									"nameLocation": "1883:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1868:28:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 881,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1868:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "88ed5d64",
									"id": 884,
									"mutability": "mutable",
									"name": "pendingDraw",
									"nameLocation": "1914:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1902:23:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 883,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1902:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 888,
									"mutability": "mutable",
									"name": "s_requestInitiator",
									"nameLocation": "1968:18:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1931:55:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 887,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 885,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1939:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1931:27:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 886,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1950:7:14",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 890,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "2009:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1992:22:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 889,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1992:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "dad2a728ac67e726695710e743bce88ea2aaf66ef5795abda5e24fa7b7750d5f",
									"id": 894,
									"name": "DrawRequested",
									"nameLocation": "2041:13:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "2071:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2055:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2054:27:14"
									},
									"src": "2035:47:14"
								},
								{
									"anonymous": false,
									"eventSelector": "27f7a4cfb91dd4db4b9c99df04f38bd5bf8effa9b1ef1dc67f92c0d087029cd5",
									"id": 902,
									"name": "DrawFulfilled",
									"nameLocation": "2093:13:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "2123:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2107:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "winningNumbers",
												"nameLocation": "2143:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2134:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
													"typeString": "uint8[5]"
												},
												"typeName": {
													"baseType": {
														"id": 897,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "2134:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 899,
													"length": {
														"hexValue": "35",
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2140:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "2134:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
														"typeString": "uint8[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2106:52:14"
									},
									"src": "2087:72:14"
								},
								{
									"anonymous": false,
									"eventSelector": "3898084b2129dd1eefb522db8ed9fb6801a5b24dd6656f98ddffcf157174ae45",
									"id": 912,
									"name": "TicketPurchased",
									"nameLocation": "2170:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "2202:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "2186:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"indexed": false,
												"mutability": "mutable",
												"name": "numbers",
												"nameLocation": "2219:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "2210:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
													"typeString": "uint8[5]"
												},
												"typeName": {
													"baseType": {
														"id": 905,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "2210:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 907,
													"length": {
														"hexValue": "35",
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2216:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "2210:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
														"typeString": "uint8[5]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"indexed": false,
												"mutability": "mutable",
												"name": "round",
												"nameLocation": "2236:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "2228:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2228:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2185:57:14"
									},
									"src": "2164:79:14"
								},
								{
									"anonymous": false,
									"eventSelector": "418aae9de8f7ab4df1c137475770ff373eb33fd62a060544e9f4fc90f3cdb1a4",
									"id": 918,
									"name": "EmergencyWithdrawal",
									"nameLocation": "2254:19:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2282:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "2274:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2298:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "2290:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2273:35:14"
									},
									"src": "2248:61:14"
								},
								{
									"anonymous": false,
									"eventSelector": "d3da04b9295b0265da4cd8d1d9ea4f3bb84775e17288a007301f7193865b1818",
									"id": 924,
									"name": "PrizePoolFunded",
									"nameLocation": "2320:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2352:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "2336:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2368:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "2360:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2360:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2335:40:14"
									},
									"src": "2314:62:14"
								},
								{
									"anonymous": false,
									"eventSelector": "e4873708e4fc11619230dd3506a5f7cb96ece9d6d7b1c2ea9e7c46dac3f10baa",
									"id": 928,
									"name": "DrawStarted",
									"nameLocation": "2387:11:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"indexed": true,
												"mutability": "mutable",
												"name": "round",
												"nameLocation": "2415:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "2399:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:23:14"
									},
									"src": "2381:41:14"
								},
								{
									"anonymous": false,
									"eventSelector": "ee48f9a28712e5f0f17433fb01bf7f28c8c6a79eaf04a7f405eb34fa36b694f9",
									"id": 932,
									"name": "WinnersSubmitted",
									"nameLocation": "2433:16:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"indexed": true,
												"mutability": "mutable",
												"name": "round",
												"nameLocation": "2466:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "2450:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2450:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2449:23:14"
									},
									"src": "2427:46:14"
								},
								{
									"anonymous": false,
									"eventSelector": "07579876cf141b70e3bef48886191f214aa1ab0b2f1ecdbc8dcca466312aed7e",
									"id": 938,
									"name": "PrizesDistributed",
									"nameLocation": "2484:17:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"indexed": true,
												"mutability": "mutable",
												"name": "round",
												"nameLocation": "2518:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2502:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"indexed": false,
												"mutability": "mutable",
												"name": "tier",
												"nameLocation": "2531:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2525:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 935,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2525:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2501:35:14"
									},
									"src": "2478:59:14"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "2568:66:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2586:7:14",
															"subExpression": {
																"id": 941,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "2587:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420697320706175736564",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2595:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
																"typeString": "literal_string \"Contract is paused\""
															},
															"value": "Contract is paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
																"typeString": "literal_string \"Contract is paused\""
															}
														],
														"id": 940,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2578:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2578:38:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "2578:38:14"
											},
											{
												"id": 946,
												"nodeType": "PlaceholderStatement",
												"src": "2626:1:14"
											}
										]
									},
									"id": 948,
									"name": "whenNotPaused",
									"nameLocation": "2552:13:14",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2565:2:14"
									},
									"src": "2543:91:14",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "2715:227:14",
										"statements": [
											{
												"expression": {
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 956,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "2725:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$297",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307830353637463233323332353166304161623135633864466231393637453465384137443432616545",
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2759:42:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 957,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "2737:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$297_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2737:65:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$297",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "2725:77:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$297",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "2725:77:14"
											},
											{
												"expression": {
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 962,
														"name": "lastDrawTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2812:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 963,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2827:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2833:9:14",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2827:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2812:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "2812:30:14"
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 967,
														"name": "currentRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "2852:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2867:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2852:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "2852:16:14"
											},
											{
												"expression": {
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 971,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "2878:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2887:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2878:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "2878:14:14"
											},
											{
												"expression": {
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 975,
														"name": "s_subscriptionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "2902:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 976,
														"name": "subscriptionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "2921:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2902:33:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "2902:33:14"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 953,
													"name": "vrfCoordinator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 866,
													"src": "2699:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 954,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 952,
												"name": "VRFConsumerBaseV2Plus",
												"nameLocations": [
													"2677:21:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 476,
												"src": "2677:21:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2677:37:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "subscriptionId",
												"nameLocation": "2661:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2653:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:24:14"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2715:0:14"
									},
									"scope": 1443,
									"src": "2641:301:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "2984:30:14",
										"statements": [
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 985,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "2994:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3003:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2994:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "2994:13:14"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 983,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 982,
												"name": "onlyOwner",
												"nameLocations": [
													"2974:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "2974:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2974:9:14"
										}
									],
									"name": "pause",
									"nameLocation": "2957:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2962:2:14"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2984:0:14"
									},
									"scope": 1443,
									"src": "2948:66:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "3058:31:14",
										"statements": [
											{
												"expression": {
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 995,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "3068:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3077:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3068:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "3068:14:14"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 993,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 992,
												"name": "onlyOwner",
												"nameLocations": [
													"3048:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "3048:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3048:9:14"
										}
									],
									"name": "unpause",
									"nameLocation": "3029:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3036:2:14"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3058:0:14"
									},
									"scope": 1443,
									"src": "3020:69:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "3147:109:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1006,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3165:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3169:5:14",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3165:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3177:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3165:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e6420424e42",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3180:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_669e4fd763f3dc218cb884489c229b48610501d415ff28cdfe5f3e4c5823c1fa",
																"typeString": "literal_string \"Must send BNB\""
															},
															"value": "Must send BNB"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_669e4fd763f3dc218cb884489c229b48610501d415ff28cdfe5f3e4c5823c1fa",
																"typeString": "literal_string \"Must send BNB\""
															}
														],
														"id": 1005,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3157:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:39:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "3157:39:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1014,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3227:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3231:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3227:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1016,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3239:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3243:5:14",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3239:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1013,
														"name": "PrizePoolFunded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "3211:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3211:38:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "EmitStatement",
												"src": "3206:43:14"
											}
										]
									},
									"functionSelector": "88b2f7c3",
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1003,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1002,
												"name": "onlyOwner",
												"nameLocations": [
													"3137:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "3137:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3137:9:14"
										}
									],
									"name": "fundPrizePool",
									"nameLocation": "3104:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3117:2:14"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3147:0:14"
									},
									"scope": 1443,
									"src": "3095:161:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "3310:303:14",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "3328:15:14",
														"nodeType": "VariableDeclaration",
														"scope": 1062,
														"src": "3320:23:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3320:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1033,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1030,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3354:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_LotteryBase_$1443",
																	"typeString": "contract LotteryBase"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_LotteryBase_$1443",
																	"typeString": "contract LotteryBase"
																}
															],
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3346:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1028,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3346:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3346:13:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3360:7:14",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3346:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3320:47:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1035,
																"name": "contractBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "3385:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3403:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3385:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2066756e647320746f207769746864726177",
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3406:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																"typeString": "literal_string \"No funds to withdraw\""
															},
															"value": "No funds to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																"typeString": "literal_string \"No funds to withdraw\""
															}
														],
														"id": 1034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3377:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3377:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "3377:52:14"
											},
											{
												"assignments": [
													1042,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1042,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3447:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1062,
														"src": "3442:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1041,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3442:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1050,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3497:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1043,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "3460:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3460:7:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3468:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3460:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1046,
																"name": "contractBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "3480:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3460:36:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3460:40:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3441:59:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1052,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "3518:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3527:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3510:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:35:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "3510:35:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1057,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "3581:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1058,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "3598:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3598:7:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1056,
														"name": "EmergencyWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "3561:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3561:45:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "EmitStatement",
												"src": "3556:50:14"
											}
										]
									},
									"functionSelector": "db2e21bc",
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1024,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1023,
												"name": "onlyOwner",
												"nameLocations": [
													"3300:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "3300:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3300:9:14"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "3271:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3288:2:14"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3310:0:14"
									},
									"scope": 1443,
									"src": "3262:351:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "3750:218:14",
										"statements": [
											{
												"assignments": [
													null,
													1069,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1069,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "3770:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "3763:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1068,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3763:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1073,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1070,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "3785:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$297",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3795:15:14",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 296,
														"src": "3785:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3785:27:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3760:52:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1075,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "3830:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3838:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3830:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420424e42207072696365",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3841:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9ce90c2f35867ef908c7543d8e0d06fe9cda5e9d75107f61c1ae9e861811a13",
																"typeString": "literal_string \"Invalid BNB price\""
															},
															"value": "Invalid BNB price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9ce90c2f35867ef908c7543d8e0d06fe9cda5e9d75107f61c1ae9e861811a13",
																"typeString": "literal_string \"Invalid BNB price\""
															}
														],
														"id": 1074,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3822:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3822:39:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "3822:39:14"
											},
											{
												"assignments": [
													1082
												],
												"declarations": [
													{
														"constant": false,
														"id": 1082,
														"mutability": "mutable",
														"name": "bnbUsdPrice",
														"nameLocation": "3879:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "3871:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1081,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3871:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1087,
												"initialValue": {
													"arguments": [
														{
															"id": 1085,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "3901:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3893:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1083,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3893:7:14",
															"typeDescriptions": {}
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3893:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3871:36:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1088,
																	"name": "usdTicketPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "3925:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3942:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "3925:21:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1091,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3924:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1092,
														"name": "bnbUsdPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "3950:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3924:37:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1067,
												"id": 1094,
												"nodeType": "Return",
												"src": "3917:44:14"
											}
										]
									},
									"functionSelector": "d11532b7",
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getusdTicketPriceInBNB",
									"nameLocation": "3695:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3717:2:14"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "3741:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3741:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3740:9:14"
									},
									"scope": 1443,
									"src": "3686:282:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "4034:260:14",
										"statements": [
											{
												"assignments": [
													null,
													1102,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1102,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "4054:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "4047:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1101,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4047:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1106,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1103,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "4069:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$297",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4079:15:14",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 296,
														"src": "4069:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4069:27:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4044:52:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1108,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "4114:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4122:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4114:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420424e422f555344207072696365",
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4125:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_57de6640aa9eb852c444065801de863f25363cc2bc20e908c85dc3c66e501805",
																"typeString": "literal_string \"Invalid BNB/USD price\""
															},
															"value": "Invalid BNB/USD price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_57de6640aa9eb852c444065801de863f25363cc2bc20e908c85dc3c66e501805",
																"typeString": "literal_string \"Invalid BNB/USD price\""
															}
														],
														"id": 1107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4106:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:43:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "4106:43:14"
											},
											{
												"assignments": [
													1115
												],
												"declarations": [
													{
														"constant": false,
														"id": 1115,
														"mutability": "mutable",
														"name": "bnbPrice",
														"nameLocation": "4167:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "4159:16:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1114,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4159:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1120,
												"initialValue": {
													"arguments": [
														{
															"id": 1118,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "4186:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4178:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4178:7:14",
															"typeDescriptions": {}
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4178:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4159:33:14"
											},
											{
												"assignments": [
													1122
												],
												"declarations": [
													{
														"constant": false,
														"id": 1122,
														"mutability": "mutable",
														"name": "usdValue",
														"nameLocation": "4210:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "4202:16:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1121,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4202:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1133,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1125,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4230:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LotteryBase_$1443",
																					"typeString": "contract LotteryBase"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LotteryBase_$1443",
																					"typeString": "contract LotteryBase"
																				}
																			],
																			"id": 1124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4222:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1123,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4222:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4222:13:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4236:7:14",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "4222:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1128,
																	"name": "bnbPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "4246:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4222:32:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1130,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4221:34:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653236",
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4258:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"value": "1e26"
													},
													"src": "4221:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4202:60:14"
											},
											{
												"expression": {
													"id": 1134,
													"name": "usdValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1122,
													"src": "4279:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1100,
												"id": 1135,
												"nodeType": "Return",
												"src": "4272:15:14"
											}
										]
									},
									"functionSelector": "6a91da2b",
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrizePoolInUSD",
									"nameLocation": "3984:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4001:2:14"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "4025:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4025:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4024:9:14"
									},
									"scope": 1443,
									"src": "3975:319:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "4382:55:14",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1146,
															"name": "allRounds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "4399:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$829_storage_$",
																"typeString": "mapping(uint256 => struct LotteryBase.Round storage ref)"
															}
														},
														"id": 1148,
														"indexExpression": {
															"id": 1147,
															"name": "round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "4409:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4399:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$829_storage",
															"typeString": "struct LotteryBase.Round storage ref"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4416:14:14",
													"memberName": "winningNumbers",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 805,
													"src": "4399:31:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_storage",
														"typeString": "uint8[5] storage ref"
													}
												},
												"functionReturnParameters": 1145,
												"id": 1150,
												"nodeType": "Return",
												"src": "4392:38:14"
											}
										]
									},
									"functionSelector": "9d5c35ae",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWinningNumbers",
									"nameLocation": "4309:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "round",
												"nameLocation": "4335:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "4327:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4326:15:14"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "4365:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
													"typeString": "uint8[5]"
												},
												"typeName": {
													"baseType": {
														"id": 1141,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "4365:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1143,
													"length": {
														"hexValue": "35",
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4371:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "4365:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
														"typeString": "uint8[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4364:17:14"
									},
									"scope": 1443,
									"src": "4300:137:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "4591:104:14",
										"statements": [
											{
												"assignments": [
													1168
												],
												"declarations": [
													{
														"constant": false,
														"id": 1168,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "4615:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 1181,
														"src": "4601:15:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
															"typeString": "struct LotteryBase.Round"
														},
														"typeName": {
															"id": 1167,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1166,
																"name": "Round",
																"nameLocations": [
																	"4601:5:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 829,
																"src": "4601:5:14"
															},
															"referencedDeclaration": 829,
															"src": "4601:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																"typeString": "struct LotteryBase.Round"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1172,
												"initialValue": {
													"baseExpression": {
														"id": 1169,
														"name": "allRounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "4619:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$829_storage_$",
															"typeString": "mapping(uint256 => struct LotteryBase.Round storage ref)"
														}
													},
													"id": 1171,
													"indexExpression": {
														"id": 1170,
														"name": "round",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "4629:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4619:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Round_$829_storage",
														"typeString": "struct LotteryBase.Round storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4601:34:14"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 1173,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "4653:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																	"typeString": "struct LotteryBase.Round storage pointer"
																}
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4655:8:14",
															"memberName": "winners3",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 812,
															"src": "4653:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"expression": {
																"id": 1175,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "4665:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																	"typeString": "struct LotteryBase.Round storage pointer"
																}
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4667:8:14",
															"memberName": "winners4",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 815,
															"src": "4665:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"expression": {
																"id": 1177,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "4677:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																	"typeString": "struct LotteryBase.Round storage pointer"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4679:8:14",
															"memberName": "winners5",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 818,
															"src": "4677:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														}
													],
													"id": 1179,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4652:36:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_storage_$_t_array$_t_address_$dyn_storage_$_t_array$_t_address_$dyn_storage_$",
														"typeString": "tuple(address[] storage ref,address[] storage ref,address[] storage ref)"
													}
												},
												"functionReturnParameters": 1165,
												"id": 1180,
												"nodeType": "Return",
												"src": "4645:43:14"
											}
										]
									},
									"functionSelector": "75b26d21",
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWinningAddresses",
									"nameLocation": "4452:19:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "round",
												"nameLocation": "4480:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "4472:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4472:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4471:15:14"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "winners3",
												"nameLocation": "4527:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "4510:25:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1156,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4510:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1157,
													"nodeType": "ArrayTypeName",
													"src": "4510:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "winners4",
												"nameLocation": "4554:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "4537:25:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1159,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4537:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1160,
													"nodeType": "ArrayTypeName",
													"src": "4537:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "winners5",
												"nameLocation": "4581:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "4564:25:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1162,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4564:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1163,
													"nodeType": "ArrayTypeName",
													"src": "4564:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4509:81:14"
									},
									"scope": 1443,
									"src": "4443:252:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "4827:404:14",
										"statements": [
											{
												"assignments": [
													1197
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "4851:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "4837:15:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
															"typeString": "struct LotteryBase.Round"
														},
														"typeName": {
															"id": 1196,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1195,
																"name": "Round",
																"nameLocations": [
																	"4837:5:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 829,
																"src": "4837:5:14"
															},
															"referencedDeclaration": 829,
															"src": "4837:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																"typeString": "struct LotteryBase.Round"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"baseExpression": {
														"id": 1198,
														"name": "allRounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "4855:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$829_storage_$",
															"typeString": "mapping(uint256 => struct LotteryBase.Round storage ref)"
														}
													},
													"id": 1200,
													"indexExpression": {
														"id": 1199,
														"name": "round",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "4865:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4855:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Round_$829_storage",
														"typeString": "struct LotteryBase.Round storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4837:34:14"
											},
											{
												"assignments": [
													1203
												],
												"declarations": [
													{
														"constant": false,
														"id": 1203,
														"mutability": "mutable",
														"name": "numTickets",
														"nameLocation": "4889:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "4881:18:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1202,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4881:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1207,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 1204,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "4902:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																"typeString": "struct LotteryBase.Round storage pointer"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4904:7:14",
														"memberName": "tickets",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 809,
														"src": "4902:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Ticket_$797_storage_$dyn_storage",
															"typeString": "struct LotteryBase.Ticket storage ref[] storage ref"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4912:6:14",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4902:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4881:37:14"
											},
											{
												"expression": {
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1208,
														"name": "players",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "4937:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1212,
																"name": "numTickets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1203,
																"src": "4961:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4947:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1209,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4951:7:14",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1210,
																"nodeType": "ArrayTypeName",
																"src": "4951:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4947:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "4937:35:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "4937:35:14"
											},
											{
												"expression": {
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1216,
														"name": "numbersList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "4982:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_array$_t_uint8_$5_memory_ptr_$dyn_memory_ptr",
															"typeString": "uint8[5] memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1222,
																"name": "numTickets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1203,
																"src": "5011:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4996:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint8_$5_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint8[5] memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"baseType": {
																		"id": 1217,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5000:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 1219,
																	"length": {
																		"hexValue": "35",
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5006:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	},
																	"nodeType": "ArrayTypeName",
																	"src": "5000:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
																		"typeString": "uint8[5]"
																	}
																},
																"id": 1220,
																"nodeType": "ArrayTypeName",
																"src": "5000:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_array$_t_uint8_$5_storage_$dyn_storage_ptr",
																	"typeString": "uint8[5][]"
																}
															}
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4996:26:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_array$_t_uint8_$5_memory_ptr_$dyn_memory_ptr",
															"typeString": "uint8[5] memory[] memory"
														}
													},
													"src": "4982:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_array$_t_uint8_$5_memory_ptr_$dyn_memory_ptr",
														"typeString": "uint8[5] memory[] memory"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "4982:40:14"
											},
											{
												"body": {
													"id": 1258,
													"nodeType": "Block",
													"src": "5079:146:14",
													"statements": [
														{
															"assignments": [
																1238
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1238,
																	"mutability": "mutable",
																	"name": "ticket",
																	"nameLocation": "5108:6:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 1258,
																	"src": "5093:21:14",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Ticket_$797_storage_ptr",
																		"typeString": "struct LotteryBase.Ticket"
																	},
																	"typeName": {
																		"id": 1237,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1236,
																			"name": "Ticket",
																			"nameLocations": [
																				"5093:6:14"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 797,
																			"src": "5093:6:14"
																		},
																		"referencedDeclaration": 797,
																		"src": "5093:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Ticket_$797_storage_ptr",
																			"typeString": "struct LotteryBase.Ticket"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1243,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1239,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "5117:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																			"typeString": "struct LotteryBase.Round storage pointer"
																		}
																	},
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5119:7:14",
																	"memberName": "tickets",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 809,
																	"src": "5117:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Ticket_$797_storage_$dyn_storage",
																		"typeString": "struct LotteryBase.Ticket storage ref[] storage ref"
																	}
																},
																"id": 1242,
																"indexExpression": {
																	"id": 1241,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "5127:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5117:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Ticket_$797_storage",
																	"typeString": "struct LotteryBase.Ticket storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5093:36:14"
														},
														{
															"expression": {
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1244,
																		"name": "players",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1188,
																		"src": "5143:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 1246,
																	"indexExpression": {
																		"id": 1245,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1227,
																		"src": "5151:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5143:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1247,
																		"name": "ticket",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1238,
																		"src": "5156:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Ticket_$797_storage_ptr",
																			"typeString": "struct LotteryBase.Ticket storage pointer"
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5163:6:14",
																	"memberName": "player",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 792,
																	"src": "5156:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5143:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1250,
															"nodeType": "ExpressionStatement",
															"src": "5143:26:14"
														},
														{
															"expression": {
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1251,
																		"name": "numbersList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "5183:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_array$_t_uint8_$5_memory_ptr_$dyn_memory_ptr",
																			"typeString": "uint8[5] memory[] memory"
																		}
																	},
																	"id": 1253,
																	"indexExpression": {
																		"id": 1252,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1227,
																		"src": "5195:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5183:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																		"typeString": "uint8[5] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1254,
																		"name": "ticket",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1238,
																		"src": "5200:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Ticket_$797_storage_ptr",
																			"typeString": "struct LotteryBase.Ticket storage pointer"
																		}
																	},
																	"id": 1255,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5207:7:14",
																	"memberName": "numbers",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 796,
																	"src": "5200:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint8_$5_storage",
																		"typeString": "uint8[5] storage ref"
																	}
																},
																"src": "5183:31:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																	"typeString": "uint8[5] memory"
																}
															},
															"id": 1257,
															"nodeType": "ExpressionStatement",
															"src": "5183:31:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1230,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "5058:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1231,
														"name": "numTickets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "5062:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5058:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1259,
												"initializationExpression": {
													"assignments": [
														1227
													],
													"declarations": [
														{
															"constant": false,
															"id": 1227,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5051:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 1259,
															"src": "5046:6:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1226,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5046:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1229,
													"initialValue": {
														"hexValue": "30",
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5055:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5046:10:14"
												},
												"loopExpression": {
													"expression": {
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5074:3:14",
														"subExpression": {
															"id": 1233,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "5074:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1235,
													"nodeType": "ExpressionStatement",
													"src": "5074:3:14"
												},
												"nodeType": "ForStatement",
												"src": "5041:184:14"
											}
										]
									},
									"functionSelector": "85705ad3",
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllTicketsForRound",
									"nameLocation": "4710:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "round",
												"nameLocation": "4740:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4732:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4732:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4731:15:14"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "players",
												"nameLocation": "4787:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4770:24:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1186,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4770:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1187,
													"nodeType": "ArrayTypeName",
													"src": "4770:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "numbersList",
												"nameLocation": "4814:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4796:29:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_array$_t_uint8_$5_memory_ptr_$dyn_memory_ptr",
													"typeString": "uint8[5][]"
												},
												"typeName": {
													"baseType": {
														"baseType": {
															"id": 1189,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4796:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"id": 1191,
														"length": {
															"hexValue": "35",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4802:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"nodeType": "ArrayTypeName",
														"src": "4796:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
															"typeString": "uint8[5]"
														}
													},
													"id": 1192,
													"nodeType": "ArrayTypeName",
													"src": "4796:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_array$_t_uint8_$5_storage_$dyn_storage_ptr",
														"typeString": "uint8[5][]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4769:57:14"
									},
									"scope": 1443,
									"src": "4701:530:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "5368:105:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1269,
																"name": "newPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "5386:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5397:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5386:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d7573742062652067726561746572207468616e2030",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5400:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
																"typeString": "literal_string \"Price must be greater than 0\""
															},
															"value": "Price must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
																"typeString": "literal_string \"Price must be greater than 0\""
															}
														],
														"id": 1268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5378:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5378:53:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "5378:53:14"
											},
											{
												"expression": {
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1275,
														"name": "usdTicketPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "5441:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1276,
														"name": "newPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "5458:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5441:25:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "5441:25:14"
											}
										]
									},
									"functionSelector": "bc076f52",
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1266,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1265,
												"name": "onlyOwner",
												"nameLocations": [
													"5358:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "5358:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "5358:9:14"
										}
									],
									"name": "setUsdTicketPrice",
									"nameLocation": "5313:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "newPrice",
												"nameLocation": "5339:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "5331:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:14"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5368:0:14"
									},
									"scope": 1443,
									"src": "5304:169:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1298,
										"nodeType": "Block",
										"src": "5545:94:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1288,
																"name": "_newLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "5563:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "313030303030",
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5576:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000_by_1",
																	"typeString": "int_const 100000"
																},
																"value": "100000"
															},
															"src": "5563:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6f206c6f77",
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5584:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_052b0da5fed163c8df52e5c1be74c254428499f58b18ce988b4cb464b9d81754",
																"typeString": "literal_string \"Too low\""
															},
															"value": "Too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_052b0da5fed163c8df52e5c1be74c254428499f58b18ce988b4cb464b9d81754",
																"typeString": "literal_string \"Too low\""
															}
														],
														"id": 1287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5555:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5555:39:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "5555:39:14"
											},
											{
												"expression": {
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1294,
														"name": "callbackGasLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "5604:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1295,
														"name": "_newLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "5623:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "5604:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "5604:28:14"
											}
										]
									},
									"functionSelector": "a4eb718c",
									"id": 1299,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1285,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1284,
												"name": "onlyOwner",
												"nameLocations": [
													"5535:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "5535:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "5535:9:14"
										}
									],
									"name": "setCallbackGasLimit",
									"nameLocation": "5488:19:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "_newLimit",
												"nameLocation": "5515:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "5508:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1281,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "5508:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5507:18:14"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5545:0:14"
									},
									"scope": 1443,
									"src": "5479:160:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "5714:108:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1307,
																"name": "_registry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1301,
																"src": "5732:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5753:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5745:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1308,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5745:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5745:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5732:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5757:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5724:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5724:51:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "5724:51:14"
											},
											{
												"expression": {
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1316,
														"name": "automationRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "5785:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1317,
														"name": "_registry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "5806:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5785:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "5785:30:14"
											}
										]
									},
									"functionSelector": "5ff2d2aa",
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1304,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1303,
												"name": "onlyOwner",
												"nameLocations": [
													"5704:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "5704:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "5704:9:14"
										}
									],
									"name": "setAutomationRegistry",
									"nameLocation": "5654:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "5684:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "5676:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5676:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5675:19:14"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5714:0:14"
									},
									"scope": 1443,
									"src": "5645:177:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "5883:36:14",
										"statements": [
											{
												"expression": {
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1328,
														"name": "pendingDraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "5893:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1329,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "5907:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5893:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "5893:19:14"
											}
										]
									},
									"functionSelector": "667640eb",
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1326,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1325,
												"name": "onlyOwner",
												"nameLocations": [
													"5873:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "5873:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "5873:9:14"
										}
									],
									"name": "setPendingDraw",
									"nameLocation": "5837:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5857:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "5852:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5852:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5851:12:14"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5883:0:14"
									},
									"scope": 1443,
									"src": "5828:91:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "5985:41:14",
										"statements": [
											{
												"expression": {
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1340,
														"name": "winnersSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "5995:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1341,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "6014:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5995:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "5995:24:14"
											}
										]
									},
									"functionSelector": "25d75795",
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1338,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1337,
												"name": "onlyOwner",
												"nameLocations": [
													"5975:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "5975:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "5975:9:14"
										}
									],
									"name": "setWinnersSubmitted",
									"nameLocation": "5934:19:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5959:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "5954:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5954:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5953:12:14"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5985:0:14"
									},
									"scope": 1443,
									"src": "5925:101:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "6118:214:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1355,
																"name": "_coordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "6136:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6160:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6152:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6152:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6152:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6136:26:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420636f6f7264696e61746f722061646472657373",
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6164:29:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1b3e80b42aa208af0e94254ad58b935650db4de67b784c8987256692d7e72bd",
																"typeString": "literal_string \"Invalid coordinator address\""
															},
															"value": "Invalid coordinator address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1b3e80b42aa208af0e94254ad58b935650db4de67b784c8987256692d7e72bd",
																"typeString": "literal_string \"Invalid coordinator address\""
															}
														],
														"id": 1354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6128:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6128:66:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "6128:66:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1365,
																"name": "_keyHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "6212:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6232:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6224:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1366,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6224:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6224:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "6212:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206b65792068617368",
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6236:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4ef32fd39e7757f2f26daf26254a7c2d7bf462423cdd80962438d7836b80f50",
																"typeString": "literal_string \"Invalid key hash\""
															},
															"value": "Invalid key hash"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4ef32fd39e7757f2f26daf26254a7c2d7bf462423cdd80962438d7836b80f50",
																"typeString": "literal_string \"Invalid key hash\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6204:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6204:51:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "6204:51:14"
											},
											{
												"expression": {
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1374,
														"name": "vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "6266:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1375,
														"name": "_coordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "6283:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6266:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "6266:29:14"
											},
											{
												"expression": {
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1378,
														"name": "s_keyHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "6305:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1379,
														"name": "_keyHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "6317:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6305:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "6305:20:14"
											}
										]
									},
									"functionSelector": "f664e752",
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1352,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1351,
												"name": "onlyOwner",
												"nameLocations": [
													"6108:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "6108:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "6108:9:14"
										}
									],
									"name": "updateVRFSettings",
									"nameLocation": "6041:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "_coordinator",
												"nameLocation": "6067:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "6059:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6059:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "_keyHash",
												"nameLocation": "6089:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "6081:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6081:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6058:40:14"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6118:0:14"
									},
									"scope": 1443,
									"src": "6032:300:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "6400:131:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1391,
																"name": "_newFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1385,
																"src": "6418:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6438:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6430:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1392,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6430:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6430:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6418:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420707269636520666565642061646472657373",
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6442:28:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1",
																"typeString": "literal_string \"Invalid price feed address\""
															},
															"value": "Invalid price feed address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1",
																"typeString": "literal_string \"Invalid price feed address\""
															}
														],
														"id": 1390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6410:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6410:61:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "6410:61:14"
											},
											{
												"expression": {
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1400,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "6481:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$297",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1402,
																"name": "_newFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1385,
																"src": "6515:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1401,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "6493:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$297_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6493:31:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$297",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "6481:43:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$297",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "6481:43:14"
											}
										]
									},
									"functionSelector": "95877f78",
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1388,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1387,
												"name": "onlyOwner",
												"nameLocations": [
													"6390:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "6390:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "6390:9:14"
										}
									],
									"name": "updatePriceFeed",
									"nameLocation": "6347:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "_newFeed",
												"nameLocation": "6371:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "6363:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6363:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6362:18:14"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6400:0:14"
									},
									"scope": 1443,
									"src": "6338:193:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "6604:102:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1415,
																"name": "newSubId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "6622:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6633:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6622:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420737562736372697074696f6e204944",
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6636:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04555535db4ea5ab36932d2babe8a8b8b7b892eb8c6f700b3690aa278d614af2",
																"typeString": "literal_string \"Invalid subscription ID\""
															},
															"value": "Invalid subscription ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04555535db4ea5ab36932d2babe8a8b8b7b892eb8c6f700b3690aa278d614af2",
																"typeString": "literal_string \"Invalid subscription ID\""
															}
														],
														"id": 1414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6614:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6614:48:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "6614:48:14"
											},
											{
												"expression": {
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1421,
														"name": "s_subscriptionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "6672:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1422,
														"name": "newSubId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "6691:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6672:27:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "6672:27:14"
											}
										]
									},
									"functionSelector": "2b09d310",
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1412,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1411,
												"name": "onlyOwner",
												"nameLocations": [
													"6594:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "6594:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "6594:9:14"
										}
									],
									"name": "updateSubscriptionId",
									"nameLocation": "6546:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "newSubId",
												"nameLocation": "6575:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "6567:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6567:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6566:18:14"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6604:0:14"
									},
									"scope": 1443,
									"src": "6537:169:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"id": 1435,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_validateNumbers",
									"nameLocation": "6729:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "numbers",
												"nameLocation": "6762:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "6746:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
													"typeString": "uint8[5]"
												},
												"typeName": {
													"baseType": {
														"id": 1427,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "6746:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1429,
													"length": {
														"hexValue": "35",
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6752:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "6746:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
														"typeString": "uint8[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6745:25:14"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "6802:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6802:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6801:6:14"
									},
									"scope": 1443,
									"src": "6720:88:14",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 1442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_generateRandomNumbers",
									"nameLocation": "6822:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6844:2:14"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "6873:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
													"typeString": "uint8[5]"
												},
												"typeName": {
													"baseType": {
														"id": 1437,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "6873:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1439,
													"length": {
														"hexValue": "35",
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6879:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "6873:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
														"typeString": "uint8[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6872:17:14"
									},
									"scope": 1443,
									"src": "6813:77:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1444,
							"src": "274:6618:14",
							"usedErrors": [
								332,
								340,
								342
							]
						}
					],
					"src": "32:6861:14"
				},
				"id": 14
			},
			"LotteryDraw.sol": {
				"ast": {
					"absolutePath": "LotteryDraw.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							297
						],
						"LotteryBase": [
							1443
						],
						"LotteryDraw": [
							1967
						],
						"LotteryTickets": [
							2605
						],
						"ReentrancyGuard": [
							704
						],
						"VRFConsumerBaseV2Plus": [
							476
						],
						"VRFV2PlusClient": [
							639
						]
					},
					"id": 1968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1445,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:15"
						},
						{
							"absolutePath": "LotteryTickets.sol",
							"file": "./LotteryTickets.sol",
							"id": 1446,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1968,
							"sourceUnit": 2606,
							"src": "57:30:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
							"file": "@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
							"id": 1448,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1968,
							"sourceUnit": 640,
							"src": "88:100:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1447,
										"name": "VRFV2PlusClient",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 639,
										"src": "96:15:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1968,
							"sourceUnit": 705,
							"src": "189:62:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1450,
										"name": "LotteryTickets",
										"nameLocations": [
											"309:14:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2605,
										"src": "309:14:15"
									},
									"id": 1451,
									"nodeType": "InheritanceSpecifier",
									"src": "309:14:15"
								},
								{
									"baseName": {
										"id": 1452,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"325:15:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 704,
										"src": "325:15:15"
									},
									"id": 1453,
									"nodeType": "InheritanceSpecifier",
									"src": "325:15:15"
								}
							],
							"canonicalName": "LotteryDraw",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1967,
							"linearizedBaseContracts": [
								1967,
								704,
								2605,
								1443,
								476,
								88,
								251,
								313,
								508
							],
							"name": "LotteryDraw",
							"nameLocation": "294:11:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1455,
									"mutability": "mutable",
									"name": "_distributing",
									"nameLocation": "431:13:15",
									"nodeType": "VariableDeclaration",
									"scope": 1967,
									"src": "418:26:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1454,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "418:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "491:32:15",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1460,
														"name": "_drawNumbers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "501:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "501:14:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "501:14:15"
											}
										]
									},
									"functionSelector": "676c902f",
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1457,
												"name": "onlyOwner",
												"nameLocations": [
													"481:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "481:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "481:9:15"
										}
									],
									"name": "drawNumbers",
									"nameLocation": "460:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "471:2:15"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "491:0:15"
									},
									"scope": 1967,
									"src": "451:72:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										382
									],
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "626:887:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1474,
															"name": "pendingDraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "644:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20647261772070656e64696e67",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "657:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ac39997659acb0603e3ded04dbf8eaacdfcab7499664db47d123fd4862f71397",
																"typeString": "literal_string \"No draw pending\""
															},
															"value": "No draw pending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ac39997659acb0603e3ded04dbf8eaacdfcab7499664db47d123fd4862f71397",
																"typeString": "literal_string \"No draw pending\""
															}
														],
														"id": 1473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "636:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "636:39:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "636:39:15"
											},
											{
												"assignments": [
													1483
												],
												"declarations": [
													{
														"constant": false,
														"id": 1483,
														"mutability": "mutable",
														"name": "winning",
														"nameLocation": "710:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 1593,
														"src": "694:23:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
															"typeString": "uint8[5]"
														},
														"typeName": {
															"baseType": {
																"id": 1481,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "694:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1482,
															"length": {
																"hexValue": "35",
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "700:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"nodeType": "ArrayTypeName",
															"src": "694:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
																"typeString": "uint8[5]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1484,
												"nodeType": "VariableDeclarationStatement",
												"src": "694:23:15"
											},
											{
												"assignments": [
													1486
												],
												"declarations": [
													{
														"constant": false,
														"id": 1486,
														"mutability": "mutable",
														"name": "randomValue",
														"nameLocation": "735:11:15",
														"nodeType": "VariableDeclaration",
														"scope": 1593,
														"src": "727:19:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1485,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "727:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1490,
												"initialValue": {
													"baseExpression": {
														"id": 1487,
														"name": "randomWords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "749:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"id": 1489,
													"indexExpression": {
														"hexValue": "30",
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "761:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "749:14:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "727:36:15"
											},
											{
												"assignments": [
													1492
												],
												"declarations": [
													{
														"constant": false,
														"id": 1492,
														"mutability": "mutable",
														"name": "i",
														"nameLocation": "779:1:15",
														"nodeType": "VariableDeclaration",
														"scope": 1593,
														"src": "773:7:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1491,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "773:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1494,
												"initialValue": {
													"hexValue": "30",
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "783:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "773:11:15"
											},
											{
												"body": {
													"id": 1564,
													"nodeType": "Block",
													"src": "809:453:15",
													"statements": [
														{
															"assignments": [
																1499
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1499,
																	"mutability": "mutable",
																	"name": "num",
																	"nameLocation": "829:3:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 1564,
																	"src": "823:9:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1498,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "823:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1509,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1504,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1502,
																						"name": "randomValue",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1486,
																						"src": "842:11:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"hexValue": "3530",
																						"id": 1503,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "856:2:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_50_by_1",
																							"typeString": "int_const 50"
																						},
																						"value": "50"
																					},
																					"src": "842:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1505,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "841:18:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "862:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "841:22:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "835:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1500,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "835:5:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "835:29:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "823:41:15"
														},
														{
															"assignments": [
																1511
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1511,
																	"mutability": "mutable",
																	"name": "exists",
																	"nameLocation": "883:6:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 1564,
																	"src": "878:11:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1510,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "878:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1513,
															"initialValue": {
																"hexValue": "66616c7365",
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "892:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "878:19:15"
														},
														{
															"body": {
																"id": 1536,
																"nodeType": "Block",
																"src": "940:136:15",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 1524,
																					"name": "winning",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1483,
																					"src": "962:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																						"typeString": "uint8[5] memory"
																					}
																				},
																				"id": 1526,
																				"indexExpression": {
																					"id": 1525,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1515,
																					"src": "970:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "962:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1527,
																				"name": "num",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1499,
																				"src": "976:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "962:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1535,
																		"nodeType": "IfStatement",
																		"src": "958:104:15",
																		"trueBody": {
																			"id": 1534,
																			"nodeType": "Block",
																			"src": "981:81:15",
																			"statements": [
																				{
																					"expression": {
																						"id": 1531,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1529,
																							"name": "exists",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1511,
																							"src": "1003:6:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 1530,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1012:4:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "1003:13:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1532,
																					"nodeType": "ExpressionStatement",
																					"src": "1003:13:15"
																				},
																				{
																					"id": 1533,
																					"nodeType": "Break",
																					"src": "1038:5:15"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1518,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "928:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1519,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1492,
																	"src": "932:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "928:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1537,
															"initializationExpression": {
																"assignments": [
																	1515
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1515,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "921:1:15",
																		"nodeType": "VariableDeclaration",
																		"scope": 1537,
																		"src": "916:6:15",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1514,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:4:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1517,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "925:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "916:10:15"
															},
															"loopExpression": {
																"expression": {
																	"id": 1522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "935:3:15",
																	"subExpression": {
																		"id": 1521,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1515,
																		"src": "935:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1523,
																"nodeType": "ExpressionStatement",
																"src": "935:3:15"
															},
															"nodeType": "ForStatement",
															"src": "911:165:15"
														},
														{
															"condition": {
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1093:7:15",
																"subExpression": {
																	"id": 1538,
																	"name": "exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1511,
																	"src": "1094:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1550,
															"nodeType": "IfStatement",
															"src": "1089:83:15",
															"trueBody": {
																"id": 1549,
																"nodeType": "Block",
																"src": "1102:70:15",
																"statements": [
																	{
																		"expression": {
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1540,
																					"name": "winning",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1483,
																					"src": "1120:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																						"typeString": "uint8[5] memory"
																					}
																				},
																				"id": 1542,
																				"indexExpression": {
																					"id": 1541,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1492,
																					"src": "1128:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1120:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1543,
																				"name": "num",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1499,
																				"src": "1133:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "1120:16:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 1545,
																		"nodeType": "ExpressionStatement",
																		"src": "1120:16:15"
																	},
																	{
																		"expression": {
																			"id": 1547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "1154:3:15",
																			"subExpression": {
																				"id": 1546,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1492,
																				"src": "1154:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 1548,
																		"nodeType": "ExpressionStatement",
																		"src": "1154:3:15"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1551,
																	"name": "randomValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "1185:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1557,
																							"name": "randomValue",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1486,
																							"src": "1234:11:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 1558,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1492,
																							"src": "1247:1:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						],
																						"expression": {
																							"id": 1555,
																							"name": "abi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967295,
																							"src": "1217:3:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_abi",
																								"typeString": "abi"
																							}
																						},
																						"id": 1556,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "1221:12:15",
																						"memberName": "encodePacked",
																						"nodeType": "MemberAccess",
																						"src": "1217:16:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () pure returns (bytes memory)"
																						}
																					},
																					"id": 1559,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1217:32:15",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 1554,
																				"name": "keccak256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967288,
																				"src": "1207:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																					"typeString": "function (bytes memory) pure returns (bytes32)"
																				}
																			},
																			"id": 1560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1207:43:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1199:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1552,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1199:7:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1199:52:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1185:66:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1563,
															"nodeType": "ExpressionStatement",
															"src": "1185:66:15"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1495,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "802:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "35",
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "806:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "802:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1565,
												"nodeType": "WhileStatement",
												"src": "795:467:15"
											},
											{
												"expression": {
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1566,
																"name": "allRounds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "1272:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$829_storage_$",
																	"typeString": "mapping(uint256 => struct LotteryBase.Round storage ref)"
																}
															},
															"id": 1568,
															"indexExpression": {
																"id": 1567,
																"name": "roundInProgress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "1282:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1272:26:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage",
																"typeString": "struct LotteryBase.Round storage ref"
															}
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1299:14:15",
														"memberName": "winningNumbers",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 805,
														"src": "1272:41:15",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$5_storage",
															"typeString": "uint8[5] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1570,
														"name": "winning",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "1316:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
															"typeString": "uint8[5] memory"
														}
													},
													"src": "1272:51:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_storage",
														"typeString": "uint8[5] storage ref"
													}
												},
												"id": 1572,
												"nodeType": "ExpressionStatement",
												"src": "1272:51:15"
											},
											{
												"expression": {
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1573,
																"name": "allRounds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "1333:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$829_storage_$",
																	"typeString": "mapping(uint256 => struct LotteryBase.Round storage ref)"
																}
															},
															"id": 1575,
															"indexExpression": {
																"id": 1574,
																"name": "roundInProgress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "1343:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1333:26:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage",
																"typeString": "struct LotteryBase.Round storage ref"
															}
														},
														"id": 1576,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1360:9:15",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 799,
														"src": "1333:36:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1577,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1372:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1378:9:15",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1372:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1333:54:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1580,
												"nodeType": "ExpressionStatement",
												"src": "1333:54:15"
											},
											{
												"expression": {
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1581,
														"name": "winnerSubmissionDeadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "1397:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1582,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1424:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1430:9:15",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1424:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1442:7:15",
															"subdenomination": "hours",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3600_by_1",
																"typeString": "int_const 3600"
															},
															"value": "1"
														},
														"src": "1424:25:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1397:52:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1587,
												"nodeType": "ExpressionStatement",
												"src": "1397:52:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1589,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "1487:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1590,
															"name": "winning",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "1498:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																"typeString": "uint8[5] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																"typeString": "uint8[5] memory"
															}
														],
														"id": 1588,
														"name": "DrawFulfilled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "1473:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_array$_t_uint8_$5_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint8[5] memory)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1473:33:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "EmitStatement",
												"src": "1468:38:15"
											}
										]
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomWords",
									"nameLocation": "538:18:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1471,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "617:8:15"
									},
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "565:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "557:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "595:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "576:30:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1467,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "576:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1468,
													"nodeType": "ArrayTypeName",
													"src": "576:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:51:15"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "626:0:15"
									},
									"scope": 1967,
									"src": "529:984:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1746,
										"nodeType": "Block",
										"src": "1704:930:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1611,
																"name": "round",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "1722:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1612,
																"name": "roundInProgress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "1731:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1722:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726f756e64",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1748:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															},
															"value": "Invalid round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															}
														],
														"id": 1610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1714:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1714:50:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "1714:50:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1782:17:15",
															"subExpression": {
																"id": 1618,
																"name": "winnersSubmitted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "1783:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57696e6e65727320616c7265616479207375626d6974746564",
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1801:27:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7d2dd50273dded2ae79c42c2ba6295fc43ba8bff23d53df0fffeb5697a1c167",
																"typeString": "literal_string \"Winners already submitted\""
															},
															"value": "Winners already submitted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7d2dd50273dded2ae79c42c2ba6295fc43ba8bff23d53df0fffeb5697a1c167",
																"typeString": "literal_string \"Winners already submitted\""
															}
														],
														"id": 1617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1774:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:55:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "1774:55:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1624,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1847:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1853:9:15",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1847:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1626,
																"name": "winnerSubmissionDeadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "1866:24:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1847:43:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5375626d697373696f6e20646561646c696e6520706173736564",
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1892:28:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_259e24cec49943c2cb2cf20ff6fad040785560676072064e33594d5200dc824b",
																"typeString": "literal_string \"Submission deadline passed\""
															},
															"value": "Submission deadline passed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_259e24cec49943c2cb2cf20ff6fad040785560676072064e33594d5200dc824b",
																"typeString": "literal_string \"Submission deadline passed\""
															}
														],
														"id": 1623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1839:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1839:82:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "1839:82:15"
											},
											{
												"assignments": [
													1633
												],
												"declarations": [
													{
														"constant": false,
														"id": 1633,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "1954:1:15",
														"nodeType": "VariableDeclaration",
														"scope": 1746,
														"src": "1940:15:15",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
															"typeString": "struct LotteryBase.Round"
														},
														"typeName": {
															"id": 1632,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1631,
																"name": "Round",
																"nameLocations": [
																	"1940:5:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 829,
																"src": "1940:5:15"
															},
															"referencedDeclaration": 829,
															"src": "1940:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																"typeString": "struct LotteryBase.Round"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1637,
												"initialValue": {
													"baseExpression": {
														"id": 1634,
														"name": "allRounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "1958:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$829_storage_$",
															"typeString": "mapping(uint256 => struct LotteryBase.Round storage ref)"
														}
													},
													"id": 1636,
													"indexExpression": {
														"id": 1635,
														"name": "round",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "1968:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1958:16:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Round_$829_storage",
														"typeString": "struct LotteryBase.Round storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1940:34:15"
											},
											{
												"expression": {
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1638,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "1993:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																"typeString": "struct LotteryBase.Round storage pointer"
															}
														},
														"id": 1640,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1995:8:15",
														"memberName": "winners3",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 812,
														"src": "1993:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1641,
														"name": "_winners3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "2006:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"src": "1993:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 1643,
												"nodeType": "ExpressionStatement",
												"src": "1993:22:15"
											},
											{
												"expression": {
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1644,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "2025:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																"typeString": "struct LotteryBase.Round storage pointer"
															}
														},
														"id": 1646,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2027:8:15",
														"memberName": "winners4",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 815,
														"src": "2025:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1647,
														"name": "_winners4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1602,
														"src": "2038:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"src": "2025:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "2025:22:15"
											},
											{
												"expression": {
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1650,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "2057:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																"typeString": "struct LotteryBase.Round storage pointer"
															}
														},
														"id": 1652,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2059:8:15",
														"memberName": "winners5",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 818,
														"src": "2057:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1653,
														"name": "_winners5",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1605,
														"src": "2070:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"src": "2057:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "2057:22:15"
											},
											{
												"expression": {
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1656,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "2098:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																"typeString": "struct LotteryBase.Round storage pointer"
															}
														},
														"id": 1658,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2100:12:15",
														"memberName": "prizeAmount3",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 824,
														"src": "2098:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1659,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "2116:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																				"typeString": "struct LotteryBase.Round storage pointer"
																			}
																		},
																		"id": 1660,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2118:9:15",
																		"memberName": "prizePool",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 801,
																		"src": "2116:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 1661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2130:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "2116:16:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1663,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2115:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2136:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2115:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2098:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "2098:41:15"
											},
											{
												"expression": {
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1668,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "2149:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																"typeString": "struct LotteryBase.Round storage pointer"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2151:12:15",
														"memberName": "prizeAmount4",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 826,
														"src": "2149:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1671,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "2167:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																				"typeString": "struct LotteryBase.Round storage pointer"
																			}
																		},
																		"id": 1672,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2169:9:15",
																		"memberName": "prizePool",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 801,
																		"src": "2167:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3230",
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2181:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_20_by_1",
																			"typeString": "int_const 20"
																		},
																		"value": "20"
																	},
																	"src": "2167:16:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1675,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2166:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2166:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2149:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1679,
												"nodeType": "ExpressionStatement",
												"src": "2149:41:15"
											},
											{
												"expression": {
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1680,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "2200:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																"typeString": "struct LotteryBase.Round storage pointer"
															}
														},
														"id": 1682,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2202:12:15",
														"memberName": "prizeAmount5",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 828,
														"src": "2200:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1683,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "2218:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																				"typeString": "struct LotteryBase.Round storage pointer"
																			}
																		},
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2220:9:15",
																		"memberName": "prizePool",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 801,
																		"src": "2218:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3635",
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2232:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65_by_1",
																			"typeString": "int_const 65"
																		},
																		"value": "65"
																	},
																	"src": "2218:16:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1687,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2217:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2238:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2217:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2200:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1691,
												"nodeType": "ExpressionStatement",
												"src": "2200:41:15"
											},
											{
												"assignments": [
													1693
												],
												"declarations": [
													{
														"constant": false,
														"id": 1693,
														"mutability": "mutable",
														"name": "totalRollover",
														"nameLocation": "2268:13:15",
														"nodeType": "VariableDeclaration",
														"scope": 1746,
														"src": "2260:21:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2260:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1701,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1694,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1633,
																		"src": "2285:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																			"typeString": "struct LotteryBase.Round storage pointer"
																		}
																	},
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2287:9:15",
																	"memberName": "prizePool",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 801,
																	"src": "2285:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2299:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "2285:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1698,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2284:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2304:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2284:23:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2260:47:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1702,
															"name": "_winners3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "2321:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2331:6:15",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2321:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1704,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2341:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2321:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1711,
												"nodeType": "IfStatement",
												"src": "2317:58:15",
												"trueBody": {
													"expression": {
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1706,
															"name": "totalRollover",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "2344:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"expression": {
																"id": 1707,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "2361:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																	"typeString": "struct LotteryBase.Round storage pointer"
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2363:12:15",
															"memberName": "prizeAmount3",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 824,
															"src": "2361:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2344:31:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1710,
													"nodeType": "ExpressionStatement",
													"src": "2344:31:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1712,
															"name": "_winners4",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "2389:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2399:6:15",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2389:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2409:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2389:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1721,
												"nodeType": "IfStatement",
												"src": "2385:58:15",
												"trueBody": {
													"expression": {
														"id": 1719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1716,
															"name": "totalRollover",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "2412:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"expression": {
																"id": 1717,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "2429:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																	"typeString": "struct LotteryBase.Round storage pointer"
																}
															},
															"id": 1718,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2431:12:15",
															"memberName": "prizeAmount4",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 826,
															"src": "2429:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2412:31:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1720,
													"nodeType": "ExpressionStatement",
													"src": "2412:31:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1722,
															"name": "_winners5",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "2457:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2467:6:15",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2457:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2477:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2457:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1731,
												"nodeType": "IfStatement",
												"src": "2453:58:15",
												"trueBody": {
													"expression": {
														"id": 1729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1726,
															"name": "totalRollover",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "2480:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"expression": {
																"id": 1727,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "2497:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																	"typeString": "struct LotteryBase.Round storage pointer"
																}
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2499:12:15",
															"memberName": "prizeAmount5",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 828,
															"src": "2497:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2480:31:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1730,
													"nodeType": "ExpressionStatement",
													"src": "2480:31:15"
												}
											},
											{
												"expression": {
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1732,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "2521:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																"typeString": "struct LotteryBase.Round storage pointer"
															}
														},
														"id": 1734,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2523:8:15",
														"memberName": "rollover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 822,
														"src": "2521:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1735,
														"name": "totalRollover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "2534:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2521:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "2521:26:15"
											},
											{
												"expression": {
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1738,
														"name": "winnersSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "2566:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2585:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2566:23:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "2566:23:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1743,
															"name": "round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "2621:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1742,
														"name": "WinnersSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "2604:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2604:23:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1745,
												"nodeType": "EmitStatement",
												"src": "2599:28:15"
											}
										]
									},
									"functionSelector": "4ac2a741",
									"id": 1747,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1608,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1607,
												"name": "onlyOwner",
												"nameLocations": [
													"1694:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "1694:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1694:9:15"
										}
									],
									"name": "submitWinners",
									"nameLocation": "1528:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "round",
												"nameLocation": "1559:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "1551:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "_winners3",
												"nameLocation": "1593:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "1574:28:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1597,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1574:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1598,
													"nodeType": "ArrayTypeName",
													"src": "1574:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "_winners4",
												"nameLocation": "1631:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "1612:28:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1600,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1612:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1601,
													"nodeType": "ArrayTypeName",
													"src": "1612:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "_winners5",
												"nameLocation": "1669:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "1650:28:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1603,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1650:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1604,
													"nodeType": "ArrayTypeName",
													"src": "1650:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:143:15"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1704:0:15"
									},
									"scope": 1967,
									"src": "1519:1115:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1900,
										"nodeType": "Block",
										"src": "2710:1449:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2760:14:15",
															"subExpression": {
																"id": 1757,
																"name": "_distributing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "2761:13:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446973747269627574696f6e20696e2070726f6772657373",
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2776:26:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97d873b332de50f0c9b0d3c7f544a4c4cc10f0c81e49e79219282204d15d470c",
																"typeString": "literal_string \"Distribution in progress\""
															},
															"value": "Distribution in progress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97d873b332de50f0c9b0d3c7f544a4c4cc10f0c81e49e79219282204d15d470c",
																"typeString": "literal_string \"Distribution in progress\""
															}
														],
														"id": 1756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2752:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2752:51:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "2752:51:15"
											},
											{
												"expression": {
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1762,
														"name": "_distributing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "2840:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2856:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2840:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1765,
												"nodeType": "ExpressionStatement",
												"src": "2840:20:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1767,
															"name": "winnersSubmitted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "2914:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57696e6e657273206e6f74207375626d6974746564",
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2932:23:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_094119e2d94891106fc8e0f24505d9962f349695d475f554220f6fb70f8242a0",
																"typeString": "literal_string \"Winners not submitted\""
															},
															"value": "Winners not submitted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_094119e2d94891106fc8e0f24505d9962f349695d475f554220f6fb70f8242a0",
																"typeString": "literal_string \"Winners not submitted\""
															}
														],
														"id": 1766,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2906:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2906:50:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "2906:50:15"
											},
											{
												"assignments": [
													1773
												],
												"declarations": [
													{
														"constant": false,
														"id": 1773,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "2980:1:15",
														"nodeType": "VariableDeclaration",
														"scope": 1900,
														"src": "2966:15:15",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
															"typeString": "struct LotteryBase.Round"
														},
														"typeName": {
															"id": 1772,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1771,
																"name": "Round",
																"nameLocations": [
																	"2966:5:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 829,
																"src": "2966:5:15"
															},
															"referencedDeclaration": 829,
															"src": "2966:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																"typeString": "struct LotteryBase.Round"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1777,
												"initialValue": {
													"baseExpression": {
														"id": 1774,
														"name": "allRounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "2984:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$829_storage_$",
															"typeString": "mapping(uint256 => struct LotteryBase.Round storage ref)"
														}
													},
													"id": 1776,
													"indexExpression": {
														"id": 1775,
														"name": "roundInProgress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "2994:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2984:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Round_$829_storage",
														"typeString": "struct LotteryBase.Round storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2966:44:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3028:20:15",
															"subExpression": {
																"expression": {
																	"id": 1779,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1773,
																	"src": "3029:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																		"typeString": "struct LotteryBase.Round storage pointer"
																	}
																},
																"id": 1780,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3031:17:15",
																"memberName": "prizesDistributed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 820,
																"src": "3029:19:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072697a657320616c7265616479206469737472696275746564",
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3050:28:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3bd4b1376e686905f6817aa4be3819d2567a3c872ea3557f06e8fef090a5deb8",
																"typeString": "literal_string \"Prizes already distributed\""
															},
															"value": "Prizes already distributed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3bd4b1376e686905f6817aa4be3819d2567a3c872ea3557f06e8fef090a5deb8",
																"typeString": "literal_string \"Prizes already distributed\""
															}
														],
														"id": 1778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3020:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3020:59:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1784,
												"nodeType": "ExpressionStatement",
												"src": "3020:59:15"
											},
											{
												"assignments": [
													1789
												],
												"declarations": [
													{
														"constant": false,
														"id": 1789,
														"mutability": "mutable",
														"name": "winners",
														"nameLocation": "3116:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 1900,
														"src": "3098:25:15",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1787,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3098:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1788,
															"nodeType": "ArrayTypeName",
															"src": "3098:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1806,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1790,
																	"name": "tier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "3127:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 1791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3135:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "3127:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1793,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3126:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"condition": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1796,
																		"name": "tier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1749,
																		"src": "3188:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "34",
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3196:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"value": "4"
																	},
																	"src": "3188:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1799,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3187:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"expression": {
																"id": 1802,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "3249:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																	"typeString": "struct LotteryBase.Round storage pointer"
																}
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3251:8:15",
															"memberName": "winners5",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 818,
															"src": "3249:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "3187:72:15",
														"trueExpression": {
															"expression": {
																"id": 1800,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "3201:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																	"typeString": "struct LotteryBase.Round storage pointer"
																}
															},
															"id": 1801,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3203:8:15",
															"memberName": "winners4",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 815,
															"src": "3201:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
															"typeString": "address[] storage pointer"
														}
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3126:133:15",
													"trueExpression": {
														"expression": {
															"id": 1794,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "3140:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																"typeString": "struct LotteryBase.Round storage pointer"
															}
														},
														"id": 1795,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3142:8:15",
														"memberName": "winners3",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 812,
														"src": "3140:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[] storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3098:161:15"
											},
											{
												"assignments": [
													1808
												],
												"declarations": [
													{
														"constant": false,
														"id": 1808,
														"mutability": "mutable",
														"name": "prizeAmount",
														"nameLocation": "3286:11:15",
														"nodeType": "VariableDeclaration",
														"scope": 1900,
														"src": "3278:19:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1807,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3278:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1809,
												"nodeType": "VariableDeclarationStatement",
												"src": "3278:19:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1810,
														"name": "tier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "3311:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 1811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3319:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "3311:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1818,
															"name": "tier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "3369:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "34",
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3377:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "3369:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"expression": {
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1826,
																"name": "prizeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "3423:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"expression": {
																	"id": 1827,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1773,
																	"src": "3437:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																		"typeString": "struct LotteryBase.Round storage pointer"
																	}
																},
																"id": 1828,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3439:12:15",
																"memberName": "prizeAmount5",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 828,
																"src": "3437:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3423:28:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1830,
														"nodeType": "ExpressionStatement",
														"src": "3423:28:15"
													},
													"id": 1831,
													"nodeType": "IfStatement",
													"src": "3365:86:15",
													"trueBody": {
														"expression": {
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1821,
																"name": "prizeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "3380:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"expression": {
																	"id": 1822,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1773,
																	"src": "3394:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																		"typeString": "struct LotteryBase.Round storage pointer"
																	}
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3396:12:15",
																"memberName": "prizeAmount4",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 826,
																"src": "3394:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3380:28:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1825,
														"nodeType": "ExpressionStatement",
														"src": "3380:28:15"
													}
												},
												"id": 1832,
												"nodeType": "IfStatement",
												"src": "3307:144:15",
												"trueBody": {
													"expression": {
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1813,
															"name": "prizeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "3322:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"id": 1814,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "3336:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																	"typeString": "struct LotteryBase.Round storage pointer"
																}
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3338:12:15",
															"memberName": "prizeAmount3",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 824,
															"src": "3336:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3322:28:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1817,
													"nodeType": "ExpressionStatement",
													"src": "3322:28:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1833,
														"name": "tier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "3520:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "35",
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3528:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "3520:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1854,
												"nodeType": "IfStatement",
												"src": "3516:165:15",
												"trueBody": {
													"id": 1853,
													"nodeType": "Block",
													"src": "3531:150:15",
													"statements": [
														{
															"expression": {
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1836,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "3545:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Round_$829_storage_ptr",
																			"typeString": "struct LotteryBase.Round storage pointer"
																		}
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3547:17:15",
																	"memberName": "prizesDistributed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 820,
																	"src": "3545:19:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3567:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3545:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1841,
															"nodeType": "ExpressionStatement",
															"src": "3545:26:15"
														},
														{
															"expression": {
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3585:14:15",
																"subExpression": {
																	"id": 1842,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "3585:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1844,
															"nodeType": "ExpressionStatement",
															"src": "3585:14:15"
														},
														{
															"expression": {
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1845,
																	"name": "winnersSubmitted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "3613:16:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3632:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3613:24:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1848,
															"nodeType": "ExpressionStatement",
															"src": "3613:24:15"
														},
														{
															"expression": {
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1849,
																	"name": "pendingDraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "3651:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3665:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3651:19:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1852,
															"nodeType": "ExpressionStatement",
															"src": "3651:19:15"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1855,
															"name": "winners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "3751:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[] storage pointer"
															}
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3759:6:15",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3751:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3768:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3751:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1890,
												"nodeType": "IfStatement",
												"src": "3747:277:15",
												"trueBody": {
													"id": 1889,
													"nodeType": "Block",
													"src": "3771:253:15",
													"statements": [
														{
															"assignments": [
																1860
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1860,
																	"mutability": "mutable",
																	"name": "share",
																	"nameLocation": "3793:5:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 1889,
																	"src": "3785:13:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1859,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3785:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1865,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1861,
																	"name": "prizeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1808,
																	"src": "3801:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"expression": {
																		"id": 1862,
																		"name": "winners",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1789,
																		"src": "3815:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[] storage pointer"
																		}
																	},
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3823:6:15",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3815:14:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3801:28:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3785:44:15"
														},
														{
															"body": {
																"id": 1887,
																"nodeType": "Block",
																"src": "3884:130:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1884,
																					"name": "share",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1860,
																					"src": "3993:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 1879,
																								"name": "winners",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1789,
																								"src": "3972:7:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																									"typeString": "address[] storage pointer"
																								}
																							},
																							"id": 1881,
																							"indexExpression": {
																								"id": 1880,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1867,
																								"src": "3980:1:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "3972:10:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1878,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3964:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_payable_$",
																							"typeString": "type(address payable)"
																						},
																						"typeName": {
																							"id": 1877,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "3964:8:15",
																							"stateMutability": "payable",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1882,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3964:19:15",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 1883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3984:8:15",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "3964:28:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 1885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3964:35:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1886,
																		"nodeType": "ExpressionStatement",
																		"src": "3964:35:15"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1870,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "3859:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1871,
																		"name": "winners",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1789,
																		"src": "3863:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[] storage pointer"
																		}
																	},
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3871:6:15",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3863:14:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3859:18:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1888,
															"initializationExpression": {
																"assignments": [
																	1867
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1867,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "3852:1:15",
																		"nodeType": "VariableDeclaration",
																		"scope": 1888,
																		"src": "3847:6:15",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1866,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "3847:4:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1869,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3856:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3847:10:15"
															},
															"loopExpression": {
																"expression": {
																	"id": 1875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3879:3:15",
																	"subExpression": {
																		"id": 1874,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1867,
																		"src": "3879:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1876,
																"nodeType": "ExpressionStatement",
																"src": "3879:3:15"
															},
															"nodeType": "ForStatement",
															"src": "3843:171:15"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1891,
														"name": "_distributing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "4042:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4058:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4042:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1894,
												"nodeType": "ExpressionStatement",
												"src": "4042:21:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1896,
															"name": "roundInProgress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "4130:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1897,
															"name": "tier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "4147:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1895,
														"name": "PrizesDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "4112:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint8_$returns$__$",
															"typeString": "function (uint256,uint8)"
														}
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4112:40:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1899,
												"nodeType": "EmitStatement",
												"src": "4107:45:15"
											}
										]
									},
									"functionSelector": "61edf9b2",
									"id": 1901,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1752,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1751,
												"name": "onlyOwner",
												"nameLocations": [
													"2687:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "2687:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2687:9:15"
										},
										{
											"id": 1754,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1753,
												"name": "nonReentrant",
												"nameLocations": [
													"2697:12:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 669,
												"src": "2697:12:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2697:12:15"
										}
									],
									"name": "distributePrizes",
									"nameLocation": "2649:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "tier",
												"nameLocation": "2672:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "2666:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1748,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2666:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:12:15"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2710:0:15"
									},
									"scope": 1967,
									"src": "2640:1519:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "4199:844:15",
										"statements": [
											{
												"expression": {
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1904,
														"name": "pendingDraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "4209:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4223:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4209:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1907,
												"nodeType": "ExpressionStatement",
												"src": "4209:18:15"
											},
											{
												"expression": {
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1908,
															"name": "roundLocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "4237:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1910,
														"indexExpression": {
															"id": 1909,
															"name": "currentRound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "4249:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4237:25:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4265:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4237:32:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1913,
												"nodeType": "ExpressionStatement",
												"src": "4237:32:15"
											},
											{
												"expression": {
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1914,
														"name": "roundInProgress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "4279:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1915,
														"name": "currentRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "4297:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4279:30:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1917,
												"nodeType": "ExpressionStatement",
												"src": "4279:30:15"
											},
											{
												"expression": {
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1918,
																"name": "allRounds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "4328:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$829_storage_$",
																	"typeString": "mapping(uint256 => struct LotteryBase.Round storage ref)"
																}
															},
															"id": 1920,
															"indexExpression": {
																"id": 1919,
																"name": "currentRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "4338:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4328:23:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Round_$829_storage",
																"typeString": "struct LotteryBase.Round storage ref"
															}
														},
														"id": 1921,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4352:9:15",
														"memberName": "prizePool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 801,
														"src": "4328:33:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1924,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4372:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LotteryDraw_$1967",
																		"typeString": "contract LotteryDraw"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LotteryDraw_$1967",
																		"typeString": "contract LotteryDraw"
																	}
																],
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4364:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1922,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4364:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4364:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4378:7:15",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "4364:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4328:57:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1928,
												"nodeType": "ExpressionStatement",
												"src": "4328:57:15"
											},
											{
												"expression": {
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1929,
														"name": "lastRequestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4396:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1934,
																		"name": "s_keyHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "4523:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1935,
																		"name": "s_subscriptionId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "4557:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1936,
																		"name": "requestConfirmations",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "4613:20:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	{
																		"id": 1937,
																		"name": "callbackGasLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 874,
																		"src": "4669:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	{
																		"id": 1938,
																		"name": "numWords",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "4713:8:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "74727565",
																						"id": 1943,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4844:4:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "true"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					],
																					"expression": {
																						"id": 1941,
																						"name": "VRFV2PlusClient",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 639,
																						"src": "4800:15:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_VRFV2PlusClient_$639_$",
																							"typeString": "type(library VRFV2PlusClient)"
																						}
																					},
																					"id": 1942,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4816:11:15",
																					"memberName": "ExtraArgsV1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 610,
																					"src": "4800:27:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_ExtraArgsV1_$610_storage_ptr_$",
																						"typeString": "type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"
																					}
																				},
																				"id": 1944,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"nameLocations": [
																					"4829:13:15"
																				],
																				"names": [
																					"nativePayment"
																				],
																				"nodeType": "FunctionCall",
																				"src": "4800:50:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ExtraArgsV1_$610_memory_ptr",
																					"typeString": "struct VRFV2PlusClient.ExtraArgsV1 memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_ExtraArgsV1_$610_memory_ptr",
																					"typeString": "struct VRFV2PlusClient.ExtraArgsV1 memory"
																				}
																			],
																			"expression": {
																				"id": 1939,
																				"name": "VRFV2PlusClient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 639,
																				"src": "4750:15:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_VRFV2PlusClient_$639_$",
																					"typeString": "type(library VRFV2PlusClient)"
																				}
																			},
																			"id": 1940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4766:12:15",
																			"memberName": "_argsToBytes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 638,
																			"src": "4750:28:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_struct$_ExtraArgsV1_$610_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (struct VRFV2PlusClient.ExtraArgsV1 memory) pure returns (bytes memory)"
																			}
																		},
																		"id": 1945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4750:118:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1932,
																		"name": "VRFV2PlusClient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "4461:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_VRFV2PlusClient_$639_$",
																			"typeString": "type(library VRFV2PlusClient)"
																		}
																	},
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4477:18:15",
																	"memberName": "RandomWordsRequest",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 623,
																	"src": "4461:34:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_RandomWordsRequest_$623_storage_ptr_$",
																		"typeString": "type(struct VRFV2PlusClient.RandomWordsRequest storage pointer)"
																	}
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [
																	"4514:7:15",
																	"4550:5:15",
																	"4591:20:15",
																	"4651:16:15",
																	"4703:8:15",
																	"4739:9:15"
																],
																"names": [
																	"keyHash",
																	"subId",
																	"requestConfirmations",
																	"callbackGasLimit",
																	"numWords",
																	"extraArgs"
																],
																"nodeType": "FunctionCall",
																"src": "4461:422:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RandomWordsRequest_$623_memory_ptr",
																	"typeString": "struct VRFV2PlusClient.RandomWordsRequest memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_RandomWordsRequest_$623_memory_ptr",
																	"typeString": "struct VRFV2PlusClient.RandomWordsRequest memory"
																}
															],
															"expression": {
																"id": 1930,
																"name": "s_vrfCoordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "4412:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVRFCoordinatorV2Plus_$494",
																	"typeString": "contract IVRFCoordinatorV2Plus"
																}
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4429:18:15",
															"memberName": "requestRandomWords",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 493,
															"src": "4412:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_struct$_RandomWordsRequest_$623_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct VRFV2PlusClient.RandomWordsRequest memory) external returns (uint256)"
															}
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4412:481:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4396:497:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "4396:497:15"
											},
											{
												"expression": {
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1950,
															"name": "s_requestInitiator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "4904:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1952,
														"indexExpression": {
															"id": 1951,
															"name": "lastRequestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "4923:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4904:33:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1953,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4940:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4944:6:15",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4940:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4904:46:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1956,
												"nodeType": "ExpressionStatement",
												"src": "4904:46:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1958,
															"name": "lastRequestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "4979:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1957,
														"name": "DrawRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "4965:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4965:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1960,
												"nodeType": "EmitStatement",
												"src": "4960:33:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1962,
															"name": "roundInProgress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "5020:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1961,
														"name": "DrawStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "5008:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5008:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1964,
												"nodeType": "EmitStatement",
												"src": "5003:33:15"
											}
										]
									},
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_drawNumbers",
									"nameLocation": "4174:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4186:2:15"
									},
									"returnParameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4199:0:15"
									},
									"scope": 1967,
									"src": "4165:878:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1968,
							"src": "276:5825:15",
							"usedErrors": [
								332,
								340,
								342
							]
						}
					],
					"src": "32:6070:15"
				},
				"id": 15
			},
			"LotteryTickets.sol": {
				"ast": {
					"absolutePath": "LotteryTickets.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							297
						],
						"LotteryBase": [
							1443
						],
						"LotteryTickets": [
							2605
						],
						"VRFConsumerBaseV2Plus": [
							476
						]
					},
					"id": 2606,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1969,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:16"
						},
						{
							"absolutePath": "LotteryBase.sol",
							"file": "./LotteryBase.sol",
							"id": 1970,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2606,
							"sourceUnit": 1444,
							"src": "57:27:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1971,
										"name": "LotteryBase",
										"nameLocations": [
											"122:11:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1443,
										"src": "122:11:16"
									},
									"id": 1972,
									"nodeType": "InheritanceSpecifier",
									"src": "122:11:16"
								}
							],
							"canonicalName": "LotteryTickets",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 2605,
							"linearizedBaseContracts": [
								2605,
								1443,
								476,
								88,
								251,
								313,
								508
							],
							"name": "LotteryTickets",
							"nameLocation": "104:14:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2089,
										"nodeType": "Block",
										"src": "220:876:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "238:26:16",
															"subExpression": {
																"baseExpression": {
																	"id": 1982,
																	"name": "roundLocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "239:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1984,
																"indexExpression": {
																	"id": 1983,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "251:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "239:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e64206c6f636b6564",
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "266:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28945168ed56bda0fb84ac18d5cc09ed8319790d248140c13044b3a068dc617d",
																"typeString": "literal_string \"Round locked\""
															},
															"value": "Round locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28945168ed56bda0fb84ac18d5cc09ed8319790d248140c13044b3a068dc617d",
																"typeString": "literal_string \"Round locked\""
															}
														],
														"id": 1981,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "230:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "230:51:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1988,
												"nodeType": "ExpressionStatement",
												"src": "230:51:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1990,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "299:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "303:5:16",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "299:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1992,
																	"name": "getusdTicketPriceInBNB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "312:22:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "312:24:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "299:37:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f727265637420424e4220616d6f756e74",
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "338:22:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36ef8f59c7efb155bae654f810f1eec754a38bf469a4459ed92f2e6d816c6368",
																"typeString": "literal_string \"Incorrect BNB amount\""
															},
															"value": "Incorrect BNB amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36ef8f59c7efb155bae654f810f1eec754a38bf469a4459ed92f2e6d816c6368",
																"typeString": "literal_string \"Incorrect BNB amount\""
															}
														],
														"id": 1989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "291:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "291:70:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1997,
												"nodeType": "ExpressionStatement",
												"src": "291:70:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2000,
																	"name": "numbers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1976,
																	"src": "396:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																		"typeString": "uint8[5] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																		"typeString": "uint8[5] memory"
																	}
																],
																"id": 1999,
																"name": "_validateNumbers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2604
																],
																"referencedDeclaration": 2604,
																"src": "379:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint8_$5_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (uint8[5] memory) pure returns (bool)"
																}
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "379:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d62657273206d75737420626520756e6971756520616e64206265747765656e203120616e64203530",
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "406:45:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_844e5a54e22c9dd41ca92a18eb80c98ad204c583e46b40faa89b2612621dcd3a",
																"typeString": "literal_string \"Numbers must be unique and between 1 and 50\""
															},
															"value": "Numbers must be unique and between 1 and 50"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_844e5a54e22c9dd41ca92a18eb80c98ad204c583e46b40faa89b2612621dcd3a",
																"typeString": "literal_string \"Numbers must be unique and between 1 and 50\""
															}
														],
														"id": 1998,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "371:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "371:81:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2004,
												"nodeType": "ExpressionStatement",
												"src": "371:81:16"
											},
											{
												"assignments": [
													2006
												],
												"declarations": [
													{
														"constant": false,
														"id": 2006,
														"mutability": "mutable",
														"name": "ownerCut",
														"nameLocation": "471:8:16",
														"nodeType": "VariableDeclaration",
														"scope": 2089,
														"src": "463:16:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2005,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "463:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2011,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2007,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "482:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "486:5:16",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "482:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130",
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "494:2:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "482:14:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "463:33:16"
											},
											{
												"assignments": [
													2013,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2013,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "520:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2089,
														"src": "515:9:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2012,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "515:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2021,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "560:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2014,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "530:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "530:7:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "538:4:16",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "530:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2017,
																"name": "ownerCut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "550:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "530:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "530:33:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "514:49:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2023,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "581:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220746f206f776e6572206661696c6564",
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "587:26:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a0ea58ef11a187621d5b16e741030021a6bb6d7345cc7a59f517e423add61ea",
																"typeString": "literal_string \"Transfer to owner failed\""
															},
															"value": "Transfer to owner failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a0ea58ef11a187621d5b16e741030021a6bb6d7345cc7a59f517e423add61ea",
																"typeString": "literal_string \"Transfer to owner failed\""
															}
														],
														"id": 2022,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "573:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "573:41:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2026,
												"nodeType": "ExpressionStatement",
												"src": "573:41:16"
											},
											{
												"assignments": [
													2029
												],
												"declarations": [
													{
														"constant": false,
														"id": 2029,
														"mutability": "mutable",
														"name": "ticket",
														"nameLocation": "639:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2089,
														"src": "625:20:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
															"typeString": "struct LotteryBase.Ticket"
														},
														"typeName": {
															"id": 2028,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2027,
																"name": "Ticket",
																"nameLocations": [
																	"625:6:16"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 797,
																"src": "625:6:16"
															},
															"referencedDeclaration": 797,
															"src": "625:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ticket_$797_storage_ptr",
																"typeString": "struct LotteryBase.Ticket"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2035,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2031,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "655:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "659:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "655:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2033,
															"name": "numbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "667:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																"typeString": "uint8[5] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																"typeString": "uint8[5] memory"
															}
														],
														"id": 2030,
														"name": "Ticket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "648:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Ticket_$797_storage_ptr_$",
															"typeString": "type(struct LotteryBase.Ticket storage pointer)"
														}
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "648:27:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
														"typeString": "struct LotteryBase.Ticket memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "625:50:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2041,
															"name": "ticket",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2029,
															"src": "722:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																"typeString": "struct LotteryBase.Ticket memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																"typeString": "struct LotteryBase.Ticket memory"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 2036,
																	"name": "allRounds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "685:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$829_storage_$",
																		"typeString": "mapping(uint256 => struct LotteryBase.Round storage ref)"
																	}
																},
																"id": 2038,
																"indexExpression": {
																	"id": 2037,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "695:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "685:23:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$829_storage",
																	"typeString": "struct LotteryBase.Round storage ref"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "709:7:16",
															"memberName": "tickets",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 809,
															"src": "685:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Ticket_$797_storage_$dyn_storage",
																"typeString": "struct LotteryBase.Ticket storage ref[] storage ref"
															}
														},
														"id": 2040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "717:4:16",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "685:36:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_ptr_$_t_struct$_Ticket_$797_storage_$returns$__$attached_to$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LotteryBase.Ticket storage ref[] storage pointer,struct LotteryBase.Ticket storage ref)"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "685:44:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2043,
												"nodeType": "ExpressionStatement",
												"src": "685:44:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2051,
															"name": "ticket",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2029,
															"src": "784:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																"typeString": "struct LotteryBase.Ticket memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																"typeString": "struct LotteryBase.Ticket memory"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2044,
																	"name": "playerTickets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "739:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(address => struct LotteryBase.Ticket storage ref[] storage ref))"
																	}
																},
																"id": 2048,
																"indexExpression": {
																	"id": 2045,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "753:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "739:27:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct LotteryBase.Ticket storage ref[] storage ref)"
																}
															},
															"id": 2049,
															"indexExpression": {
																"expression": {
																	"id": 2046,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "767:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "771:6:16",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "767:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "739:39:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Ticket_$797_storage_$dyn_storage",
																"typeString": "struct LotteryBase.Ticket storage ref[] storage ref"
															}
														},
														"id": 2050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "779:4:16",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "739:44:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_ptr_$_t_struct$_Ticket_$797_storage_$returns$__$attached_to$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LotteryBase.Ticket storage ref[] storage pointer,struct LotteryBase.Ticket storage ref)"
														}
													},
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "739:52:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2053,
												"nodeType": "ExpressionStatement",
												"src": "739:52:16"
											},
											{
												"expression": {
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "802:35:16",
													"subExpression": {
														"baseExpression": {
															"id": 2054,
															"name": "totalTicketsPerDraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "802:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2056,
														"indexExpression": {
															"id": 2055,
															"name": "currentRound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "822:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "802:33:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2058,
												"nodeType": "ExpressionStatement",
												"src": "802:35:16"
											},
											{
												"condition": {
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "852:42:16",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 2059,
																"name": "hasParticipated",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "853:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 2061,
															"indexExpression": {
																"id": 2060,
																"name": "currentRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "869:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "853:29:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2064,
														"indexExpression": {
															"expression": {
																"id": 2062,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "883:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "887:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "883:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "853:41:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2081,
												"nodeType": "IfStatement",
												"src": "848:176:16",
												"trueBody": {
													"id": 2080,
													"nodeType": "Block",
													"src": "896:128:16",
													"statements": [
														{
															"expression": {
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2066,
																			"name": "hasParticipated",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 839,
																			"src": "910:15:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(uint256 => mapping(address => bool))"
																			}
																		},
																		"id": 2070,
																		"indexExpression": {
																			"id": 2067,
																			"name": "currentRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 780,
																			"src": "926:12:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "910:29:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2071,
																	"indexExpression": {
																		"expression": {
																			"id": 2068,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "940:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "944:6:16",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "940:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "910:41:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "954:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "910:48:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2074,
															"nodeType": "ExpressionStatement",
															"src": "910:48:16"
														},
														{
															"expression": {
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "972:41:16",
																"subExpression": {
																	"baseExpression": {
																		"id": 2075,
																		"name": "uniqueParticipantsPerDraw",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "972:25:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2077,
																	"indexExpression": {
																		"id": 2076,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 780,
																		"src": "998:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "972:39:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2079,
															"nodeType": "ExpressionStatement",
															"src": "972:41:16"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2083,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1055:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1059:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1055:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2085,
															"name": "numbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "1067:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																"typeString": "uint8[5] memory"
															}
														},
														{
															"id": 2086,
															"name": "currentRound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "1076:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																"typeString": "uint8[5] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2082,
														"name": "TicketPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "1039:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_uint8_$5_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8[5] memory,uint256)"
														}
													},
													"id": 2087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1039:50:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2088,
												"nodeType": "EmitStatement",
												"src": "1034:55:16"
											}
										]
									},
									"functionSelector": "cc957f28",
									"id": 2090,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1979,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1978,
												"name": "whenNotPaused",
												"nameLocations": [
													"206:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 948,
												"src": "206:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "206:13:16"
										}
									],
									"name": "buyTicket",
									"nameLocation": "154:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "numbers",
												"nameLocation": "180:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "164:23:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
													"typeString": "uint8[5]"
												},
												"typeName": {
													"baseType": {
														"id": 1973,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "164:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1975,
													"length": {
														"hexValue": "35",
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "170:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "164:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
														"typeString": "uint8[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:25:16"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:0:16"
									},
									"scope": 2605,
									"src": "145:951:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2205,
										"nodeType": "Block",
										"src": "1171:864:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1189:26:16",
															"subExpression": {
																"baseExpression": {
																	"id": 2096,
																	"name": "roundLocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "1190:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 2098,
																"indexExpression": {
																	"id": 2097,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "1202:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1190:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e64206c6f636b6564",
															"id": 2100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1217:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28945168ed56bda0fb84ac18d5cc09ed8319790d248140c13044b3a068dc617d",
																"typeString": "literal_string \"Round locked\""
															},
															"value": "Round locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28945168ed56bda0fb84ac18d5cc09ed8319790d248140c13044b3a068dc617d",
																"typeString": "literal_string \"Round locked\""
															}
														],
														"id": 2095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1181:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1181:51:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2102,
												"nodeType": "ExpressionStatement",
												"src": "1181:51:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2104,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1250:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1254:5:16",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1250:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2106,
																	"name": "getusdTicketPriceInBNB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "1263:22:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1263:24:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1250:37:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f727265637420424e4220616d6f756e74",
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1289:22:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36ef8f59c7efb155bae654f810f1eec754a38bf469a4459ed92f2e6d816c6368",
																"typeString": "literal_string \"Incorrect BNB amount\""
															},
															"value": "Incorrect BNB amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36ef8f59c7efb155bae654f810f1eec754a38bf469a4459ed92f2e6d816c6368",
																"typeString": "literal_string \"Incorrect BNB amount\""
															}
														],
														"id": 2103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1242:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1242:70:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2111,
												"nodeType": "ExpressionStatement",
												"src": "1242:70:16"
											},
											{
												"assignments": [
													2117
												],
												"declarations": [
													{
														"constant": false,
														"id": 2117,
														"mutability": "mutable",
														"name": "randomNumbers",
														"nameLocation": "1339:13:16",
														"nodeType": "VariableDeclaration",
														"scope": 2205,
														"src": "1323:29:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
															"typeString": "uint8[5]"
														},
														"typeName": {
															"baseType": {
																"id": 2115,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "1323:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2116,
															"length": {
																"hexValue": "35",
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1329:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"nodeType": "ArrayTypeName",
															"src": "1323:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
																"typeString": "uint8[5]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2120,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2118,
														"name": "_generateRandomNumbers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2543
														],
														"referencedDeclaration": 2543,
														"src": "1355:22:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_array$_t_uint8_$5_memory_ptr_$",
															"typeString": "function () returns (uint8[5] memory)"
														}
													},
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1355:24:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
														"typeString": "uint8[5] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1323:56:16"
											},
											{
												"assignments": [
													2122
												],
												"declarations": [
													{
														"constant": false,
														"id": 2122,
														"mutability": "mutable",
														"name": "ownerCut",
														"nameLocation": "1398:8:16",
														"nodeType": "VariableDeclaration",
														"scope": 2205,
														"src": "1390:16:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2121,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1390:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2127,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2123,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1409:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1413:5:16",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1409:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130",
														"id": 2125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1421:2:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1409:14:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1390:33:16"
											},
											{
												"assignments": [
													2129,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2129,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "1447:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2205,
														"src": "1442:9:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2128,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1442:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2137,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1487:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2130,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "1457:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1457:7:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1465:4:16",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1457:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2133,
																"name": "ownerCut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2122,
																"src": "1477:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1457:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1457:33:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1441:49:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2139,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "1508:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220746f206f776e6572206661696c6564",
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1514:26:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a0ea58ef11a187621d5b16e741030021a6bb6d7345cc7a59f517e423add61ea",
																"typeString": "literal_string \"Transfer to owner failed\""
															},
															"value": "Transfer to owner failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a0ea58ef11a187621d5b16e741030021a6bb6d7345cc7a59f517e423add61ea",
																"typeString": "literal_string \"Transfer to owner failed\""
															}
														],
														"id": 2138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1500:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1500:41:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2142,
												"nodeType": "ExpressionStatement",
												"src": "1500:41:16"
											},
											{
												"assignments": [
													2145
												],
												"declarations": [
													{
														"constant": false,
														"id": 2145,
														"mutability": "mutable",
														"name": "ticket",
														"nameLocation": "1566:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2205,
														"src": "1552:20:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
															"typeString": "struct LotteryBase.Ticket"
														},
														"typeName": {
															"id": 2144,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2143,
																"name": "Ticket",
																"nameLocations": [
																	"1552:6:16"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 797,
																"src": "1552:6:16"
															},
															"referencedDeclaration": 797,
															"src": "1552:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ticket_$797_storage_ptr",
																"typeString": "struct LotteryBase.Ticket"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2151,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2147,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1582:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1586:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1582:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2149,
															"name": "randomNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "1594:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																"typeString": "uint8[5] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																"typeString": "uint8[5] memory"
															}
														],
														"id": 2146,
														"name": "Ticket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "1575:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Ticket_$797_storage_ptr_$",
															"typeString": "type(struct LotteryBase.Ticket storage pointer)"
														}
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1575:33:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
														"typeString": "struct LotteryBase.Ticket memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1552:56:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2157,
															"name": "ticket",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "1655:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																"typeString": "struct LotteryBase.Ticket memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																"typeString": "struct LotteryBase.Ticket memory"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 2152,
																	"name": "allRounds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "1618:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$829_storage_$",
																		"typeString": "mapping(uint256 => struct LotteryBase.Round storage ref)"
																	}
																},
																"id": 2154,
																"indexExpression": {
																	"id": 2153,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "1628:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1618:23:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$829_storage",
																	"typeString": "struct LotteryBase.Round storage ref"
																}
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1642:7:16",
															"memberName": "tickets",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 809,
															"src": "1618:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Ticket_$797_storage_$dyn_storage",
																"typeString": "struct LotteryBase.Ticket storage ref[] storage ref"
															}
														},
														"id": 2156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1650:4:16",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1618:36:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_ptr_$_t_struct$_Ticket_$797_storage_$returns$__$attached_to$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LotteryBase.Ticket storage ref[] storage pointer,struct LotteryBase.Ticket storage ref)"
														}
													},
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1618:44:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2159,
												"nodeType": "ExpressionStatement",
												"src": "1618:44:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2167,
															"name": "ticket",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "1717:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																"typeString": "struct LotteryBase.Ticket memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																"typeString": "struct LotteryBase.Ticket memory"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2160,
																	"name": "playerTickets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "1672:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(address => struct LotteryBase.Ticket storage ref[] storage ref))"
																	}
																},
																"id": 2164,
																"indexExpression": {
																	"id": 2161,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "1686:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1672:27:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct LotteryBase.Ticket storage ref[] storage ref)"
																}
															},
															"id": 2165,
															"indexExpression": {
																"expression": {
																	"id": 2162,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1700:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1704:6:16",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1700:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1672:39:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Ticket_$797_storage_$dyn_storage",
																"typeString": "struct LotteryBase.Ticket storage ref[] storage ref"
															}
														},
														"id": 2166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1712:4:16",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1672:44:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_ptr_$_t_struct$_Ticket_$797_storage_$returns$__$attached_to$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LotteryBase.Ticket storage ref[] storage pointer,struct LotteryBase.Ticket storage ref)"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1672:52:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2169,
												"nodeType": "ExpressionStatement",
												"src": "1672:52:16"
											},
											{
												"expression": {
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1735:35:16",
													"subExpression": {
														"baseExpression": {
															"id": 2170,
															"name": "totalTicketsPerDraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "1735:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2172,
														"indexExpression": {
															"id": 2171,
															"name": "currentRound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "1755:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1735:33:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2174,
												"nodeType": "ExpressionStatement",
												"src": "1735:35:16"
											},
											{
												"condition": {
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1785:42:16",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 2175,
																"name": "hasParticipated",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "1786:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 2177,
															"indexExpression": {
																"id": 2176,
																"name": "currentRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "1802:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1786:29:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2180,
														"indexExpression": {
															"expression": {
																"id": 2178,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1816:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1820:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1816:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1786:41:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2197,
												"nodeType": "IfStatement",
												"src": "1781:176:16",
												"trueBody": {
													"id": 2196,
													"nodeType": "Block",
													"src": "1829:128:16",
													"statements": [
														{
															"expression": {
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2182,
																			"name": "hasParticipated",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 839,
																			"src": "1843:15:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(uint256 => mapping(address => bool))"
																			}
																		},
																		"id": 2186,
																		"indexExpression": {
																			"id": 2183,
																			"name": "currentRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 780,
																			"src": "1859:12:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1843:29:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2187,
																	"indexExpression": {
																		"expression": {
																			"id": 2184,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1873:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1877:6:16",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1873:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1843:41:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1887:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1843:48:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2190,
															"nodeType": "ExpressionStatement",
															"src": "1843:48:16"
														},
														{
															"expression": {
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1905:41:16",
																"subExpression": {
																	"baseExpression": {
																		"id": 2191,
																		"name": "uniqueParticipantsPerDraw",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "1905:25:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2193,
																	"indexExpression": {
																		"id": 2192,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 780,
																		"src": "1931:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1905:39:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2195,
															"nodeType": "ExpressionStatement",
															"src": "1905:41:16"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2199,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1988:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1992:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1988:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2201,
															"name": "randomNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "2000:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																"typeString": "uint8[5] memory"
															}
														},
														{
															"id": 2202,
															"name": "currentRound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "2015:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																"typeString": "uint8[5] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2198,
														"name": "TicketPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "1972:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_uint8_$5_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8[5] memory,uint256)"
														}
													},
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1972:56:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2204,
												"nodeType": "EmitStatement",
												"src": "1967:61:16"
											}
										]
									},
									"functionSelector": "b933dcba",
									"id": 2206,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2093,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2092,
												"name": "whenNotPaused",
												"nameLocations": [
													"1157:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 948,
												"src": "1157:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1157:13:16"
										}
									],
									"name": "buyTicketWithRandomNumbers",
									"nameLocation": "1111:26:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:16"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1171:0:16"
									},
									"scope": 2605,
									"src": "1102:933:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2356,
										"nodeType": "Block",
										"src": "2129:1144:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2147:26:16",
															"subExpression": {
																"baseExpression": {
																	"id": 2214,
																	"name": "roundLocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "2148:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 2216,
																"indexExpression": {
																	"id": 2215,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "2160:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2148:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e64206c6f636b6564",
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2175:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28945168ed56bda0fb84ac18d5cc09ed8319790d248140c13044b3a068dc617d",
																"typeString": "literal_string \"Round locked\""
															},
															"value": "Round locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28945168ed56bda0fb84ac18d5cc09ed8319790d248140c13044b3a068dc617d",
																"typeString": "literal_string \"Round locked\""
															}
														],
														"id": 2213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2139:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2139:51:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2220,
												"nodeType": "ExpressionStatement",
												"src": "2139:51:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2222,
																	"name": "ticketCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "2208:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2223:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2208:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2225,
																	"name": "ticketCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "2228:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 2226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2243:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "2228:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2208:37:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d75737420627579206265747765656e203120616e64203130207469636b657473",
															"id": 2229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2247:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ef08c87b12d64bcba570526c35dd7af31de51a2a03dda49f6c0ab264d34df7b",
																"typeString": "literal_string \"Must buy between 1 and 10 tickets\""
															},
															"value": "Must buy between 1 and 10 tickets"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3ef08c87b12d64bcba570526c35dd7af31de51a2a03dda49f6c0ab264d34df7b",
																"typeString": "literal_string \"Must buy between 1 and 10 tickets\""
															}
														],
														"id": 2221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2200:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:83:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2231,
												"nodeType": "ExpressionStatement",
												"src": "2200:83:16"
											},
											{
												"assignments": [
													2233
												],
												"declarations": [
													{
														"constant": false,
														"id": 2233,
														"mutability": "mutable",
														"name": "ticketPriceETH",
														"nameLocation": "2302:14:16",
														"nodeType": "VariableDeclaration",
														"scope": 2356,
														"src": "2294:22:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2232,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2294:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2236,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2234,
														"name": "getusdTicketPriceInBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "2319:22:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2319:24:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2294:49:16"
											},
											{
												"assignments": [
													2238
												],
												"declarations": [
													{
														"constant": false,
														"id": 2238,
														"mutability": "mutable",
														"name": "totalCost",
														"nameLocation": "2361:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 2356,
														"src": "2353:17:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2237,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2353:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2242,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2239,
														"name": "ticketPriceETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2233,
														"src": "2373:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2240,
														"name": "ticketCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "2390:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2373:28:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2353:48:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2244,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2419:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2423:5:16",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2419:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2246,
																"name": "totalCost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2238,
																"src": "2432:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2419:22:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f727265637420424e4220616d6f756e74",
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2443:22:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36ef8f59c7efb155bae654f810f1eec754a38bf469a4459ed92f2e6d816c6368",
																"typeString": "literal_string \"Incorrect BNB amount\""
															},
															"value": "Incorrect BNB amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36ef8f59c7efb155bae654f810f1eec754a38bf469a4459ed92f2e6d816c6368",
																"typeString": "literal_string \"Incorrect BNB amount\""
															}
														],
														"id": 2243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2411:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:55:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "2411:55:16"
											},
											{
												"assignments": [
													2252
												],
												"declarations": [
													{
														"constant": false,
														"id": 2252,
														"mutability": "mutable",
														"name": "ownerCut",
														"nameLocation": "2485:8:16",
														"nodeType": "VariableDeclaration",
														"scope": 2356,
														"src": "2477:16:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2477:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2257,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2253,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2496:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2500:5:16",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2496:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130",
														"id": 2255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2508:2:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "2496:14:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2477:33:16"
											},
											{
												"assignments": [
													2259,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2259,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "2535:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2356,
														"src": "2530:9:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2258,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2530:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2267,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2575:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2260,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "2545:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2545:7:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2553:4:16",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2545:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2263,
																"name": "ownerCut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2252,
																"src": "2565:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2545:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2545:33:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2529:49:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2269,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "2596:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220746f206f776e6572206661696c6564",
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2602:26:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a0ea58ef11a187621d5b16e741030021a6bb6d7345cc7a59f517e423add61ea",
																"typeString": "literal_string \"Transfer to owner failed\""
															},
															"value": "Transfer to owner failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a0ea58ef11a187621d5b16e741030021a6bb6d7345cc7a59f517e423add61ea",
																"typeString": "literal_string \"Transfer to owner failed\""
															}
														],
														"id": 2268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2588:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2588:41:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2272,
												"nodeType": "ExpressionStatement",
												"src": "2588:41:16"
											},
											{
												"body": {
													"id": 2331,
													"nodeType": "Block",
													"src": "2680:401:16",
													"statements": [
														{
															"assignments": [
																2288
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2288,
																	"mutability": "mutable",
																	"name": "randomNumbers",
																	"nameLocation": "2710:13:16",
																	"nodeType": "VariableDeclaration",
																	"scope": 2331,
																	"src": "2694:29:16",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																		"typeString": "uint8[5]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 2286,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "2694:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 2287,
																		"length": {
																			"hexValue": "35",
																			"id": 2285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2700:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5_by_1",
																				"typeString": "int_const 5"
																			},
																			"value": "5"
																		},
																		"nodeType": "ArrayTypeName",
																		"src": "2694:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
																			"typeString": "uint8[5]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2291,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2289,
																	"name": "_generateRandomNumbers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2543
																	],
																	"referencedDeclaration": 2543,
																	"src": "2726:22:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_array$_t_uint8_$5_memory_ptr_$",
																		"typeString": "function () returns (uint8[5] memory)"
																	}
																},
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2726:24:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																	"typeString": "uint8[5] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2694:56:16"
														},
														{
															"assignments": [
																2294
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2294,
																	"mutability": "mutable",
																	"name": "ticket",
																	"nameLocation": "2779:6:16",
																	"nodeType": "VariableDeclaration",
																	"scope": 2331,
																	"src": "2765:20:16",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																		"typeString": "struct LotteryBase.Ticket"
																	},
																	"typeName": {
																		"id": 2293,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2292,
																			"name": "Ticket",
																			"nameLocations": [
																				"2765:6:16"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 797,
																			"src": "2765:6:16"
																		},
																		"referencedDeclaration": 797,
																		"src": "2765:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Ticket_$797_storage_ptr",
																			"typeString": "struct LotteryBase.Ticket"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2300,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2296,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2795:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2799:6:16",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2795:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2298,
																		"name": "randomNumbers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2288,
																		"src": "2807:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																			"typeString": "uint8[5] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																			"typeString": "uint8[5] memory"
																		}
																	],
																	"id": 2295,
																	"name": "Ticket",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "2788:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_Ticket_$797_storage_ptr_$",
																		"typeString": "type(struct LotteryBase.Ticket storage pointer)"
																	}
																},
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2788:33:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																	"typeString": "struct LotteryBase.Ticket memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2765:56:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2306,
																		"name": "ticket",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2294,
																		"src": "2872:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																			"typeString": "struct LotteryBase.Ticket memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																			"typeString": "struct LotteryBase.Ticket memory"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2301,
																				"name": "allRounds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 848,
																				"src": "2835:9:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Round_$829_storage_$",
																					"typeString": "mapping(uint256 => struct LotteryBase.Round storage ref)"
																				}
																			},
																			"id": 2303,
																			"indexExpression": {
																				"id": 2302,
																				"name": "currentRound",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 780,
																				"src": "2845:12:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2835:23:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Round_$829_storage",
																				"typeString": "struct LotteryBase.Round storage ref"
																			}
																		},
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2859:7:16",
																		"memberName": "tickets",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 809,
																		"src": "2835:31:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Ticket_$797_storage_$dyn_storage",
																			"typeString": "struct LotteryBase.Ticket storage ref[] storage ref"
																		}
																	},
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2867:4:16",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2835:36:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_ptr_$_t_struct$_Ticket_$797_storage_$returns$__$attached_to$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct LotteryBase.Ticket storage ref[] storage pointer,struct LotteryBase.Ticket storage ref)"
																	}
																},
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2835:44:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2308,
															"nodeType": "ExpressionStatement",
															"src": "2835:44:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2316,
																		"name": "ticket",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2294,
																		"src": "2938:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																			"typeString": "struct LotteryBase.Ticket memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																			"typeString": "struct LotteryBase.Ticket memory"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 2309,
																				"name": "playerTickets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 856,
																				"src": "2893:13:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_$_$",
																					"typeString": "mapping(uint256 => mapping(address => struct LotteryBase.Ticket storage ref[] storage ref))"
																				}
																			},
																			"id": 2313,
																			"indexExpression": {
																				"id": 2310,
																				"name": "currentRound",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 780,
																				"src": "2907:12:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2893:27:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_$",
																				"typeString": "mapping(address => struct LotteryBase.Ticket storage ref[] storage ref)"
																			}
																		},
																		"id": 2314,
																		"indexExpression": {
																			"expression": {
																				"id": 2311,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2921:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2925:6:16",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2921:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2893:39:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Ticket_$797_storage_$dyn_storage",
																			"typeString": "struct LotteryBase.Ticket storage ref[] storage ref"
																		}
																	},
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2933:4:16",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2893:44:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_ptr_$_t_struct$_Ticket_$797_storage_$returns$__$attached_to$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct LotteryBase.Ticket storage ref[] storage pointer,struct LotteryBase.Ticket storage ref)"
																	}
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2893:52:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2318,
															"nodeType": "ExpressionStatement",
															"src": "2893:52:16"
														},
														{
															"expression": {
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "2960:35:16",
																"subExpression": {
																	"baseExpression": {
																		"id": 2319,
																		"name": "totalTicketsPerDraw",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "2960:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2321,
																	"indexExpression": {
																		"id": 2320,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 780,
																		"src": "2980:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2960:33:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2323,
															"nodeType": "ExpressionStatement",
															"src": "2960:35:16"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2325,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3030:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3034:6:16",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3030:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2327,
																		"name": "randomNumbers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2288,
																		"src": "3042:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																			"typeString": "uint8[5] memory"
																		}
																	},
																	{
																		"id": 2328,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 780,
																		"src": "3057:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																			"typeString": "uint8[5] memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2324,
																	"name": "TicketPurchased",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "3014:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_uint8_$5_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint8[5] memory,uint256)"
																	}
																},
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3014:56:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2330,
															"nodeType": "EmitStatement",
															"src": "3009:61:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2277,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2274,
														"src": "2658:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2278,
														"name": "ticketCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "2662:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2658:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2332,
												"initializationExpression": {
													"assignments": [
														2274
													],
													"declarations": [
														{
															"constant": false,
															"id": 2274,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2651:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 2332,
															"src": "2645:7:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 2273,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "2645:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2276,
													"initialValue": {
														"hexValue": "30",
														"id": 2275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2655:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2645:11:16"
												},
												"loopExpression": {
													"expression": {
														"id": 2281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2675:3:16",
														"subExpression": {
															"id": 2280,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2274,
															"src": "2675:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2282,
													"nodeType": "ExpressionStatement",
													"src": "2675:3:16"
												},
												"nodeType": "ForStatement",
												"src": "2640:441:16"
											},
											{
												"condition": {
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3095:42:16",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 2333,
																"name": "hasParticipated",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "3096:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 2335,
															"indexExpression": {
																"id": 2334,
																"name": "currentRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "3112:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3096:29:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2338,
														"indexExpression": {
															"expression": {
																"id": 2336,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3126:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3130:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3126:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3096:41:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2355,
												"nodeType": "IfStatement",
												"src": "3091:176:16",
												"trueBody": {
													"id": 2354,
													"nodeType": "Block",
													"src": "3139:128:16",
													"statements": [
														{
															"expression": {
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2340,
																			"name": "hasParticipated",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 839,
																			"src": "3153:15:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(uint256 => mapping(address => bool))"
																			}
																		},
																		"id": 2344,
																		"indexExpression": {
																			"id": 2341,
																			"name": "currentRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 780,
																			"src": "3169:12:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3153:29:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2345,
																	"indexExpression": {
																		"expression": {
																			"id": 2342,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3183:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3187:6:16",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3183:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3153:41:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3197:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3153:48:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2348,
															"nodeType": "ExpressionStatement",
															"src": "3153:48:16"
														},
														{
															"expression": {
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3215:41:16",
																"subExpression": {
																	"baseExpression": {
																		"id": 2349,
																		"name": "uniqueParticipantsPerDraw",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "3215:25:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2351,
																	"indexExpression": {
																		"id": 2350,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 780,
																		"src": "3241:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3215:39:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2353,
															"nodeType": "ExpressionStatement",
															"src": "3215:41:16"
														}
													]
												}
											}
										]
									},
									"functionSelector": "dc65c843",
									"id": 2357,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2211,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2210,
												"name": "whenNotPaused",
												"nameLocations": [
													"2115:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 948,
												"src": "2115:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2115:13:16"
										}
									],
									"name": "bulkTicketsWithRandomNumbers",
									"nameLocation": "2050:28:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "ticketCount",
												"nameLocation": "2085:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "2079:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2207,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2079:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2078:19:16"
									},
									"returnParameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2129:0:16"
									},
									"scope": 2605,
									"src": "2041:1232:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2436,
										"nodeType": "Block",
										"src": "3396:345:16",
										"statements": [
											{
												"assignments": [
													2371
												],
												"declarations": [
													{
														"constant": false,
														"id": 2371,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "3414:3:16",
														"nodeType": "VariableDeclaration",
														"scope": 2436,
														"src": "3406:11:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3406:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2379,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 2372,
																"name": "playerTickets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "3420:13:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_$_$",
																	"typeString": "mapping(uint256 => mapping(address => struct LotteryBase.Ticket storage ref[] storage ref))"
																}
															},
															"id": 2374,
															"indexExpression": {
																"id": 2373,
																"name": "round",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2359,
																"src": "3434:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3420:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct LotteryBase.Ticket storage ref[] storage ref)"
															}
														},
														"id": 2377,
														"indexExpression": {
															"expression": {
																"id": 2375,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3441:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3445:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3441:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3420:32:16",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Ticket_$797_storage_$dyn_storage",
															"typeString": "struct LotteryBase.Ticket storage ref[] storage ref"
														}
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3453:6:16",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3420:39:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3406:53:16"
											},
											{
												"expression": {
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2380,
														"name": "players",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2363,
														"src": "3469:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2384,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "3493:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "3479:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2381,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3483:7:16",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2382,
																"nodeType": "ArrayTypeName",
																"src": "3483:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 2385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3479:18:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "3469:28:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 2387,
												"nodeType": "ExpressionStatement",
												"src": "3469:28:16"
											},
											{
												"expression": {
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2388,
														"name": "numbersList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2368,
														"src": "3507:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_array$_t_uint8_$5_memory_ptr_$dyn_memory_ptr",
															"typeString": "uint8[5] memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2394,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "3536:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "3521:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint8_$5_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint8[5] memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"baseType": {
																		"id": 2389,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3525:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2391,
																	"length": {
																		"hexValue": "35",
																		"id": 2390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3531:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	},
																	"nodeType": "ArrayTypeName",
																	"src": "3525:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
																		"typeString": "uint8[5]"
																	}
																},
																"id": 2392,
																"nodeType": "ArrayTypeName",
																"src": "3525:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_array$_t_uint8_$5_storage_$dyn_storage_ptr",
																	"typeString": "uint8[5][]"
																}
															}
														},
														"id": 2395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3521:19:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_array$_t_uint8_$5_memory_ptr_$dyn_memory_ptr",
															"typeString": "uint8[5] memory[] memory"
														}
													},
													"src": "3507:33:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_array$_t_uint8_$5_memory_ptr_$dyn_memory_ptr",
														"typeString": "uint8[5] memory[] memory"
													}
												},
												"id": 2397,
												"nodeType": "ExpressionStatement",
												"src": "3507:33:16"
											},
											{
												"body": {
													"id": 2434,
													"nodeType": "Block",
													"src": "3582:153:16",
													"statements": [
														{
															"assignments": [
																2410
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2410,
																	"mutability": "mutable",
																	"name": "t",
																	"nameLocation": "3610:1:16",
																	"nodeType": "VariableDeclaration",
																	"scope": 2434,
																	"src": "3596:15:16",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																		"typeString": "struct LotteryBase.Ticket"
																	},
																	"typeName": {
																		"id": 2409,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2408,
																			"name": "Ticket",
																			"nameLocations": [
																				"3596:6:16"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 797,
																			"src": "3596:6:16"
																		},
																		"referencedDeclaration": 797,
																		"src": "3596:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Ticket_$797_storage_ptr",
																			"typeString": "struct LotteryBase.Ticket"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2419,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2411,
																			"name": "playerTickets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "3614:13:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_$_$",
																				"typeString": "mapping(uint256 => mapping(address => struct LotteryBase.Ticket storage ref[] storage ref))"
																			}
																		},
																		"id": 2413,
																		"indexExpression": {
																			"id": 2412,
																			"name": "round",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2359,
																			"src": "3628:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3614:20:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Ticket_$797_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct LotteryBase.Ticket storage ref[] storage ref)"
																		}
																	},
																	"id": 2416,
																	"indexExpression": {
																		"expression": {
																			"id": 2414,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3635:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3639:6:16",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3635:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3614:32:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Ticket_$797_storage_$dyn_storage",
																		"typeString": "struct LotteryBase.Ticket storage ref[] storage ref"
																	}
																},
																"id": 2418,
																"indexExpression": {
																	"id": 2417,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2399,
																	"src": "3647:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3614:35:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Ticket_$797_storage",
																	"typeString": "struct LotteryBase.Ticket storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3596:53:16"
														},
														{
															"expression": {
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2420,
																		"name": "players",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2363,
																		"src": "3663:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2422,
																	"indexExpression": {
																		"id": 2421,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "3671:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3663:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2423,
																		"name": "t",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2410,
																		"src": "3676:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																			"typeString": "struct LotteryBase.Ticket memory"
																		}
																	},
																	"id": 2424,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3678:6:16",
																	"memberName": "player",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 792,
																	"src": "3676:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3663:21:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2426,
															"nodeType": "ExpressionStatement",
															"src": "3663:21:16"
														},
														{
															"expression": {
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2427,
																		"name": "numbersList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2368,
																		"src": "3698:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_array$_t_uint8_$5_memory_ptr_$dyn_memory_ptr",
																			"typeString": "uint8[5] memory[] memory"
																		}
																	},
																	"id": 2429,
																	"indexExpression": {
																		"id": 2428,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "3710:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3698:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																		"typeString": "uint8[5] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2430,
																		"name": "t",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2410,
																		"src": "3715:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Ticket_$797_memory_ptr",
																			"typeString": "struct LotteryBase.Ticket memory"
																		}
																	},
																	"id": 2431,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3717:7:16",
																	"memberName": "numbers",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 796,
																	"src": "3715:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																		"typeString": "uint8[5] memory"
																	}
																},
																"src": "3698:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																	"typeString": "uint8[5] memory"
																}
															},
															"id": 2433,
															"nodeType": "ExpressionStatement",
															"src": "3698:26:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2402,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "3568:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2403,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2371,
														"src": "3572:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3568:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2435,
												"initializationExpression": {
													"assignments": [
														2399
													],
													"declarations": [
														{
															"constant": false,
															"id": 2399,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3561:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 2435,
															"src": "3556:6:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2398,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3556:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2401,
													"initialValue": {
														"hexValue": "30",
														"id": 2400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3565:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3556:10:16"
												},
												"loopExpression": {
													"expression": {
														"id": 2406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3577:3:16",
														"subExpression": {
															"id": 2405,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2399,
															"src": "3577:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2407,
													"nodeType": "ExpressionStatement",
													"src": "3577:3:16"
												},
												"nodeType": "ForStatement",
												"src": "3551:184:16"
											}
										]
									},
									"functionSelector": "c81d9217",
									"id": 2437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyTickets",
									"nameLocation": "3288:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "round",
												"nameLocation": "3309:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "3301:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3300:15:16"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "players",
												"nameLocation": "3356:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "3339:24:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2361,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3339:7:16",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2362,
													"nodeType": "ArrayTypeName",
													"src": "3339:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "numbersList",
												"nameLocation": "3383:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "3365:29:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_array$_t_uint8_$5_memory_ptr_$dyn_memory_ptr",
													"typeString": "uint8[5][]"
												},
												"typeName": {
													"baseType": {
														"baseType": {
															"id": 2364,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3365:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"id": 2366,
														"length": {
															"hexValue": "35",
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3371:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"nodeType": "ArrayTypeName",
														"src": "3365:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
															"typeString": "uint8[5]"
														}
													},
													"id": 2367,
													"nodeType": "ArrayTypeName",
													"src": "3365:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_array$_t_uint8_$5_storage_$dyn_storage_ptr",
														"typeString": "uint8[5][]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3338:57:16"
									},
									"scope": 2605,
									"src": "3279:462:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1442
									],
									"body": {
										"id": 2542,
										"nodeType": "Block",
										"src": "3832:654:16",
										"statements": [
											{
												"assignments": [
													2446
												],
												"declarations": [
													{
														"constant": false,
														"id": 2446,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "3848:5:16",
														"nodeType": "VariableDeclaration",
														"scope": 2542,
														"src": "3842:11:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2445,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3842:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2448,
												"initialValue": {
													"hexValue": "30",
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3856:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3842:15:16"
											},
											{
												"assignments": [
													2450
												],
												"declarations": [
													{
														"constant": false,
														"id": 2450,
														"mutability": "mutable",
														"name": "seed",
														"nameLocation": "3875:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2542,
														"src": "3867:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2449,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3867:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2464,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 2456,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3917:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 2457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3923:9:16",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "3917:15:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 2458,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3934:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3938:6:16",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3934:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2460,
																			"name": "nonce",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 890,
																			"src": "3946:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2454,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3900:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3904:12:16",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "3900:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3900:52:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2453,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3890:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3890:63:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3882:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3882:7:16",
															"typeDescriptions": {}
														}
													},
													"id": 2463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3882:72:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3867:87:16"
											},
											{
												"expression": {
													"id": 2466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "3964:7:16",
													"subExpression": {
														"id": 2465,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "3964:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2467,
												"nodeType": "ExpressionStatement",
												"src": "3964:7:16"
											},
											{
												"body": {
													"id": 2538,
													"nodeType": "Block",
													"src": "4000:457:16",
													"statements": [
														{
															"assignments": [
																2472
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2472,
																	"mutability": "mutable",
																	"name": "num",
																	"nameLocation": "4020:3:16",
																	"nodeType": "VariableDeclaration",
																	"scope": 2538,
																	"src": "4014:9:16",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 2471,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "4014:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2482,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2477,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2475,
																						"name": "seed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2450,
																						"src": "4033:4:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"hexValue": "3530",
																						"id": 2476,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4040:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_50_by_1",
																							"typeString": "int_const 50"
																						},
																						"value": "50"
																					},
																					"src": "4033:9:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2478,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4032:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4046:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4032:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4026:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 2473,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "4026:5:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4026:22:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4014:34:16"
														},
														{
															"assignments": [
																2484
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2484,
																	"mutability": "mutable",
																	"name": "exists",
																	"nameLocation": "4067:6:16",
																	"nodeType": "VariableDeclaration",
																	"scope": 2538,
																	"src": "4062:11:16",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2483,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "4062:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2486,
															"initialValue": {
																"hexValue": "66616c7365",
																"id": 2485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4076:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4062:19:16"
														},
														{
															"body": {
																"id": 2509,
																"nodeType": "Block",
																"src": "4130:135:16",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 2501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 2497,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "4152:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																						"typeString": "uint8[5] memory"
																					}
																				},
																				"id": 2499,
																				"indexExpression": {
																					"id": 2498,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2488,
																					"src": "4159:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4152:9:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2500,
																				"name": "num",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2472,
																				"src": "4165:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "4152:16:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2508,
																		"nodeType": "IfStatement",
																		"src": "4148:103:16",
																		"trueBody": {
																			"id": 2507,
																			"nodeType": "Block",
																			"src": "4170:81:16",
																			"statements": [
																				{
																					"expression": {
																						"id": 2504,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 2502,
																							"name": "exists",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2484,
																							"src": "4192:6:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 2503,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4201:4:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "4192:13:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 2505,
																					"nodeType": "ExpressionStatement",
																					"src": "4192:13:16"
																				},
																				{
																					"id": 2506,
																					"nodeType": "Break",
																					"src": "4227:5:16"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2491,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2488,
																	"src": "4114:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2492,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2446,
																	"src": "4118:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4114:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2510,
															"initializationExpression": {
																"assignments": [
																	2488
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2488,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "4107:1:16",
																		"nodeType": "VariableDeclaration",
																		"scope": 2510,
																		"src": "4101:7:16",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"typeName": {
																			"id": 2487,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "4101:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2490,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4111:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4101:11:16"
															},
															"loopExpression": {
																"expression": {
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "4125:3:16",
																	"subExpression": {
																		"id": 2494,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2488,
																		"src": "4125:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 2496,
																"nodeType": "ExpressionStatement",
																"src": "4125:3:16"
															},
															"nodeType": "ForStatement",
															"src": "4096:169:16"
														},
														{
															"condition": {
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4283:7:16",
																"subExpression": {
																	"id": 2511,
																	"name": "exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "4284:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2523,
															"nodeType": "IfStatement",
															"src": "4279:90:16",
															"trueBody": {
																"id": 2522,
																"nodeType": "Block",
																"src": "4292:77:16",
																"statements": [
																	{
																		"expression": {
																			"id": 2517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2513,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "4310:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																						"typeString": "uint8[5] memory"
																					}
																				},
																				"id": 2515,
																				"indexExpression": {
																					"id": 2514,
																					"name": "count",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2446,
																					"src": "4317:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4310:13:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2516,
																				"name": "num",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2472,
																				"src": "4326:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "4310:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 2518,
																		"nodeType": "ExpressionStatement",
																		"src": "4310:19:16"
																	},
																	{
																		"expression": {
																			"id": 2520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "4347:7:16",
																			"subExpression": {
																				"id": 2519,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2446,
																				"src": "4347:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 2521,
																		"nodeType": "ExpressionStatement",
																		"src": "4347:7:16"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2524,
																	"name": "seed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2450,
																	"src": "4383:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2530,
																							"name": "seed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2450,
																							"src": "4425:4:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 2531,
																							"name": "count",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2446,
																							"src": "4431:5:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						{
																							"id": 2532,
																							"name": "nonce",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 890,
																							"src": "4438:5:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 2528,
																							"name": "abi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967295,
																							"src": "4408:3:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_abi",
																								"typeString": "abi"
																							}
																						},
																						"id": 2529,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "4412:12:16",
																						"memberName": "encodePacked",
																						"nodeType": "MemberAccess",
																						"src": "4408:16:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () pure returns (bytes memory)"
																						}
																					},
																					"id": 2533,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4408:36:16",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 2527,
																				"name": "keccak256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967288,
																				"src": "4398:9:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																					"typeString": "function (bytes memory) pure returns (bytes32)"
																				}
																			},
																			"id": 2534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4398:47:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4390:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2525,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4390:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4390:56:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4383:63:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2537,
															"nodeType": "ExpressionStatement",
															"src": "4383:63:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2468,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2446,
														"src": "3989:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "35",
														"id": 2469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3997:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "3989:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2539,
												"nodeType": "WhileStatement",
												"src": "3982:475:16"
											},
											{
												"expression": {
													"id": 2540,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2443,
													"src": "4473:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
														"typeString": "uint8[5] memory"
													}
												},
												"functionReturnParameters": 2444,
												"id": 2541,
												"nodeType": "Return",
												"src": "4466:13:16"
											}
										]
									},
									"id": 2543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_generateRandomNumbers",
									"nameLocation": "3756:22:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2439,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3790:8:16"
									},
									"parameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:2:16"
									},
									"returnParameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3824:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "3808:22:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
													"typeString": "uint8[5]"
												},
												"typeName": {
													"baseType": {
														"id": 2440,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "3808:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2442,
													"length": {
														"hexValue": "35",
														"id": 2441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3814:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "3808:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
														"typeString": "uint8[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:24:16"
									},
									"scope": 2605,
									"src": "3747:739:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1435
									],
									"body": {
										"id": 2603,
										"nodeType": "Block",
										"src": "4581:259:16",
										"statements": [
											{
												"body": {
													"id": 2599,
													"nodeType": "Block",
													"src": "4620:193:16",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 2567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2563,
																			"name": "numbers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "4638:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																				"typeString": "uint8[5] memory"
																			}
																		},
																		"id": 2565,
																		"indexExpression": {
																			"id": 2564,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2554,
																			"src": "4646:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4638:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4651:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "4638:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 2572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2568,
																			"name": "numbers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "4656:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																				"typeString": "uint8[5] memory"
																			}
																		},
																		"id": 2570,
																		"indexExpression": {
																			"id": 2569,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2554,
																			"src": "4664:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4656:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "3530",
																		"id": 2571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4669:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_50_by_1",
																			"typeString": "int_const 50"
																		},
																		"value": "50"
																	},
																	"src": "4656:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4638:33:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2576,
															"nodeType": "IfStatement",
															"src": "4634:51:16",
															"trueBody": {
																"expression": {
																	"hexValue": "66616c7365",
																	"id": 2574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4680:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"functionReturnParameters": 2552,
																"id": 2575,
																"nodeType": "Return",
																"src": "4673:12:16"
															}
														},
														{
															"body": {
																"id": 2597,
																"nodeType": "Block",
																"src": "4728:75:16",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 2593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 2587,
																					"name": "numbers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2547,
																					"src": "4750:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																						"typeString": "uint8[5] memory"
																					}
																				},
																				"id": 2589,
																				"indexExpression": {
																					"id": 2588,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2554,
																					"src": "4758:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4750:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 2590,
																					"name": "numbers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2547,
																					"src": "4764:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
																						"typeString": "uint8[5] memory"
																					}
																				},
																				"id": 2592,
																				"indexExpression": {
																					"id": 2591,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2578,
																					"src": "4772:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4764:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "4750:24:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2596,
																		"nodeType": "IfStatement",
																		"src": "4746:42:16",
																		"trueBody": {
																			"expression": {
																				"hexValue": "66616c7365",
																				"id": 2594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4783:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"functionReturnParameters": 2552,
																			"id": 2595,
																			"nodeType": "Return",
																			"src": "4776:12:16"
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2581,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2578,
																	"src": "4716:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2582,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2554,
																	"src": "4720:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4716:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2598,
															"initializationExpression": {
																"assignments": [
																	2578
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2578,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "4709:1:16",
																		"nodeType": "VariableDeclaration",
																		"scope": 2598,
																		"src": "4704:6:16",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2577,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "4704:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2580,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4713:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4704:10:16"
															},
															"loopExpression": {
																"expression": {
																	"id": 2585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "4723:3:16",
																	"subExpression": {
																		"id": 2584,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2578,
																		"src": "4723:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2586,
																"nodeType": "ExpressionStatement",
																"src": "4723:3:16"
															},
															"nodeType": "ForStatement",
															"src": "4699:104:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2557,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2554,
														"src": "4608:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "35",
														"id": 2558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4612:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "4608:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2600,
												"initializationExpression": {
													"assignments": [
														2554
													],
													"declarations": [
														{
															"constant": false,
															"id": 2554,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4601:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 2600,
															"src": "4596:6:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2553,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4596:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2556,
													"initialValue": {
														"hexValue": "30",
														"id": 2555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4605:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4596:10:16"
												},
												"loopExpression": {
													"expression": {
														"id": 2561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4615:3:16",
														"subExpression": {
															"id": 2560,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2554,
															"src": "4615:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2562,
													"nodeType": "ExpressionStatement",
													"src": "4615:3:16"
												},
												"nodeType": "ForStatement",
												"src": "4591:222:16"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2601,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4829:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2552,
												"id": 2602,
												"nodeType": "Return",
												"src": "4822:11:16"
											}
										]
									},
									"id": 2604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateNumbers",
									"nameLocation": "4501:16:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2549,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4557:8:16"
									},
									"parameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "numbers",
												"nameLocation": "4534:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "4518:23:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
													"typeString": "uint8[5]"
												},
												"typeName": {
													"baseType": {
														"id": 2544,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "4518:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2546,
													"length": {
														"hexValue": "35",
														"id": 2545,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4524:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "4518:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
														"typeString": "uint8[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4517:25:16"
									},
									"returnParameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "4575:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4575:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:6:16"
									},
									"scope": 2605,
									"src": "4492:348:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2606,
							"src": "86:4761:16",
							"usedErrors": [
								332,
								340,
								342
							]
						}
					],
					"src": "32:4816:16"
				},
				"id": 16
			}
		}
	}
}